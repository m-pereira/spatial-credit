2023-06-11 15:31:23,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-11 15:31:23,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-11 15:31:23,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-11 15:31:23,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-11 15:31:25,156:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-11 15:40:06,652:WARNING:/tmp/ipykernel_15113/633613311.py:2: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = df.drop('cod_ibge', 'uf','municipio',1)

2023-06-11 15:40:18,517:WARNING:/tmp/ipykernel_15113/2849030477.py:2: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = df.drop('cod_ibge',1)

2023-06-11 15:40:43,246:WARNING:/tmp/ipykernel_15113/3484293485.py:2: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = df.drop('cod_ibge',1)

2023-06-11 15:40:43,249:WARNING:/tmp/ipykernel_15113/3484293485.py:3: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = dataset.drop('uf',1)

2023-06-11 15:40:43,251:WARNING:/tmp/ipykernel_15113/3484293485.py:4: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = dataset.drop('municipio',1)

2023-06-11 15:43:51,222:WARNING:/tmp/ipykernel_15113/3890899417.py:3: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = dataset.drop('cod_ibge',1)

2023-06-11 15:43:51,223:WARNING:/tmp/ipykernel_15113/3890899417.py:4: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = dataset.drop('uf',1)

2023-06-11 15:43:51,224:WARNING:/tmp/ipykernel_15113/3890899417.py:5: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  dataset = dataset.drop('municipio',1)

2023-06-11 19:15:34,102:INFO:PyCaret RegressionExperiment
2023-06-11 19:15:34,103:INFO:Logging name: reg-default-name
2023-06-11 19:15:34,103:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:15:34,103:INFO:version 3.0.0.rc4
2023-06-11 19:15:34,103:INFO:Initializing setup()
2023-06-11 19:15:34,103:INFO:self.USI: 2af5
2023-06-11 19:15:34,103:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:15:34,104:INFO:Checking environment
2023-06-11 19:15:34,104:INFO:python_version: 3.10.6
2023-06-11 19:15:34,104:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:15:34,104:INFO:machine: x86_64
2023-06-11 19:15:34,104:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:15:34,104:INFO:Memory: svmem(total=6088237056, available=1965568000, percent=67.7, used=3699638272, free=459964416, active=1801740288, inactive=2911600640, buffers=65888256, cached=1862746112, shared=123666432, slab=450256896)
2023-06-11 19:15:34,106:INFO:Physical Core: 4
2023-06-11 19:15:34,107:INFO:Logical Core: 8
2023-06-11 19:15:34,107:INFO:Checking libraries
2023-06-11 19:15:34,107:INFO:System:
2023-06-11 19:15:34,107:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:15:34,107:INFO:executable: /usr/bin/python3
2023-06-11 19:15:34,107:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:15:34,107:INFO:PyCaret required dependencies:
2023-06-11 19:15:34,107:INFO:                 pip: 22.0.2
2023-06-11 19:15:34,108:INFO:          setuptools: 59.6.0
2023-06-11 19:15:34,108:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:15:34,108:INFO:             IPython: 8.5.0
2023-06-11 19:15:34,108:INFO:          ipywidgets: 8.0.2
2023-06-11 19:15:34,108:INFO:                tqdm: 4.64.1
2023-06-11 19:15:34,108:INFO:               numpy: 1.22.4
2023-06-11 19:15:34,108:INFO:              pandas: 1.4.4
2023-06-11 19:15:34,108:INFO:              jinja2: 3.1.2
2023-06-11 19:15:34,108:INFO:               scipy: 1.8.1
2023-06-11 19:15:34,108:INFO:              joblib: 1.2.0
2023-06-11 19:15:34,108:INFO:             sklearn: 1.1.2
2023-06-11 19:15:34,109:INFO:                pyod: 1.0.5
2023-06-11 19:15:34,109:INFO:            imblearn: 0.9.1
2023-06-11 19:15:34,109:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:15:34,109:INFO:            lightgbm: 3.3.2
2023-06-11 19:15:34,109:INFO:               numba: 0.55.2
2023-06-11 19:15:34,109:INFO:            requests: 2.25.1
2023-06-11 19:15:34,109:INFO:          matplotlib: 3.6.0
2023-06-11 19:15:34,109:INFO:          scikitplot: 0.3.7
2023-06-11 19:15:34,109:INFO:         yellowbrick: 1.5
2023-06-11 19:15:34,109:INFO:              plotly: 5.10.0
2023-06-11 19:15:34,110:INFO:             kaleido: 0.2.1
2023-06-11 19:15:34,110:INFO:         statsmodels: 0.13.2
2023-06-11 19:15:34,110:INFO:              sktime: 0.13.4
2023-06-11 19:15:34,110:INFO:               tbats: 1.1.1
2023-06-11 19:15:34,110:INFO:            pmdarima: 1.8.5
2023-06-11 19:15:34,110:INFO:              psutil: 5.9.2
2023-06-11 19:15:34,110:INFO:PyCaret optional dependencies:
2023-06-11 19:15:40,489:INFO:                shap: Not installed
2023-06-11 19:15:40,489:INFO:           interpret: Not installed
2023-06-11 19:15:40,489:INFO:                umap: Not installed
2023-06-11 19:15:40,489:INFO:    pandas_profiling: Not installed
2023-06-11 19:15:40,489:INFO:  explainerdashboard: Not installed
2023-06-11 19:15:40,489:INFO:             autoviz: Not installed
2023-06-11 19:15:40,489:INFO:           fairlearn: Not installed
2023-06-11 19:15:40,489:INFO:             xgboost: Not installed
2023-06-11 19:15:40,489:INFO:            catboost: Not installed
2023-06-11 19:15:40,489:INFO:              kmodes: Not installed
2023-06-11 19:15:40,490:INFO:             mlxtend: 0.21.0
2023-06-11 19:15:40,490:INFO:       statsforecast: Not installed
2023-06-11 19:15:40,490:INFO:        tune_sklearn: Not installed
2023-06-11 19:15:40,490:INFO:                 ray: Not installed
2023-06-11 19:15:40,490:INFO:            hyperopt: Not installed
2023-06-11 19:15:40,490:INFO:              optuna: Not installed
2023-06-11 19:15:40,490:INFO:               skopt: Not installed
2023-06-11 19:15:40,490:INFO:              mlflow: 1.29.0
2023-06-11 19:15:40,490:INFO:              gradio: 3.4.1
2023-06-11 19:15:40,490:INFO:             fastapi: 0.85.0
2023-06-11 19:15:40,490:INFO:             uvicorn: 0.18.3
2023-06-11 19:15:40,490:INFO:              m2cgen: 0.10.0
2023-06-11 19:15:40,490:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:15:40,490:INFO:                nltk: 3.7
2023-06-11 19:15:40,491:INFO:            pyLDAvis: Not installed
2023-06-11 19:15:40,491:INFO:              gensim: Not installed
2023-06-11 19:15:40,491:INFO:               spacy: 3.5.0
2023-06-11 19:15:40,491:INFO:           wordcloud: Not installed
2023-06-11 19:15:40,491:INFO:            textblob: 0.17.1
2023-06-11 19:15:40,491:INFO:               fugue: Not installed
2023-06-11 19:15:40,491:INFO:           streamlit: 1.13.0
2023-06-11 19:15:40,491:INFO:             prophet: Not installed
2023-06-11 19:15:40,491:INFO:None
2023-06-11 19:15:40,491:INFO:Set up data.
2023-06-11 19:15:42,698:INFO:PyCaret RegressionExperiment
2023-06-11 19:15:42,698:INFO:Logging name: reg-default-name
2023-06-11 19:15:42,698:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:15:42,698:INFO:version 3.0.0.rc4
2023-06-11 19:15:42,698:INFO:Initializing setup()
2023-06-11 19:15:42,698:INFO:self.USI: 3aea
2023-06-11 19:15:42,698:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:15:42,698:INFO:Checking environment
2023-06-11 19:15:42,698:INFO:python_version: 3.10.6
2023-06-11 19:15:42,699:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:15:42,699:INFO:machine: x86_64
2023-06-11 19:15:42,699:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:15:42,699:INFO:Memory: svmem(total=6088237056, available=1917853696, percent=68.5, used=3742580736, free=373456896, active=1816805376, inactive=2975174656, buffers=80400384, cached=1891799040, shared=127078400, slab=453021696)
2023-06-11 19:15:42,700:INFO:Physical Core: 4
2023-06-11 19:15:42,702:INFO:Logical Core: 8
2023-06-11 19:15:42,702:INFO:Checking libraries
2023-06-11 19:15:42,702:INFO:System:
2023-06-11 19:15:42,702:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:15:42,702:INFO:executable: /usr/bin/python3
2023-06-11 19:15:42,702:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:15:42,702:INFO:PyCaret required dependencies:
2023-06-11 19:15:42,702:INFO:                 pip: 22.0.2
2023-06-11 19:15:42,702:INFO:          setuptools: 59.6.0
2023-06-11 19:15:42,702:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:15:42,702:INFO:             IPython: 8.5.0
2023-06-11 19:15:42,702:INFO:          ipywidgets: 8.0.2
2023-06-11 19:15:42,702:INFO:                tqdm: 4.64.1
2023-06-11 19:15:42,702:INFO:               numpy: 1.22.4
2023-06-11 19:15:42,702:INFO:              pandas: 1.4.4
2023-06-11 19:15:42,702:INFO:              jinja2: 3.1.2
2023-06-11 19:15:42,702:INFO:               scipy: 1.8.1
2023-06-11 19:15:42,702:INFO:              joblib: 1.2.0
2023-06-11 19:15:42,702:INFO:             sklearn: 1.1.2
2023-06-11 19:15:42,702:INFO:                pyod: 1.0.5
2023-06-11 19:15:42,702:INFO:            imblearn: 0.9.1
2023-06-11 19:15:42,703:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:15:42,703:INFO:            lightgbm: 3.3.2
2023-06-11 19:15:42,703:INFO:               numba: 0.55.2
2023-06-11 19:15:42,703:INFO:            requests: 2.25.1
2023-06-11 19:15:42,703:INFO:          matplotlib: 3.6.0
2023-06-11 19:15:42,703:INFO:          scikitplot: 0.3.7
2023-06-11 19:15:42,703:INFO:         yellowbrick: 1.5
2023-06-11 19:15:42,703:INFO:              plotly: 5.10.0
2023-06-11 19:15:42,703:INFO:             kaleido: 0.2.1
2023-06-11 19:15:42,703:INFO:         statsmodels: 0.13.2
2023-06-11 19:15:42,703:INFO:              sktime: 0.13.4
2023-06-11 19:15:42,703:INFO:               tbats: 1.1.1
2023-06-11 19:15:42,703:INFO:            pmdarima: 1.8.5
2023-06-11 19:15:42,703:INFO:              psutil: 5.9.2
2023-06-11 19:15:42,703:INFO:PyCaret optional dependencies:
2023-06-11 19:15:42,703:INFO:                shap: Not installed
2023-06-11 19:15:42,703:INFO:           interpret: Not installed
2023-06-11 19:15:42,703:INFO:                umap: Not installed
2023-06-11 19:15:42,703:INFO:    pandas_profiling: Not installed
2023-06-11 19:15:42,704:INFO:  explainerdashboard: Not installed
2023-06-11 19:15:42,704:INFO:             autoviz: Not installed
2023-06-11 19:15:42,704:INFO:           fairlearn: Not installed
2023-06-11 19:15:42,704:INFO:             xgboost: Not installed
2023-06-11 19:15:42,704:INFO:            catboost: Not installed
2023-06-11 19:15:42,704:INFO:              kmodes: Not installed
2023-06-11 19:15:42,704:INFO:             mlxtend: 0.21.0
2023-06-11 19:15:42,704:INFO:       statsforecast: Not installed
2023-06-11 19:15:42,704:INFO:        tune_sklearn: Not installed
2023-06-11 19:15:42,704:INFO:                 ray: Not installed
2023-06-11 19:15:42,704:INFO:            hyperopt: Not installed
2023-06-11 19:15:42,704:INFO:              optuna: Not installed
2023-06-11 19:15:42,704:INFO:               skopt: Not installed
2023-06-11 19:15:42,704:INFO:              mlflow: 1.29.0
2023-06-11 19:15:42,704:INFO:              gradio: 3.4.1
2023-06-11 19:15:42,704:INFO:             fastapi: 0.85.0
2023-06-11 19:15:42,704:INFO:             uvicorn: 0.18.3
2023-06-11 19:15:42,704:INFO:              m2cgen: 0.10.0
2023-06-11 19:15:42,704:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:15:42,704:INFO:                nltk: 3.7
2023-06-11 19:15:42,704:INFO:            pyLDAvis: Not installed
2023-06-11 19:15:42,704:INFO:              gensim: Not installed
2023-06-11 19:15:42,704:INFO:               spacy: 3.5.0
2023-06-11 19:15:42,704:INFO:           wordcloud: Not installed
2023-06-11 19:15:42,704:INFO:            textblob: 0.17.1
2023-06-11 19:15:42,705:INFO:               fugue: Not installed
2023-06-11 19:15:42,705:INFO:           streamlit: 1.13.0
2023-06-11 19:15:42,705:INFO:             prophet: Not installed
2023-06-11 19:15:42,705:INFO:None
2023-06-11 19:15:42,705:INFO:Set up data.
2023-06-11 19:15:42,766:INFO:Set up train/test split.
2023-06-11 19:15:42,790:INFO:Set up index.
2023-06-11 19:15:42,790:INFO:Set up folding strategy.
2023-06-11 19:15:42,791:INFO:Assigning column types.
2023-06-11 19:15:42,800:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-11 19:15:42,800:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:15:42,815:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:15:42,828:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:15:42,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:42,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:42,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,016:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,021:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,027:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,095:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,148:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-11 19:15:43,153:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,158:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,288:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,355:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,411:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-11 19:15:43,422:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,492:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,559:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,628:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,682:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,683:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-11 19:15:43,766:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,822:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,905:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,960:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:15:43,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:43,965:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-11 19:15:44,048:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:44,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,185:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:15:44,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,239:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-11 19:15:44,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:44,515:INFO:Preparing preprocessing pipeline...
2023-06-11 19:15:44,516:INFO:Set up simple imputation.
2023-06-11 19:15:44,525:INFO:Set up encoding of categorical features.
2023-06-11 19:15:44,526:INFO:Set up variance threshold.
2023-06-11 19:15:44,840:INFO:Finished creating preprocessing pipeline.
2023-06-11 19:15:44,849:INFO:Pipeline: Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                 TransformerWrapper(include=['microrregiao', 'mesorregiao',
                                             'nome_da_regiao_rural',
                                             'regiao_metropolitana'],
                                    transformer=LeaveOneOutEncoder(cols=['microrregiao',
                                                                         'mesorregiao',
                                                                         'nome_da_regiao_rural',
                                                                         'regiao_metropolitana'],
                                                                   handle_missing='return_nan',
                                                                   random_state=123))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2023-06-11 19:15:44,849:INFO:Creating final display dataframe.
2023-06-11 19:15:45,563:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           credito
2                Target type        Regression
3                 Data shape        (2190, 32)
4           Train data shape        (1532, 32)
5            Test data shape         (658, 32)
6           Numeric features                27
7       Categorical features                 4
8   Rows with missing values             71.9%
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              3aea
2023-06-11 19:15:45,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:45,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:45,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:45,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:15:45,847:INFO:setup() successfully completed in 3.15s...............
2023-06-11 19:16:18,902:INFO:Initializing compare_models()
2023-06-11 19:16:18,902:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, include=None, fold=5, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:16:18,903:INFO:Checking exceptions
2023-06-11 19:16:18,909:INFO:Preparing display monitor
2023-06-11 19:16:19,004:INFO:Initializing Linear Regression
2023-06-11 19:16:19,004:INFO:Total runtime is 8.324782053629557e-06 minutes
2023-06-11 19:16:19,012:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:19,013:INFO:Initializing create_model()
2023-06-11 19:16:19,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:19,013:INFO:Checking exceptions
2023-06-11 19:16:19,018:INFO:Importing libraries
2023-06-11 19:16:19,019:INFO:Copying training dataset
2023-06-11 19:16:19,026:INFO:Defining folds
2023-06-11 19:16:19,026:INFO:Declaring metric variables
2023-06-11 19:16:19,032:INFO:Importing untrained model
2023-06-11 19:16:19,036:INFO:Linear Regression Imported successfully
2023-06-11 19:16:19,043:INFO:Starting cross validation
2023-06-11 19:16:19,052:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:25,720:INFO:Calculating mean and std
2023-06-11 19:16:25,725:INFO:Creating metrics dataframe
2023-06-11 19:16:25,737:INFO:Uploading results into container
2023-06-11 19:16:25,739:INFO:Uploading model into container now
2023-06-11 19:16:25,741:INFO:master_model_container: 1
2023-06-11 19:16:25,741:INFO:display_container: 2
2023-06-11 19:16:25,742:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:16:25,742:INFO:create_model() successfully completed......................................
2023-06-11 19:16:26,148:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:26,148:INFO:Creating metrics dataframe
2023-06-11 19:16:26,158:INFO:Initializing Lasso Regression
2023-06-11 19:16:26,158:INFO:Total runtime is 0.11923825740814209 minutes
2023-06-11 19:16:26,163:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:26,163:INFO:Initializing create_model()
2023-06-11 19:16:26,163:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:26,163:INFO:Checking exceptions
2023-06-11 19:16:26,166:INFO:Importing libraries
2023-06-11 19:16:26,166:INFO:Copying training dataset
2023-06-11 19:16:26,171:INFO:Defining folds
2023-06-11 19:16:26,171:INFO:Declaring metric variables
2023-06-11 19:16:26,175:INFO:Importing untrained model
2023-06-11 19:16:26,181:INFO:Lasso Regression Imported successfully
2023-06-11 19:16:26,191:INFO:Starting cross validation
2023-06-11 19:16:26,193:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:26,358:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.119e+22, tolerance: 3.176e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:26,361:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.049e+21, tolerance: 4.464e+18
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:27,829:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.543e+22, tolerance: 3.374e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:27,870:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.026e+22, tolerance: 3.359e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:27,881:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.152e+22, tolerance: 3.168e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:28,009:INFO:Calculating mean and std
2023-06-11 19:16:28,014:INFO:Creating metrics dataframe
2023-06-11 19:16:28,021:INFO:Uploading results into container
2023-06-11 19:16:28,022:INFO:Uploading model into container now
2023-06-11 19:16:28,023:INFO:master_model_container: 2
2023-06-11 19:16:28,023:INFO:display_container: 2
2023-06-11 19:16:28,024:INFO:Lasso(random_state=123)
2023-06-11 19:16:28,024:INFO:create_model() successfully completed......................................
2023-06-11 19:16:28,359:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:28,360:INFO:Creating metrics dataframe
2023-06-11 19:16:28,374:INFO:Initializing Ridge Regression
2023-06-11 19:16:28,374:INFO:Total runtime is 0.1561723311742147 minutes
2023-06-11 19:16:28,378:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:28,379:INFO:Initializing create_model()
2023-06-11 19:16:28,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:28,379:INFO:Checking exceptions
2023-06-11 19:16:28,383:INFO:Importing libraries
2023-06-11 19:16:28,383:INFO:Copying training dataset
2023-06-11 19:16:28,390:INFO:Defining folds
2023-06-11 19:16:28,390:INFO:Declaring metric variables
2023-06-11 19:16:28,396:INFO:Importing untrained model
2023-06-11 19:16:28,401:INFO:Ridge Regression Imported successfully
2023-06-11 19:16:28,410:INFO:Starting cross validation
2023-06-11 19:16:28,412:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:28,508:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.54921e-23): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-11 19:16:28,508:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.12946e-23): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-11 19:16:28,508:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.4028e-23): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-11 19:16:28,540:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.12681e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-11 19:16:28,590:INFO:Calculating mean and std
2023-06-11 19:16:28,593:INFO:Creating metrics dataframe
2023-06-11 19:16:28,598:INFO:Uploading results into container
2023-06-11 19:16:28,599:INFO:Uploading model into container now
2023-06-11 19:16:28,599:INFO:master_model_container: 3
2023-06-11 19:16:28,600:INFO:display_container: 2
2023-06-11 19:16:28,600:INFO:Ridge(random_state=123)
2023-06-11 19:16:28,600:INFO:create_model() successfully completed......................................
2023-06-11 19:16:28,933:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:28,933:INFO:Creating metrics dataframe
2023-06-11 19:16:28,942:INFO:Initializing Elastic Net
2023-06-11 19:16:28,942:INFO:Total runtime is 0.16564558744430544 minutes
2023-06-11 19:16:28,946:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:28,946:INFO:Initializing create_model()
2023-06-11 19:16:28,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:28,946:INFO:Checking exceptions
2023-06-11 19:16:28,949:INFO:Importing libraries
2023-06-11 19:16:28,949:INFO:Copying training dataset
2023-06-11 19:16:28,953:INFO:Defining folds
2023-06-11 19:16:28,954:INFO:Declaring metric variables
2023-06-11 19:16:28,958:INFO:Importing untrained model
2023-06-11 19:16:28,962:INFO:Elastic Net Imported successfully
2023-06-11 19:16:28,971:INFO:Starting cross validation
2023-06-11 19:16:28,974:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:29,128:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.123e+22, tolerance: 3.359e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:29,144:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.231e+22, tolerance: 3.168e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:29,168:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+22, tolerance: 3.176e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:29,187:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.666e+22, tolerance: 3.374e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:29,213:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.175e+21, tolerance: 4.464e+18
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:16:29,261:INFO:Calculating mean and std
2023-06-11 19:16:29,263:INFO:Creating metrics dataframe
2023-06-11 19:16:29,269:INFO:Uploading results into container
2023-06-11 19:16:29,270:INFO:Uploading model into container now
2023-06-11 19:16:29,271:INFO:master_model_container: 4
2023-06-11 19:16:29,271:INFO:display_container: 2
2023-06-11 19:16:29,272:INFO:ElasticNet(random_state=123)
2023-06-11 19:16:29,272:INFO:create_model() successfully completed......................................
2023-06-11 19:16:29,610:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:29,610:INFO:Creating metrics dataframe
2023-06-11 19:16:29,621:INFO:Initializing Least Angle Regression
2023-06-11 19:16:29,622:INFO:Total runtime is 0.17696864207585655 minutes
2023-06-11 19:16:29,626:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:29,626:INFO:Initializing create_model()
2023-06-11 19:16:29,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:29,626:INFO:Checking exceptions
2023-06-11 19:16:29,629:INFO:Importing libraries
2023-06-11 19:16:29,629:INFO:Copying training dataset
2023-06-11 19:16:29,634:INFO:Defining folds
2023-06-11 19:16:29,634:INFO:Declaring metric variables
2023-06-11 19:16:29,638:INFO:Importing untrained model
2023-06-11 19:16:29,643:INFO:Least Angle Regression Imported successfully
2023-06-11 19:16:29,656:INFO:Starting cross validation
2023-06-11 19:16:29,658:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:29,737:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:29,743:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:29,749:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:29,751:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 35 iterations, i.e. alpha=6.321e+05, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.980e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,751:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=1.473e+06, with an active set of 30 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,756:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 35 iterations, i.e. alpha=1.496e+07, with an active set of 28 regressors, and the smallest cholesky pivot element being 3.495e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,757:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 38 iterations, i.e. alpha=1.990e+07, with an active set of 30 regressors, and the smallest cholesky pivot element being 3.495e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,792:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:29,802:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 35 iterations, i.e. alpha=2.088e+07, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.788e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,802:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 35 iterations, i.e. alpha=1.240e+07, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.788e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,803:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 36 iterations, i.e. alpha=3.496e+05, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.788e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,804:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=9.346e+04, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.788e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,805:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:29,814:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=1.639e+07, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.356e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:29,849:INFO:Calculating mean and std
2023-06-11 19:16:29,850:INFO:Creating metrics dataframe
2023-06-11 19:16:29,854:INFO:Uploading results into container
2023-06-11 19:16:29,855:INFO:Uploading model into container now
2023-06-11 19:16:29,856:INFO:master_model_container: 5
2023-06-11 19:16:29,856:INFO:display_container: 2
2023-06-11 19:16:29,856:INFO:Lars(random_state=123)
2023-06-11 19:16:29,856:INFO:create_model() successfully completed......................................
2023-06-11 19:16:30,178:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:30,178:INFO:Creating metrics dataframe
2023-06-11 19:16:30,207:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:16:30,207:INFO:Total runtime is 0.1867317040761312 minutes
2023-06-11 19:16:30,216:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:30,217:INFO:Initializing create_model()
2023-06-11 19:16:30,217:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:30,217:INFO:Checking exceptions
2023-06-11 19:16:30,222:INFO:Importing libraries
2023-06-11 19:16:30,222:INFO:Copying training dataset
2023-06-11 19:16:30,233:INFO:Defining folds
2023-06-11 19:16:30,233:INFO:Declaring metric variables
2023-06-11 19:16:30,240:INFO:Importing untrained model
2023-06-11 19:16:30,250:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:16:30,261:INFO:Starting cross validation
2023-06-11 19:16:30,263:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:30,364:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:16:30,364:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:16:30,368:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:16:30,380:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 50 iterations, i.e. alpha=1.148e+00, with an active set of 30 regressors, and the smallest cholesky pivot element being 3.161e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:30,381:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 52 iterations, i.e. alpha=1.146e+00, with an active set of 30 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:30,386:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:16:30,396:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:16:30,400:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=1.858e+02, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.107e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-11 19:16:30,454:INFO:Calculating mean and std
2023-06-11 19:16:30,458:INFO:Creating metrics dataframe
2023-06-11 19:16:30,464:INFO:Uploading results into container
2023-06-11 19:16:30,465:INFO:Uploading model into container now
2023-06-11 19:16:30,465:INFO:master_model_container: 6
2023-06-11 19:16:30,465:INFO:display_container: 2
2023-06-11 19:16:30,466:INFO:LassoLars(random_state=123)
2023-06-11 19:16:30,466:INFO:create_model() successfully completed......................................
2023-06-11 19:16:30,821:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:30,821:INFO:Creating metrics dataframe
2023-06-11 19:16:30,833:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:16:30,834:INFO:Total runtime is 0.19716992378234866 minutes
2023-06-11 19:16:30,837:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:30,838:INFO:Initializing create_model()
2023-06-11 19:16:30,838:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:30,838:INFO:Checking exceptions
2023-06-11 19:16:30,841:INFO:Importing libraries
2023-06-11 19:16:30,841:INFO:Copying training dataset
2023-06-11 19:16:30,847:INFO:Defining folds
2023-06-11 19:16:30,848:INFO:Declaring metric variables
2023-06-11 19:16:30,852:INFO:Importing untrained model
2023-06-11 19:16:30,857:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:16:30,866:INFO:Starting cross validation
2023-06-11 19:16:30,868:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:30,974:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:30,975:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:30,985:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:30,992:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:31,011:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:16:31,061:INFO:Calculating mean and std
2023-06-11 19:16:31,064:INFO:Creating metrics dataframe
2023-06-11 19:16:31,071:INFO:Uploading results into container
2023-06-11 19:16:31,072:INFO:Uploading model into container now
2023-06-11 19:16:31,072:INFO:master_model_container: 7
2023-06-11 19:16:31,073:INFO:display_container: 2
2023-06-11 19:16:31,073:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:16:31,073:INFO:create_model() successfully completed......................................
2023-06-11 19:16:31,387:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:31,387:INFO:Creating metrics dataframe
2023-06-11 19:16:31,398:INFO:Initializing Bayesian Ridge
2023-06-11 19:16:31,399:INFO:Total runtime is 0.20658569733301801 minutes
2023-06-11 19:16:31,402:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:31,403:INFO:Initializing create_model()
2023-06-11 19:16:31,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:31,403:INFO:Checking exceptions
2023-06-11 19:16:31,406:INFO:Importing libraries
2023-06-11 19:16:31,406:INFO:Copying training dataset
2023-06-11 19:16:31,410:INFO:Defining folds
2023-06-11 19:16:31,410:INFO:Declaring metric variables
2023-06-11 19:16:31,415:INFO:Importing untrained model
2023-06-11 19:16:31,420:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:16:31,429:INFO:Starting cross validation
2023-06-11 19:16:31,431:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:31,594:INFO:Calculating mean and std
2023-06-11 19:16:31,597:INFO:Creating metrics dataframe
2023-06-11 19:16:31,602:INFO:Uploading results into container
2023-06-11 19:16:31,603:INFO:Uploading model into container now
2023-06-11 19:16:31,604:INFO:master_model_container: 8
2023-06-11 19:16:31,604:INFO:display_container: 2
2023-06-11 19:16:31,604:INFO:BayesianRidge()
2023-06-11 19:16:31,605:INFO:create_model() successfully completed......................................
2023-06-11 19:16:31,914:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:31,915:INFO:Creating metrics dataframe
2023-06-11 19:16:31,929:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:16:31,929:INFO:Total runtime is 0.2154260913530986 minutes
2023-06-11 19:16:31,933:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:31,933:INFO:Initializing create_model()
2023-06-11 19:16:31,933:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:31,933:INFO:Checking exceptions
2023-06-11 19:16:31,937:INFO:Importing libraries
2023-06-11 19:16:31,937:INFO:Copying training dataset
2023-06-11 19:16:31,944:INFO:Defining folds
2023-06-11 19:16:31,945:INFO:Declaring metric variables
2023-06-11 19:16:31,951:INFO:Importing untrained model
2023-06-11 19:16:31,958:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:16:31,967:INFO:Starting cross validation
2023-06-11 19:16:31,969:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:32,171:INFO:Calculating mean and std
2023-06-11 19:16:32,175:INFO:Creating metrics dataframe
2023-06-11 19:16:32,182:INFO:Uploading results into container
2023-06-11 19:16:32,184:INFO:Uploading model into container now
2023-06-11 19:16:32,185:INFO:master_model_container: 9
2023-06-11 19:16:32,185:INFO:display_container: 2
2023-06-11 19:16:32,186:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:16:32,187:INFO:create_model() successfully completed......................................
2023-06-11 19:16:32,522:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:32,522:INFO:Creating metrics dataframe
2023-06-11 19:16:32,535:INFO:Initializing Huber Regressor
2023-06-11 19:16:32,535:INFO:Total runtime is 0.2255206187566122 minutes
2023-06-11 19:16:32,540:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:32,540:INFO:Initializing create_model()
2023-06-11 19:16:32,540:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:32,540:INFO:Checking exceptions
2023-06-11 19:16:32,543:INFO:Importing libraries
2023-06-11 19:16:32,543:INFO:Copying training dataset
2023-06-11 19:16:32,548:INFO:Defining folds
2023-06-11 19:16:32,548:INFO:Declaring metric variables
2023-06-11 19:16:32,553:INFO:Importing untrained model
2023-06-11 19:16:32,560:INFO:Huber Regressor Imported successfully
2023-06-11 19:16:32,571:INFO:Starting cross validation
2023-06-11 19:16:32,574:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:32,780:INFO:Calculating mean and std
2023-06-11 19:16:32,783:INFO:Creating metrics dataframe
2023-06-11 19:16:32,789:INFO:Uploading results into container
2023-06-11 19:16:32,790:INFO:Uploading model into container now
2023-06-11 19:16:32,791:INFO:master_model_container: 10
2023-06-11 19:16:32,791:INFO:display_container: 2
2023-06-11 19:16:32,791:INFO:HuberRegressor()
2023-06-11 19:16:32,791:INFO:create_model() successfully completed......................................
2023-06-11 19:16:33,125:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:33,126:INFO:Creating metrics dataframe
2023-06-11 19:16:33,137:INFO:Initializing K Neighbors Regressor
2023-06-11 19:16:33,137:INFO:Total runtime is 0.23556278944015507 minutes
2023-06-11 19:16:33,141:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:33,141:INFO:Initializing create_model()
2023-06-11 19:16:33,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:33,142:INFO:Checking exceptions
2023-06-11 19:16:33,145:INFO:Importing libraries
2023-06-11 19:16:33,145:INFO:Copying training dataset
2023-06-11 19:16:33,150:INFO:Defining folds
2023-06-11 19:16:33,150:INFO:Declaring metric variables
2023-06-11 19:16:33,155:INFO:Importing untrained model
2023-06-11 19:16:33,160:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:16:33,169:INFO:Starting cross validation
2023-06-11 19:16:33,171:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:33,402:INFO:Calculating mean and std
2023-06-11 19:16:33,406:INFO:Creating metrics dataframe
2023-06-11 19:16:33,411:INFO:Uploading results into container
2023-06-11 19:16:33,412:INFO:Uploading model into container now
2023-06-11 19:16:33,412:INFO:master_model_container: 11
2023-06-11 19:16:33,413:INFO:display_container: 2
2023-06-11 19:16:33,413:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:16:33,413:INFO:create_model() successfully completed......................................
2023-06-11 19:16:33,766:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:33,766:INFO:Creating metrics dataframe
2023-06-11 19:16:33,781:INFO:Initializing Decision Tree Regressor
2023-06-11 19:16:33,781:INFO:Total runtime is 0.24629051685333256 minutes
2023-06-11 19:16:33,785:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:33,786:INFO:Initializing create_model()
2023-06-11 19:16:33,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:33,786:INFO:Checking exceptions
2023-06-11 19:16:33,789:INFO:Importing libraries
2023-06-11 19:16:33,789:INFO:Copying training dataset
2023-06-11 19:16:33,794:INFO:Defining folds
2023-06-11 19:16:33,794:INFO:Declaring metric variables
2023-06-11 19:16:33,799:INFO:Importing untrained model
2023-06-11 19:16:33,805:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:16:33,814:INFO:Starting cross validation
2023-06-11 19:16:33,816:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:34,059:INFO:Calculating mean and std
2023-06-11 19:16:34,060:INFO:Creating metrics dataframe
2023-06-11 19:16:34,065:INFO:Uploading results into container
2023-06-11 19:16:34,066:INFO:Uploading model into container now
2023-06-11 19:16:34,066:INFO:master_model_container: 12
2023-06-11 19:16:34,066:INFO:display_container: 2
2023-06-11 19:16:34,067:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:16:34,067:INFO:create_model() successfully completed......................................
2023-06-11 19:16:34,376:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:34,376:INFO:Creating metrics dataframe
2023-06-11 19:16:34,388:INFO:Initializing Random Forest Regressor
2023-06-11 19:16:34,388:INFO:Total runtime is 0.25640683174133305 minutes
2023-06-11 19:16:34,391:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:34,392:INFO:Initializing create_model()
2023-06-11 19:16:34,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:34,392:INFO:Checking exceptions
2023-06-11 19:16:34,394:INFO:Importing libraries
2023-06-11 19:16:34,394:INFO:Copying training dataset
2023-06-11 19:16:34,399:INFO:Defining folds
2023-06-11 19:16:34,399:INFO:Declaring metric variables
2023-06-11 19:16:34,403:INFO:Importing untrained model
2023-06-11 19:16:34,408:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:16:34,420:INFO:Starting cross validation
2023-06-11 19:16:34,422:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:36,753:INFO:Calculating mean and std
2023-06-11 19:16:36,756:INFO:Creating metrics dataframe
2023-06-11 19:16:36,761:INFO:Uploading results into container
2023-06-11 19:16:36,761:INFO:Uploading model into container now
2023-06-11 19:16:36,762:INFO:master_model_container: 13
2023-06-11 19:16:36,762:INFO:display_container: 2
2023-06-11 19:16:36,762:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:16:36,762:INFO:create_model() successfully completed......................................
2023-06-11 19:16:37,077:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:37,077:INFO:Creating metrics dataframe
2023-06-11 19:16:37,092:INFO:Initializing Extra Trees Regressor
2023-06-11 19:16:37,093:INFO:Total runtime is 0.3014893730481466 minutes
2023-06-11 19:16:37,097:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:37,098:INFO:Initializing create_model()
2023-06-11 19:16:37,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:37,098:INFO:Checking exceptions
2023-06-11 19:16:37,101:INFO:Importing libraries
2023-06-11 19:16:37,101:INFO:Copying training dataset
2023-06-11 19:16:37,105:INFO:Defining folds
2023-06-11 19:16:37,106:INFO:Declaring metric variables
2023-06-11 19:16:37,110:INFO:Importing untrained model
2023-06-11 19:16:37,115:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:16:37,125:INFO:Starting cross validation
2023-06-11 19:16:37,127:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:38,027:INFO:Calculating mean and std
2023-06-11 19:16:38,029:INFO:Creating metrics dataframe
2023-06-11 19:16:38,034:INFO:Uploading results into container
2023-06-11 19:16:38,035:INFO:Uploading model into container now
2023-06-11 19:16:38,035:INFO:master_model_container: 14
2023-06-11 19:16:38,035:INFO:display_container: 2
2023-06-11 19:16:38,035:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:16:38,035:INFO:create_model() successfully completed......................................
2023-06-11 19:16:38,344:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:38,345:INFO:Creating metrics dataframe
2023-06-11 19:16:38,359:INFO:Initializing AdaBoost Regressor
2023-06-11 19:16:38,359:INFO:Total runtime is 0.32259225447972617 minutes
2023-06-11 19:16:38,362:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:38,363:INFO:Initializing create_model()
2023-06-11 19:16:38,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:38,363:INFO:Checking exceptions
2023-06-11 19:16:38,367:INFO:Importing libraries
2023-06-11 19:16:38,367:INFO:Copying training dataset
2023-06-11 19:16:38,371:INFO:Defining folds
2023-06-11 19:16:38,372:INFO:Declaring metric variables
2023-06-11 19:16:38,376:INFO:Importing untrained model
2023-06-11 19:16:38,380:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:16:38,389:INFO:Starting cross validation
2023-06-11 19:16:38,391:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:38,805:INFO:Calculating mean and std
2023-06-11 19:16:38,808:INFO:Creating metrics dataframe
2023-06-11 19:16:38,817:INFO:Uploading results into container
2023-06-11 19:16:38,818:INFO:Uploading model into container now
2023-06-11 19:16:38,819:INFO:master_model_container: 15
2023-06-11 19:16:38,820:INFO:display_container: 2
2023-06-11 19:16:38,821:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:16:38,821:INFO:create_model() successfully completed......................................
2023-06-11 19:16:39,162:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:39,162:INFO:Creating metrics dataframe
2023-06-11 19:16:39,174:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:16:39,175:INFO:Total runtime is 0.33618558247884117 minutes
2023-06-11 19:16:39,178:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:39,178:INFO:Initializing create_model()
2023-06-11 19:16:39,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:39,178:INFO:Checking exceptions
2023-06-11 19:16:39,181:INFO:Importing libraries
2023-06-11 19:16:39,181:INFO:Copying training dataset
2023-06-11 19:16:39,186:INFO:Defining folds
2023-06-11 19:16:39,186:INFO:Declaring metric variables
2023-06-11 19:16:39,190:INFO:Importing untrained model
2023-06-11 19:16:39,195:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:16:39,216:INFO:Starting cross validation
2023-06-11 19:16:39,219:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:40,606:INFO:Calculating mean and std
2023-06-11 19:16:40,608:INFO:Creating metrics dataframe
2023-06-11 19:16:40,613:INFO:Uploading results into container
2023-06-11 19:16:40,615:INFO:Uploading model into container now
2023-06-11 19:16:40,617:INFO:master_model_container: 16
2023-06-11 19:16:40,617:INFO:display_container: 2
2023-06-11 19:16:40,618:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:16:40,618:INFO:create_model() successfully completed......................................
2023-06-11 19:16:40,971:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:40,971:INFO:Creating metrics dataframe
2023-06-11 19:16:40,984:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:16:40,984:INFO:Total runtime is 0.36634255250295006 minutes
2023-06-11 19:16:40,988:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:40,989:INFO:Initializing create_model()
2023-06-11 19:16:40,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:40,989:INFO:Checking exceptions
2023-06-11 19:16:40,991:INFO:Importing libraries
2023-06-11 19:16:40,991:INFO:Copying training dataset
2023-06-11 19:16:40,996:INFO:Defining folds
2023-06-11 19:16:40,996:INFO:Declaring metric variables
2023-06-11 19:16:41,000:INFO:Importing untrained model
2023-06-11 19:16:41,006:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:16:41,015:INFO:Starting cross validation
2023-06-11 19:16:41,018:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:41,681:INFO:Calculating mean and std
2023-06-11 19:16:41,685:INFO:Creating metrics dataframe
2023-06-11 19:16:41,692:INFO:Uploading results into container
2023-06-11 19:16:41,694:INFO:Uploading model into container now
2023-06-11 19:16:41,695:INFO:master_model_container: 17
2023-06-11 19:16:41,695:INFO:display_container: 2
2023-06-11 19:16:41,696:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:16:41,696:INFO:create_model() successfully completed......................................
2023-06-11 19:16:42,009:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:42,009:INFO:Creating metrics dataframe
2023-06-11 19:16:42,024:INFO:Initializing Dummy Regressor
2023-06-11 19:16:42,024:INFO:Total runtime is 0.3836739937464396 minutes
2023-06-11 19:16:42,028:INFO:SubProcess create_model() called ==================================
2023-06-11 19:16:42,029:INFO:Initializing create_model()
2023-06-11 19:16:42,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f037570fc70>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:42,029:INFO:Checking exceptions
2023-06-11 19:16:42,033:INFO:Importing libraries
2023-06-11 19:16:42,033:INFO:Copying training dataset
2023-06-11 19:16:42,040:INFO:Defining folds
2023-06-11 19:16:42,040:INFO:Declaring metric variables
2023-06-11 19:16:42,047:INFO:Importing untrained model
2023-06-11 19:16:42,054:INFO:Dummy Regressor Imported successfully
2023-06-11 19:16:42,064:INFO:Starting cross validation
2023-06-11 19:16:42,067:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:16:42,231:INFO:Calculating mean and std
2023-06-11 19:16:42,233:INFO:Creating metrics dataframe
2023-06-11 19:16:42,238:INFO:Uploading results into container
2023-06-11 19:16:42,238:INFO:Uploading model into container now
2023-06-11 19:16:42,239:INFO:master_model_container: 18
2023-06-11 19:16:42,239:INFO:display_container: 2
2023-06-11 19:16:42,239:INFO:DummyRegressor()
2023-06-11 19:16:42,239:INFO:create_model() successfully completed......................................
2023-06-11 19:16:42,576:INFO:SubProcess create_model() end ==================================
2023-06-11 19:16:42,576:INFO:Creating metrics dataframe
2023-06-11 19:16:42,606:INFO:Initializing create_model()
2023-06-11 19:16:42,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=AdaBoostRegressor(random_state=123), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:16:42,606:INFO:Checking exceptions
2023-06-11 19:16:42,612:INFO:Importing libraries
2023-06-11 19:16:42,612:INFO:Copying training dataset
2023-06-11 19:16:42,615:INFO:Defining folds
2023-06-11 19:16:42,616:INFO:Declaring metric variables
2023-06-11 19:16:42,616:INFO:Importing untrained model
2023-06-11 19:16:42,616:INFO:Declaring custom model
2023-06-11 19:16:42,616:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:16:42,618:INFO:Cross validation set to False
2023-06-11 19:16:42,618:INFO:Fitting Model
2023-06-11 19:16:42,960:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:16:42,960:INFO:create_model() successfully completed......................................
2023-06-11 19:16:43,304:INFO:master_model_container: 18
2023-06-11 19:16:43,304:INFO:display_container: 2
2023-06-11 19:16:43,305:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:16:43,305:INFO:compare_models() successfully completed......................................
2023-06-11 19:17:05,748:INFO:Initializing create_model()
2023-06-11 19:17:05,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=AdaBoostRegressor(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:17:05,750:INFO:Checking exceptions
2023-06-11 19:17:05,792:INFO:Importing libraries
2023-06-11 19:17:05,792:INFO:Copying training dataset
2023-06-11 19:17:05,801:INFO:Defining folds
2023-06-11 19:17:05,801:INFO:Declaring metric variables
2023-06-11 19:17:05,807:INFO:Importing untrained model
2023-06-11 19:17:05,807:INFO:Declaring custom model
2023-06-11 19:17:05,814:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:17:05,825:INFO:Starting cross validation
2023-06-11 19:17:05,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:17:08,149:INFO:Calculating mean and std
2023-06-11 19:17:08,153:INFO:Creating metrics dataframe
2023-06-11 19:17:08,166:INFO:Finalizing model
2023-06-11 19:17:08,407:INFO:Uploading results into container
2023-06-11 19:17:08,408:INFO:Uploading model into container now
2023-06-11 19:17:08,419:INFO:master_model_container: 19
2023-06-11 19:17:08,420:INFO:display_container: 3
2023-06-11 19:17:08,420:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:17:08,420:INFO:create_model() successfully completed......................................
2023-06-11 19:18:10,097:INFO:Initializing plot_model()
2023-06-11 19:18:10,098:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:18:10,098:INFO:Checking exceptions
2023-06-11 19:18:10,104:INFO:Preloading libraries
2023-06-11 19:18:10,108:INFO:Copying training dataset
2023-06-11 19:18:10,108:INFO:Plot type: residuals
2023-06-11 19:18:10,417:INFO:Fitting Model
2023-06-11 19:18:10,417:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but AdaBoostRegressor was fitted with feature names
  warnings.warn(

2023-06-11 19:18:10,469:INFO:Scoring test/hold-out set
2023-06-11 19:18:11,084:INFO:Visual Rendered Successfully
2023-06-11 19:18:11,479:INFO:plot_model() successfully completed......................................
2023-06-11 19:18:54,144:INFO:Initializing evaluate_model()
2023-06-11 19:18:54,145:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, estimator=AdaBoostRegressor(random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-11 19:18:54,560:INFO:Initializing plot_model()
2023-06-11 19:18:54,561:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:18:54,561:INFO:Checking exceptions
2023-06-11 19:18:54,569:INFO:Preloading libraries
2023-06-11 19:18:54,574:INFO:Copying training dataset
2023-06-11 19:18:54,574:INFO:Plot type: pipeline
2023-06-11 19:18:54,822:INFO:Visual Rendered Successfully
2023-06-11 19:18:55,223:INFO:plot_model() successfully completed......................................
2023-06-11 19:18:59,437:INFO:Initializing plot_model()
2023-06-11 19:18:59,438:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:18:59,438:INFO:Checking exceptions
2023-06-11 19:18:59,444:INFO:Preloading libraries
2023-06-11 19:18:59,448:INFO:Copying training dataset
2023-06-11 19:18:59,448:INFO:Plot type: parameter
2023-06-11 19:18:59,456:INFO:Visual Rendered Successfully
2023-06-11 19:18:59,785:INFO:plot_model() successfully completed......................................
2023-06-11 19:19:02,157:INFO:Initializing plot_model()
2023-06-11 19:19:02,158:INFO:plot_model(plot=residuals, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:19:02,158:INFO:Checking exceptions
2023-06-11 19:19:02,162:INFO:Preloading libraries
2023-06-11 19:19:02,165:INFO:Copying training dataset
2023-06-11 19:19:02,165:INFO:Plot type: residuals
2023-06-11 19:19:02,358:INFO:Fitting Model
2023-06-11 19:19:02,358:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but AdaBoostRegressor was fitted with feature names
  warnings.warn(

2023-06-11 19:19:02,416:INFO:Scoring test/hold-out set
2023-06-11 19:19:02,886:INFO:Visual Rendered Successfully
2023-06-11 19:19:03,270:INFO:plot_model() successfully completed......................................
2023-06-11 19:19:04,829:INFO:Initializing plot_model()
2023-06-11 19:19:04,829:INFO:plot_model(plot=error, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:19:04,830:INFO:Checking exceptions
2023-06-11 19:19:04,840:INFO:Preloading libraries
2023-06-11 19:19:04,848:INFO:Copying training dataset
2023-06-11 19:19:04,848:INFO:Plot type: error
2023-06-11 19:19:05,038:INFO:Fitting Model
2023-06-11 19:19:05,038:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but AdaBoostRegressor was fitted with feature names
  warnings.warn(

2023-06-11 19:19:05,038:INFO:Scoring test/hold-out set
2023-06-11 19:19:05,339:INFO:Visual Rendered Successfully
2023-06-11 19:19:05,719:INFO:plot_model() successfully completed......................................
2023-06-11 19:19:08,322:INFO:Initializing plot_model()
2023-06-11 19:19:08,323:INFO:plot_model(plot=cooks, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:19:08,323:INFO:Checking exceptions
2023-06-11 19:19:08,328:INFO:Preloading libraries
2023-06-11 19:19:08,332:INFO:Copying training dataset
2023-06-11 19:19:08,332:INFO:Plot type: cooks
2023-06-11 19:19:08,497:INFO:Fitting Model
2023-06-11 19:19:08,871:INFO:Visual Rendered Successfully
2023-06-11 19:19:09,211:INFO:plot_model() successfully completed......................................
2023-06-11 19:19:12,029:INFO:Initializing plot_model()
2023-06-11 19:19:12,029:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:19:12,029:INFO:Checking exceptions
2023-06-11 19:19:12,038:INFO:Preloading libraries
2023-06-11 19:19:12,043:INFO:Copying training dataset
2023-06-11 19:19:12,043:INFO:Plot type: feature
2023-06-11 19:19:12,044:WARNING:No coef_ found. Trying feature_importances_
2023-06-11 19:19:12,312:INFO:Visual Rendered Successfully
2023-06-11 19:19:12,642:INFO:plot_model() successfully completed......................................
2023-06-11 19:19:16,420:INFO:Initializing plot_model()
2023-06-11 19:19:16,420:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 19:19:16,420:INFO:Checking exceptions
2023-06-11 19:19:16,425:INFO:Preloading libraries
2023-06-11 19:19:16,427:INFO:Copying training dataset
2023-06-11 19:19:16,427:INFO:Plot type: vc
2023-06-11 19:19:16,428:INFO:Determining param_name
2023-06-11 19:19:16,428:INFO:param_name: n_estimators
2023-06-11 19:19:16,590:INFO:Fitting Model
2023-06-11 19:19:46,506:INFO:Visual Rendered Successfully
2023-06-11 19:19:46,887:INFO:plot_model() successfully completed......................................
2023-06-11 19:29:04,236:INFO:PyCaret RegressionExperiment
2023-06-11 19:29:04,237:INFO:Logging name: reg-default-name
2023-06-11 19:29:04,237:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:29:04,237:INFO:version 3.0.0.rc4
2023-06-11 19:29:04,237:INFO:Initializing setup()
2023-06-11 19:29:04,238:INFO:self.USI: 15b7
2023-06-11 19:29:04,238:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:29:04,238:INFO:Checking environment
2023-06-11 19:29:04,238:INFO:python_version: 3.10.6
2023-06-11 19:29:04,238:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:29:04,238:INFO:machine: x86_64
2023-06-11 19:29:04,238:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:29:04,239:INFO:Memory: svmem(total=6088237056, available=2572505088, percent=57.7, used=3150577664, free=1602310144, active=1606733824, inactive=2010107904, buffers=60817408, cached=1274531840, shared=70819840, slab=449826816)
2023-06-11 19:29:04,241:INFO:Physical Core: 4
2023-06-11 19:29:04,241:INFO:Logical Core: 8
2023-06-11 19:29:04,242:INFO:Checking libraries
2023-06-11 19:29:04,242:INFO:System:
2023-06-11 19:29:04,242:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:29:04,242:INFO:executable: /usr/bin/python3
2023-06-11 19:29:04,242:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:29:04,242:INFO:PyCaret required dependencies:
2023-06-11 19:29:04,242:INFO:                 pip: 22.0.2
2023-06-11 19:29:04,243:INFO:          setuptools: 59.6.0
2023-06-11 19:29:04,243:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:29:04,243:INFO:             IPython: 8.5.0
2023-06-11 19:29:04,243:INFO:          ipywidgets: 8.0.2
2023-06-11 19:29:04,243:INFO:                tqdm: 4.64.1
2023-06-11 19:29:04,243:INFO:               numpy: 1.22.4
2023-06-11 19:29:04,243:INFO:              pandas: 1.4.4
2023-06-11 19:29:04,243:INFO:              jinja2: 3.1.2
2023-06-11 19:29:04,243:INFO:               scipy: 1.8.1
2023-06-11 19:29:04,244:INFO:              joblib: 1.2.0
2023-06-11 19:29:04,244:INFO:             sklearn: 1.1.2
2023-06-11 19:29:04,244:INFO:                pyod: 1.0.5
2023-06-11 19:29:04,244:INFO:            imblearn: 0.9.1
2023-06-11 19:29:04,244:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:29:04,244:INFO:            lightgbm: 3.3.2
2023-06-11 19:29:04,244:INFO:               numba: 0.55.2
2023-06-11 19:29:04,244:INFO:            requests: 2.25.1
2023-06-11 19:29:04,244:INFO:          matplotlib: 3.6.0
2023-06-11 19:29:04,244:INFO:          scikitplot: 0.3.7
2023-06-11 19:29:04,244:INFO:         yellowbrick: 1.5
2023-06-11 19:29:04,244:INFO:              plotly: 5.10.0
2023-06-11 19:29:04,244:INFO:             kaleido: 0.2.1
2023-06-11 19:29:04,245:INFO:         statsmodels: 0.13.2
2023-06-11 19:29:04,245:INFO:              sktime: 0.13.4
2023-06-11 19:29:04,245:INFO:               tbats: 1.1.1
2023-06-11 19:29:04,245:INFO:            pmdarima: 1.8.5
2023-06-11 19:29:04,245:INFO:              psutil: 5.9.2
2023-06-11 19:29:04,245:INFO:PyCaret optional dependencies:
2023-06-11 19:29:04,245:INFO:                shap: Not installed
2023-06-11 19:29:04,245:INFO:           interpret: Not installed
2023-06-11 19:29:04,245:INFO:                umap: Not installed
2023-06-11 19:29:04,245:INFO:    pandas_profiling: Not installed
2023-06-11 19:29:04,245:INFO:  explainerdashboard: Not installed
2023-06-11 19:29:04,246:INFO:             autoviz: Not installed
2023-06-11 19:29:04,246:INFO:           fairlearn: Not installed
2023-06-11 19:29:04,246:INFO:             xgboost: Not installed
2023-06-11 19:29:04,246:INFO:            catboost: Not installed
2023-06-11 19:29:04,246:INFO:              kmodes: Not installed
2023-06-11 19:29:04,246:INFO:             mlxtend: 0.21.0
2023-06-11 19:29:04,246:INFO:       statsforecast: Not installed
2023-06-11 19:29:04,246:INFO:        tune_sklearn: Not installed
2023-06-11 19:29:04,246:INFO:                 ray: Not installed
2023-06-11 19:29:04,246:INFO:            hyperopt: Not installed
2023-06-11 19:29:04,246:INFO:              optuna: Not installed
2023-06-11 19:29:04,246:INFO:               skopt: Not installed
2023-06-11 19:29:04,246:INFO:              mlflow: 1.29.0
2023-06-11 19:29:04,246:INFO:              gradio: 3.4.1
2023-06-11 19:29:04,247:INFO:             fastapi: 0.85.0
2023-06-11 19:29:04,247:INFO:             uvicorn: 0.18.3
2023-06-11 19:29:04,247:INFO:              m2cgen: 0.10.0
2023-06-11 19:29:04,247:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:29:04,247:INFO:                nltk: 3.7
2023-06-11 19:29:04,247:INFO:            pyLDAvis: Not installed
2023-06-11 19:29:04,247:INFO:              gensim: Not installed
2023-06-11 19:29:04,247:INFO:               spacy: 3.5.0
2023-06-11 19:29:04,247:INFO:           wordcloud: Not installed
2023-06-11 19:29:04,247:INFO:            textblob: 0.17.1
2023-06-11 19:29:04,247:INFO:               fugue: Not installed
2023-06-11 19:29:04,247:INFO:           streamlit: 1.13.0
2023-06-11 19:29:04,248:INFO:             prophet: Not installed
2023-06-11 19:29:04,248:INFO:None
2023-06-11 19:29:04,248:INFO:Set up data.
2023-06-11 19:29:04,289:INFO:Set up train/test split.
2023-06-11 19:29:04,304:INFO:Set up index.
2023-06-11 19:29:04,305:INFO:Set up folding strategy.
2023-06-11 19:29:04,305:INFO:Assigning column types.
2023-06-11 19:29:04,314:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-11 19:29:04,315:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,322:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,327:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,443:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,448:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,453:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,519:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,570:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-11 19:29:04,576:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,581:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,646:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,703:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,709:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,776:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,827:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-11 19:29:04,838:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:04,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:04,964:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,081:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-11 19:29:05,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,291:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,353:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,354:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-11 19:29:05,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:29:05,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,638:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-11 19:29:05,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,925:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:05,926:INFO:Preparing preprocessing pipeline...
2023-06-11 19:29:05,927:INFO:Set up simple imputation.
2023-06-11 19:29:05,930:INFO:Set up encoding of categorical features.
2023-06-11 19:29:05,931:INFO:Set up polynomial features.
2023-06-11 19:29:05,931:INFO:Set up variance threshold.
2023-06-11 19:29:05,931:INFO:Set up removing multicollinearity.
2023-06-11 19:29:05,931:INFO:Set up feature normalization.
2023-06-11 19:29:05,931:INFO:Set up feature selection.
2023-06-11 19:29:06,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:06,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:06,122:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:08,465:INFO:Finished creating preprocessing pipeline.
2023-06-11 19:29:08,487:INFO:Pipeline: Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=VarianceThreshold(threshold=0.08))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=15,
                                                                threshold=-inf)))])
2023-06-11 19:29:08,487:INFO:Creating final display dataframe.
2023-06-11 19:29:08,544:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:09,034:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:09,852:INFO:Setup display_container:                     Description             Value
0                    Session id               123
1                        Target           credito
2                   Target type        Regression
3                    Data shape        (2190, 16)
4              Train data shape        (1532, 16)
5               Test data shape         (658, 16)
6              Numeric features                27
7          Categorical features                 4
8      Rows with missing values             71.9%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation          constant
13     Maximum one-hot encoding                 5
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17       Low variance threshold              0.08
18     Remove multicollinearity              True
19  Multicollinearity threshold               0.9
20                    Normalize              True
21             Normalize method            zscore
22            Feature selection              True
23     Feature selection method           classic
24  Feature selection estimator          lightgbm
25  Number of features selected                15
26               Fold Generator             KFold
27                  Fold Number                10
28                     CPU Jobs                -1
29                      Use GPU             False
30               Log Experiment             False
31              Experiment Name  reg-default-name
32                          USI              15b7
2023-06-11 19:29:09,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:09,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:10,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:10,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:29:10,124:INFO:setup() successfully completed in 5.89s...............
2023-06-11 19:29:17,236:INFO:Initializing compare_models()
2023-06-11 19:29:17,236:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, include=None, fold=5, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:29:17,236:INFO:Checking exceptions
2023-06-11 19:29:17,243:INFO:Preparing display monitor
2023-06-11 19:29:17,320:INFO:Initializing Linear Regression
2023-06-11 19:29:17,320:INFO:Total runtime is 4.939238230387369e-06 minutes
2023-06-11 19:29:17,326:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:17,327:INFO:Initializing create_model()
2023-06-11 19:29:17,327:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:17,327:INFO:Checking exceptions
2023-06-11 19:29:17,331:INFO:Importing libraries
2023-06-11 19:29:17,331:INFO:Copying training dataset
2023-06-11 19:29:17,336:INFO:Defining folds
2023-06-11 19:29:17,336:INFO:Declaring metric variables
2023-06-11 19:29:17,341:INFO:Importing untrained model
2023-06-11 19:29:17,345:INFO:Linear Regression Imported successfully
2023-06-11 19:29:17,355:INFO:Starting cross validation
2023-06-11 19:29:17,370:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:19,701:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:19,731:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:19,752:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:20,117:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:20,117:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:23,712:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:23,796:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:23,855:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:25,225:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:25,351:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:29:25,917:INFO:Calculating mean and std
2023-06-11 19:29:25,921:INFO:Creating metrics dataframe
2023-06-11 19:29:25,930:INFO:Uploading results into container
2023-06-11 19:29:25,931:INFO:Uploading model into container now
2023-06-11 19:29:25,932:INFO:master_model_container: 1
2023-06-11 19:29:25,932:INFO:display_container: 2
2023-06-11 19:29:25,933:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:29:25,933:INFO:create_model() successfully completed......................................
2023-06-11 19:29:26,276:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:26,276:INFO:Creating metrics dataframe
2023-06-11 19:29:26,285:INFO:Initializing Lasso Regression
2023-06-11 19:29:26,286:INFO:Total runtime is 0.14942313432693483 minutes
2023-06-11 19:29:26,289:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:26,289:INFO:Initializing create_model()
2023-06-11 19:29:26,290:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:26,290:INFO:Checking exceptions
2023-06-11 19:29:26,292:INFO:Importing libraries
2023-06-11 19:29:26,292:INFO:Copying training dataset
2023-06-11 19:29:26,297:INFO:Defining folds
2023-06-11 19:29:26,297:INFO:Declaring metric variables
2023-06-11 19:29:26,302:INFO:Importing untrained model
2023-06-11 19:29:26,306:INFO:Lasso Regression Imported successfully
2023-06-11 19:29:26,313:INFO:Starting cross validation
2023-06-11 19:29:26,331:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:26,562:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.728e+22, tolerance: 3.176e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:29:27,961:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+22, tolerance: 3.168e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:29:28,078:INFO:Calculating mean and std
2023-06-11 19:29:28,081:INFO:Creating metrics dataframe
2023-06-11 19:29:28,088:INFO:Uploading results into container
2023-06-11 19:29:28,089:INFO:Uploading model into container now
2023-06-11 19:29:28,090:INFO:master_model_container: 2
2023-06-11 19:29:28,090:INFO:display_container: 2
2023-06-11 19:29:28,091:INFO:Lasso(random_state=123)
2023-06-11 19:29:28,091:INFO:create_model() successfully completed......................................
2023-06-11 19:29:28,419:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:28,419:INFO:Creating metrics dataframe
2023-06-11 19:29:28,428:INFO:Initializing Ridge Regression
2023-06-11 19:29:28,429:INFO:Total runtime is 0.18514267603556317 minutes
2023-06-11 19:29:28,434:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:28,434:INFO:Initializing create_model()
2023-06-11 19:29:28,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:28,435:INFO:Checking exceptions
2023-06-11 19:29:28,437:INFO:Importing libraries
2023-06-11 19:29:28,437:INFO:Copying training dataset
2023-06-11 19:29:28,441:INFO:Defining folds
2023-06-11 19:29:28,442:INFO:Declaring metric variables
2023-06-11 19:29:28,446:INFO:Importing untrained model
2023-06-11 19:29:28,451:INFO:Ridge Regression Imported successfully
2023-06-11 19:29:28,460:INFO:Starting cross validation
2023-06-11 19:29:28,478:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:28,849:INFO:Calculating mean and std
2023-06-11 19:29:28,851:INFO:Creating metrics dataframe
2023-06-11 19:29:28,857:INFO:Uploading results into container
2023-06-11 19:29:28,858:INFO:Uploading model into container now
2023-06-11 19:29:28,859:INFO:master_model_container: 3
2023-06-11 19:29:28,859:INFO:display_container: 2
2023-06-11 19:29:28,859:INFO:Ridge(random_state=123)
2023-06-11 19:29:28,859:INFO:create_model() successfully completed......................................
2023-06-11 19:29:29,184:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:29,184:INFO:Creating metrics dataframe
2023-06-11 19:29:29,193:INFO:Initializing Elastic Net
2023-06-11 19:29:29,193:INFO:Total runtime is 0.19788114627202355 minutes
2023-06-11 19:29:29,196:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:29,197:INFO:Initializing create_model()
2023-06-11 19:29:29,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:29,197:INFO:Checking exceptions
2023-06-11 19:29:29,199:INFO:Importing libraries
2023-06-11 19:29:29,200:INFO:Copying training dataset
2023-06-11 19:29:29,204:INFO:Defining folds
2023-06-11 19:29:29,204:INFO:Declaring metric variables
2023-06-11 19:29:29,208:INFO:Importing untrained model
2023-06-11 19:29:29,213:INFO:Elastic Net Imported successfully
2023-06-11 19:29:29,221:INFO:Starting cross validation
2023-06-11 19:29:29,239:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:29,588:INFO:Calculating mean and std
2023-06-11 19:29:29,590:INFO:Creating metrics dataframe
2023-06-11 19:29:29,596:INFO:Uploading results into container
2023-06-11 19:29:29,596:INFO:Uploading model into container now
2023-06-11 19:29:29,597:INFO:master_model_container: 4
2023-06-11 19:29:29,597:INFO:display_container: 2
2023-06-11 19:29:29,597:INFO:ElasticNet(random_state=123)
2023-06-11 19:29:29,597:INFO:create_model() successfully completed......................................
2023-06-11 19:29:29,919:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:29,919:INFO:Creating metrics dataframe
2023-06-11 19:29:29,931:INFO:Initializing Least Angle Regression
2023-06-11 19:29:29,932:INFO:Total runtime is 0.2101900180180868 minutes
2023-06-11 19:29:29,938:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:29,939:INFO:Initializing create_model()
2023-06-11 19:29:29,939:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:29,939:INFO:Checking exceptions
2023-06-11 19:29:29,942:INFO:Importing libraries
2023-06-11 19:29:29,942:INFO:Copying training dataset
2023-06-11 19:29:29,948:INFO:Defining folds
2023-06-11 19:29:29,949:INFO:Declaring metric variables
2023-06-11 19:29:29,955:INFO:Importing untrained model
2023-06-11 19:29:29,962:INFO:Least Angle Regression Imported successfully
2023-06-11 19:29:29,971:INFO:Starting cross validation
2023-06-11 19:29:29,990:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:30,137:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:30,139:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:30,149:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:30,181:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:30,197:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:30,337:INFO:Calculating mean and std
2023-06-11 19:29:30,340:INFO:Creating metrics dataframe
2023-06-11 19:29:30,350:INFO:Uploading results into container
2023-06-11 19:29:30,351:INFO:Uploading model into container now
2023-06-11 19:29:30,352:INFO:master_model_container: 5
2023-06-11 19:29:30,352:INFO:display_container: 2
2023-06-11 19:29:30,353:INFO:Lars(random_state=123)
2023-06-11 19:29:30,353:INFO:create_model() successfully completed......................................
2023-06-11 19:29:30,734:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:30,734:INFO:Creating metrics dataframe
2023-06-11 19:29:30,746:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:29:30,746:INFO:Total runtime is 0.22376505136489871 minutes
2023-06-11 19:29:30,750:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:30,750:INFO:Initializing create_model()
2023-06-11 19:29:30,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:30,751:INFO:Checking exceptions
2023-06-11 19:29:30,753:INFO:Importing libraries
2023-06-11 19:29:30,753:INFO:Copying training dataset
2023-06-11 19:29:30,758:INFO:Defining folds
2023-06-11 19:29:30,759:INFO:Declaring metric variables
2023-06-11 19:29:30,764:INFO:Importing untrained model
2023-06-11 19:29:30,769:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:29:30,779:INFO:Starting cross validation
2023-06-11 19:29:30,794:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:30,935:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:29:30,948:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:29:30,962:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:29:30,977:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:29:31,002:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:29:31,143:INFO:Calculating mean and std
2023-06-11 19:29:31,145:INFO:Creating metrics dataframe
2023-06-11 19:29:31,150:INFO:Uploading results into container
2023-06-11 19:29:31,151:INFO:Uploading model into container now
2023-06-11 19:29:31,151:INFO:master_model_container: 6
2023-06-11 19:29:31,151:INFO:display_container: 2
2023-06-11 19:29:31,152:INFO:LassoLars(random_state=123)
2023-06-11 19:29:31,152:INFO:create_model() successfully completed......................................
2023-06-11 19:29:31,463:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:31,464:INFO:Creating metrics dataframe
2023-06-11 19:29:31,475:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:29:31,475:INFO:Total runtime is 0.23591969807942711 minutes
2023-06-11 19:29:31,480:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:31,481:INFO:Initializing create_model()
2023-06-11 19:29:31,481:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:31,481:INFO:Checking exceptions
2023-06-11 19:29:31,484:INFO:Importing libraries
2023-06-11 19:29:31,484:INFO:Copying training dataset
2023-06-11 19:29:31,489:INFO:Defining folds
2023-06-11 19:29:31,489:INFO:Declaring metric variables
2023-06-11 19:29:31,493:INFO:Importing untrained model
2023-06-11 19:29:31,499:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:29:31,507:INFO:Starting cross validation
2023-06-11 19:29:31,525:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:31,661:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:31,680:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:31,697:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:31,716:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:31,738:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:29:31,863:INFO:Calculating mean and std
2023-06-11 19:29:31,866:INFO:Creating metrics dataframe
2023-06-11 19:29:31,874:INFO:Uploading results into container
2023-06-11 19:29:31,876:INFO:Uploading model into container now
2023-06-11 19:29:31,877:INFO:master_model_container: 7
2023-06-11 19:29:31,877:INFO:display_container: 2
2023-06-11 19:29:31,877:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:29:31,877:INFO:create_model() successfully completed......................................
2023-06-11 19:29:32,206:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:32,206:INFO:Creating metrics dataframe
2023-06-11 19:29:32,216:INFO:Initializing Bayesian Ridge
2023-06-11 19:29:32,217:INFO:Total runtime is 0.24827605088551843 minutes
2023-06-11 19:29:32,221:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:32,221:INFO:Initializing create_model()
2023-06-11 19:29:32,221:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:32,221:INFO:Checking exceptions
2023-06-11 19:29:32,224:INFO:Importing libraries
2023-06-11 19:29:32,224:INFO:Copying training dataset
2023-06-11 19:29:32,229:INFO:Defining folds
2023-06-11 19:29:32,229:INFO:Declaring metric variables
2023-06-11 19:29:32,234:INFO:Importing untrained model
2023-06-11 19:29:32,238:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:29:32,249:INFO:Starting cross validation
2023-06-11 19:29:32,266:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:32,617:INFO:Calculating mean and std
2023-06-11 19:29:32,619:INFO:Creating metrics dataframe
2023-06-11 19:29:32,622:INFO:Uploading results into container
2023-06-11 19:29:32,623:INFO:Uploading model into container now
2023-06-11 19:29:32,623:INFO:master_model_container: 8
2023-06-11 19:29:32,623:INFO:display_container: 2
2023-06-11 19:29:32,624:INFO:BayesianRidge()
2023-06-11 19:29:32,624:INFO:create_model() successfully completed......................................
2023-06-11 19:29:32,944:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:32,944:INFO:Creating metrics dataframe
2023-06-11 19:29:32,956:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:29:32,956:INFO:Total runtime is 0.26059574683507286 minutes
2023-06-11 19:29:32,960:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:32,961:INFO:Initializing create_model()
2023-06-11 19:29:32,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:32,961:INFO:Checking exceptions
2023-06-11 19:29:32,964:INFO:Importing libraries
2023-06-11 19:29:32,964:INFO:Copying training dataset
2023-06-11 19:29:32,969:INFO:Defining folds
2023-06-11 19:29:32,970:INFO:Declaring metric variables
2023-06-11 19:29:32,975:INFO:Importing untrained model
2023-06-11 19:29:32,980:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:29:32,990:INFO:Starting cross validation
2023-06-11 19:29:33,009:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:33,259:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:29:33,270:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:29:33,275:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:29:33,349:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:29:33,356:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:29:33,463:INFO:Calculating mean and std
2023-06-11 19:29:33,467:INFO:Creating metrics dataframe
2023-06-11 19:29:33,476:INFO:Uploading results into container
2023-06-11 19:29:33,477:INFO:Uploading model into container now
2023-06-11 19:29:33,478:INFO:master_model_container: 9
2023-06-11 19:29:33,478:INFO:display_container: 2
2023-06-11 19:29:33,478:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:29:33,478:INFO:create_model() successfully completed......................................
2023-06-11 19:29:33,811:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:33,812:INFO:Creating metrics dataframe
2023-06-11 19:29:33,822:INFO:Initializing Huber Regressor
2023-06-11 19:29:33,822:INFO:Total runtime is 0.2750360409418742 minutes
2023-06-11 19:29:33,827:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:33,827:INFO:Initializing create_model()
2023-06-11 19:29:33,827:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:33,827:INFO:Checking exceptions
2023-06-11 19:29:33,830:INFO:Importing libraries
2023-06-11 19:29:33,830:INFO:Copying training dataset
2023-06-11 19:29:33,835:INFO:Defining folds
2023-06-11 19:29:33,835:INFO:Declaring metric variables
2023-06-11 19:29:33,839:INFO:Importing untrained model
2023-06-11 19:29:33,845:INFO:Huber Regressor Imported successfully
2023-06-11 19:29:33,856:INFO:Starting cross validation
2023-06-11 19:29:33,877:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:34,237:INFO:Calculating mean and std
2023-06-11 19:29:34,241:INFO:Creating metrics dataframe
2023-06-11 19:29:34,250:INFO:Uploading results into container
2023-06-11 19:29:34,252:INFO:Uploading model into container now
2023-06-11 19:29:34,253:INFO:master_model_container: 10
2023-06-11 19:29:34,253:INFO:display_container: 2
2023-06-11 19:29:34,254:INFO:HuberRegressor()
2023-06-11 19:29:34,254:INFO:create_model() successfully completed......................................
2023-06-11 19:29:34,586:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:34,586:INFO:Creating metrics dataframe
2023-06-11 19:29:34,598:INFO:Initializing K Neighbors Regressor
2023-06-11 19:29:34,599:INFO:Total runtime is 0.28797521591186526 minutes
2023-06-11 19:29:34,603:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:34,604:INFO:Initializing create_model()
2023-06-11 19:29:34,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:34,604:INFO:Checking exceptions
2023-06-11 19:29:34,607:INFO:Importing libraries
2023-06-11 19:29:34,607:INFO:Copying training dataset
2023-06-11 19:29:34,611:INFO:Defining folds
2023-06-11 19:29:34,612:INFO:Declaring metric variables
2023-06-11 19:29:34,617:INFO:Importing untrained model
2023-06-11 19:29:34,622:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:29:34,632:INFO:Starting cross validation
2023-06-11 19:29:34,655:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:35,027:INFO:Calculating mean and std
2023-06-11 19:29:35,029:INFO:Creating metrics dataframe
2023-06-11 19:29:35,033:INFO:Uploading results into container
2023-06-11 19:29:35,034:INFO:Uploading model into container now
2023-06-11 19:29:35,034:INFO:master_model_container: 11
2023-06-11 19:29:35,034:INFO:display_container: 2
2023-06-11 19:29:35,035:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:29:35,035:INFO:create_model() successfully completed......................................
2023-06-11 19:29:35,360:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:35,360:INFO:Creating metrics dataframe
2023-06-11 19:29:35,372:INFO:Initializing Decision Tree Regressor
2023-06-11 19:29:35,372:INFO:Total runtime is 0.30086666742960616 minutes
2023-06-11 19:29:35,376:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:35,377:INFO:Initializing create_model()
2023-06-11 19:29:35,377:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:35,377:INFO:Checking exceptions
2023-06-11 19:29:35,379:INFO:Importing libraries
2023-06-11 19:29:35,379:INFO:Copying training dataset
2023-06-11 19:29:35,384:INFO:Defining folds
2023-06-11 19:29:35,384:INFO:Declaring metric variables
2023-06-11 19:29:35,388:INFO:Importing untrained model
2023-06-11 19:29:35,393:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:29:35,401:INFO:Starting cross validation
2023-06-11 19:29:35,419:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:35,804:INFO:Calculating mean and std
2023-06-11 19:29:35,808:INFO:Creating metrics dataframe
2023-06-11 19:29:35,816:INFO:Uploading results into container
2023-06-11 19:29:35,817:INFO:Uploading model into container now
2023-06-11 19:29:35,818:INFO:master_model_container: 12
2023-06-11 19:29:35,818:INFO:display_container: 2
2023-06-11 19:29:35,818:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:29:35,818:INFO:create_model() successfully completed......................................
2023-06-11 19:29:36,165:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:36,165:INFO:Creating metrics dataframe
2023-06-11 19:29:36,177:INFO:Initializing Random Forest Regressor
2023-06-11 19:29:36,177:INFO:Total runtime is 0.3142789681752523 minutes
2023-06-11 19:29:36,180:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:36,181:INFO:Initializing create_model()
2023-06-11 19:29:36,181:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:36,181:INFO:Checking exceptions
2023-06-11 19:29:36,183:INFO:Importing libraries
2023-06-11 19:29:36,184:INFO:Copying training dataset
2023-06-11 19:29:36,189:INFO:Defining folds
2023-06-11 19:29:36,189:INFO:Declaring metric variables
2023-06-11 19:29:36,193:INFO:Importing untrained model
2023-06-11 19:29:36,198:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:29:36,209:INFO:Starting cross validation
2023-06-11 19:29:36,229:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:37,776:INFO:Calculating mean and std
2023-06-11 19:29:37,778:INFO:Creating metrics dataframe
2023-06-11 19:29:37,783:INFO:Uploading results into container
2023-06-11 19:29:37,784:INFO:Uploading model into container now
2023-06-11 19:29:37,785:INFO:master_model_container: 13
2023-06-11 19:29:37,785:INFO:display_container: 2
2023-06-11 19:29:37,785:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:29:37,786:INFO:create_model() successfully completed......................................
2023-06-11 19:29:38,135:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:38,136:INFO:Creating metrics dataframe
2023-06-11 19:29:38,149:INFO:Initializing Extra Trees Regressor
2023-06-11 19:29:38,149:INFO:Total runtime is 0.347153913974762 minutes
2023-06-11 19:29:38,154:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:38,155:INFO:Initializing create_model()
2023-06-11 19:29:38,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:38,155:INFO:Checking exceptions
2023-06-11 19:29:38,159:INFO:Importing libraries
2023-06-11 19:29:38,160:INFO:Copying training dataset
2023-06-11 19:29:38,165:INFO:Defining folds
2023-06-11 19:29:38,166:INFO:Declaring metric variables
2023-06-11 19:29:38,170:INFO:Importing untrained model
2023-06-11 19:29:38,175:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:29:38,185:INFO:Starting cross validation
2023-06-11 19:29:38,201:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:39,066:INFO:Calculating mean and std
2023-06-11 19:29:39,069:INFO:Creating metrics dataframe
2023-06-11 19:29:39,074:INFO:Uploading results into container
2023-06-11 19:29:39,075:INFO:Uploading model into container now
2023-06-11 19:29:39,076:INFO:master_model_container: 14
2023-06-11 19:29:39,076:INFO:display_container: 2
2023-06-11 19:29:39,076:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:29:39,076:INFO:create_model() successfully completed......................................
2023-06-11 19:29:39,400:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:39,400:INFO:Creating metrics dataframe
2023-06-11 19:29:39,415:INFO:Initializing AdaBoost Regressor
2023-06-11 19:29:39,415:INFO:Total runtime is 0.36824899911880493 minutes
2023-06-11 19:29:39,419:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:39,420:INFO:Initializing create_model()
2023-06-11 19:29:39,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:39,420:INFO:Checking exceptions
2023-06-11 19:29:39,423:INFO:Importing libraries
2023-06-11 19:29:39,423:INFO:Copying training dataset
2023-06-11 19:29:39,428:INFO:Defining folds
2023-06-11 19:29:39,428:INFO:Declaring metric variables
2023-06-11 19:29:39,433:INFO:Importing untrained model
2023-06-11 19:29:39,438:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:29:39,447:INFO:Starting cross validation
2023-06-11 19:29:39,469:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:39,990:INFO:Calculating mean and std
2023-06-11 19:29:39,993:INFO:Creating metrics dataframe
2023-06-11 19:29:40,001:INFO:Uploading results into container
2023-06-11 19:29:40,003:INFO:Uploading model into container now
2023-06-11 19:29:40,004:INFO:master_model_container: 15
2023-06-11 19:29:40,005:INFO:display_container: 2
2023-06-11 19:29:40,005:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:29:40,005:INFO:create_model() successfully completed......................................
2023-06-11 19:29:40,349:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:40,349:INFO:Creating metrics dataframe
2023-06-11 19:29:40,362:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:29:40,362:INFO:Total runtime is 0.38403770128885906 minutes
2023-06-11 19:29:40,366:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:40,366:INFO:Initializing create_model()
2023-06-11 19:29:40,366:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:40,366:INFO:Checking exceptions
2023-06-11 19:29:40,370:INFO:Importing libraries
2023-06-11 19:29:40,370:INFO:Copying training dataset
2023-06-11 19:29:40,375:INFO:Defining folds
2023-06-11 19:29:40,375:INFO:Declaring metric variables
2023-06-11 19:29:40,379:INFO:Importing untrained model
2023-06-11 19:29:40,383:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:29:40,391:INFO:Starting cross validation
2023-06-11 19:29:40,407:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:41,402:INFO:Calculating mean and std
2023-06-11 19:29:41,405:INFO:Creating metrics dataframe
2023-06-11 19:29:41,413:INFO:Uploading results into container
2023-06-11 19:29:41,415:INFO:Uploading model into container now
2023-06-11 19:29:41,415:INFO:master_model_container: 16
2023-06-11 19:29:41,415:INFO:display_container: 2
2023-06-11 19:29:41,416:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:29:41,416:INFO:create_model() successfully completed......................................
2023-06-11 19:29:41,759:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:41,759:INFO:Creating metrics dataframe
2023-06-11 19:29:41,772:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:29:41,772:INFO:Total runtime is 0.4075384775797526 minutes
2023-06-11 19:29:41,776:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:41,776:INFO:Initializing create_model()
2023-06-11 19:29:41,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:41,776:INFO:Checking exceptions
2023-06-11 19:29:41,779:INFO:Importing libraries
2023-06-11 19:29:41,779:INFO:Copying training dataset
2023-06-11 19:29:41,784:INFO:Defining folds
2023-06-11 19:29:41,784:INFO:Declaring metric variables
2023-06-11 19:29:41,788:INFO:Importing untrained model
2023-06-11 19:29:41,792:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:29:41,801:INFO:Starting cross validation
2023-06-11 19:29:41,818:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:42,418:INFO:Calculating mean and std
2023-06-11 19:29:42,420:INFO:Creating metrics dataframe
2023-06-11 19:29:42,425:INFO:Uploading results into container
2023-06-11 19:29:42,426:INFO:Uploading model into container now
2023-06-11 19:29:42,427:INFO:master_model_container: 17
2023-06-11 19:29:42,427:INFO:display_container: 2
2023-06-11 19:29:42,427:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:29:42,427:INFO:create_model() successfully completed......................................
2023-06-11 19:29:42,752:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:42,753:INFO:Creating metrics dataframe
2023-06-11 19:29:42,766:INFO:Initializing Dummy Regressor
2023-06-11 19:29:42,766:INFO:Total runtime is 0.42410232226053873 minutes
2023-06-11 19:29:42,771:INFO:SubProcess create_model() called ==================================
2023-06-11 19:29:42,771:INFO:Initializing create_model()
2023-06-11 19:29:42,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab74a00>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:42,771:INFO:Checking exceptions
2023-06-11 19:29:42,774:INFO:Importing libraries
2023-06-11 19:29:42,774:INFO:Copying training dataset
2023-06-11 19:29:42,778:INFO:Defining folds
2023-06-11 19:29:42,779:INFO:Declaring metric variables
2023-06-11 19:29:42,783:INFO:Importing untrained model
2023-06-11 19:29:42,787:INFO:Dummy Regressor Imported successfully
2023-06-11 19:29:42,796:INFO:Starting cross validation
2023-06-11 19:29:42,812:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:29:43,178:INFO:Calculating mean and std
2023-06-11 19:29:43,181:INFO:Creating metrics dataframe
2023-06-11 19:29:43,187:INFO:Uploading results into container
2023-06-11 19:29:43,188:INFO:Uploading model into container now
2023-06-11 19:29:43,189:INFO:master_model_container: 18
2023-06-11 19:29:43,189:INFO:display_container: 2
2023-06-11 19:29:43,189:INFO:DummyRegressor()
2023-06-11 19:29:43,189:INFO:create_model() successfully completed......................................
2023-06-11 19:29:43,544:INFO:SubProcess create_model() end ==================================
2023-06-11 19:29:43,545:INFO:Creating metrics dataframe
2023-06-11 19:29:43,570:INFO:Initializing create_model()
2023-06-11 19:29:43,570:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:29:43,570:INFO:Checking exceptions
2023-06-11 19:29:43,575:INFO:Importing libraries
2023-06-11 19:29:43,575:INFO:Copying training dataset
2023-06-11 19:29:43,579:INFO:Defining folds
2023-06-11 19:29:43,579:INFO:Declaring metric variables
2023-06-11 19:29:43,579:INFO:Importing untrained model
2023-06-11 19:29:43,579:INFO:Declaring custom model
2023-06-11 19:29:43,580:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:29:43,595:INFO:Cross validation set to False
2023-06-11 19:29:43,595:INFO:Fitting Model
2023-06-11 19:29:44,594:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:29:44,594:INFO:create_model() successfully completed......................................
2023-06-11 19:29:44,957:INFO:master_model_container: 18
2023-06-11 19:29:44,957:INFO:display_container: 2
2023-06-11 19:29:44,958:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:29:44,958:INFO:compare_models() successfully completed......................................
2023-06-11 19:30:02,856:INFO:Initializing create_model()
2023-06-11 19:30:02,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b023b0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:02,856:INFO:Checking exceptions
2023-06-11 19:30:02,927:INFO:Importing libraries
2023-06-11 19:30:02,927:INFO:Copying training dataset
2023-06-11 19:30:02,933:INFO:Defining folds
2023-06-11 19:30:02,933:INFO:Declaring metric variables
2023-06-11 19:30:02,938:INFO:Importing untrained model
2023-06-11 19:30:02,938:INFO:Declaring custom model
2023-06-11 19:30:02,943:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:30:02,952:INFO:Starting cross validation
2023-06-11 19:30:02,970:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:03,092:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:03,103:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:03,110:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:03,137:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:03,140:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:03,151:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:03,182:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:03,184:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:10,142:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:10,515:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:10,679:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:10,819:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:11,179:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:11,191:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:11,420:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:11,524:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:11,568:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:12,050:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:15,127:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:15,585:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:16,145:INFO:Calculating mean and std
2023-06-11 19:30:16,147:INFO:Creating metrics dataframe
2023-06-11 19:30:16,155:INFO:Finalizing model
2023-06-11 19:30:16,314:INFO:Uploading results into container
2023-06-11 19:30:16,315:INFO:Uploading model into container now
2023-06-11 19:30:16,331:INFO:master_model_container: 19
2023-06-11 19:30:16,331:INFO:display_container: 3
2023-06-11 19:30:16,332:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:30:16,332:INFO:create_model() successfully completed......................................
2023-06-11 19:30:27,680:INFO:PyCaret RegressionExperiment
2023-06-11 19:30:27,680:INFO:Logging name: reg-default-name
2023-06-11 19:30:27,680:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:30:27,680:INFO:version 3.0.0.rc4
2023-06-11 19:30:27,680:INFO:Initializing setup()
2023-06-11 19:30:27,680:INFO:self.USI: e044
2023-06-11 19:30:27,680:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:30:27,680:INFO:Checking environment
2023-06-11 19:30:27,680:INFO:python_version: 3.10.6
2023-06-11 19:30:27,680:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:30:27,680:INFO:machine: x86_64
2023-06-11 19:30:27,680:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:30:27,681:INFO:Memory: svmem(total=6088237056, available=1391525888, percent=77.1, used=4320751616, free=177397760, active=1744490496, inactive=3259465728, buffers=54763520, cached=1535324160, shared=79429632, slab=454434816)
2023-06-11 19:30:27,683:INFO:Physical Core: 4
2023-06-11 19:30:27,683:INFO:Logical Core: 8
2023-06-11 19:30:27,683:INFO:Checking libraries
2023-06-11 19:30:27,683:INFO:System:
2023-06-11 19:30:27,683:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:30:27,683:INFO:executable: /usr/bin/python3
2023-06-11 19:30:27,683:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:30:27,684:INFO:PyCaret required dependencies:
2023-06-11 19:30:27,684:INFO:                 pip: 22.0.2
2023-06-11 19:30:27,684:INFO:          setuptools: 59.6.0
2023-06-11 19:30:27,684:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:30:27,684:INFO:             IPython: 8.5.0
2023-06-11 19:30:27,684:INFO:          ipywidgets: 8.0.2
2023-06-11 19:30:27,684:INFO:                tqdm: 4.64.1
2023-06-11 19:30:27,684:INFO:               numpy: 1.22.4
2023-06-11 19:30:27,684:INFO:              pandas: 1.4.4
2023-06-11 19:30:27,684:INFO:              jinja2: 3.1.2
2023-06-11 19:30:27,684:INFO:               scipy: 1.8.1
2023-06-11 19:30:27,684:INFO:              joblib: 1.2.0
2023-06-11 19:30:27,684:INFO:             sklearn: 1.1.2
2023-06-11 19:30:27,684:INFO:                pyod: 1.0.5
2023-06-11 19:30:27,684:INFO:            imblearn: 0.9.1
2023-06-11 19:30:27,684:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:30:27,684:INFO:            lightgbm: 3.3.2
2023-06-11 19:30:27,684:INFO:               numba: 0.55.2
2023-06-11 19:30:27,684:INFO:            requests: 2.25.1
2023-06-11 19:30:27,684:INFO:          matplotlib: 3.6.0
2023-06-11 19:30:27,684:INFO:          scikitplot: 0.3.7
2023-06-11 19:30:27,684:INFO:         yellowbrick: 1.5
2023-06-11 19:30:27,684:INFO:              plotly: 5.10.0
2023-06-11 19:30:27,684:INFO:             kaleido: 0.2.1
2023-06-11 19:30:27,684:INFO:         statsmodels: 0.13.2
2023-06-11 19:30:27,684:INFO:              sktime: 0.13.4
2023-06-11 19:30:27,684:INFO:               tbats: 1.1.1
2023-06-11 19:30:27,685:INFO:            pmdarima: 1.8.5
2023-06-11 19:30:27,685:INFO:              psutil: 5.9.2
2023-06-11 19:30:27,685:INFO:PyCaret optional dependencies:
2023-06-11 19:30:27,685:INFO:                shap: Not installed
2023-06-11 19:30:27,685:INFO:           interpret: Not installed
2023-06-11 19:30:27,685:INFO:                umap: Not installed
2023-06-11 19:30:27,685:INFO:    pandas_profiling: Not installed
2023-06-11 19:30:27,685:INFO:  explainerdashboard: Not installed
2023-06-11 19:30:27,685:INFO:             autoviz: Not installed
2023-06-11 19:30:27,685:INFO:           fairlearn: Not installed
2023-06-11 19:30:27,685:INFO:             xgboost: Not installed
2023-06-11 19:30:27,685:INFO:            catboost: Not installed
2023-06-11 19:30:27,685:INFO:              kmodes: Not installed
2023-06-11 19:30:27,685:INFO:             mlxtend: 0.21.0
2023-06-11 19:30:27,685:INFO:       statsforecast: Not installed
2023-06-11 19:30:27,685:INFO:        tune_sklearn: Not installed
2023-06-11 19:30:27,685:INFO:                 ray: Not installed
2023-06-11 19:30:27,685:INFO:            hyperopt: Not installed
2023-06-11 19:30:27,685:INFO:              optuna: Not installed
2023-06-11 19:30:27,685:INFO:               skopt: Not installed
2023-06-11 19:30:27,685:INFO:              mlflow: 1.29.0
2023-06-11 19:30:27,685:INFO:              gradio: 3.4.1
2023-06-11 19:30:27,686:INFO:             fastapi: 0.85.0
2023-06-11 19:30:27,686:INFO:             uvicorn: 0.18.3
2023-06-11 19:30:27,686:INFO:              m2cgen: 0.10.0
2023-06-11 19:30:27,686:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:30:27,686:INFO:                nltk: 3.7
2023-06-11 19:30:27,686:INFO:            pyLDAvis: Not installed
2023-06-11 19:30:27,686:INFO:              gensim: Not installed
2023-06-11 19:30:27,686:INFO:               spacy: 3.5.0
2023-06-11 19:30:27,686:INFO:           wordcloud: Not installed
2023-06-11 19:30:27,686:INFO:            textblob: 0.17.1
2023-06-11 19:30:27,686:INFO:               fugue: Not installed
2023-06-11 19:30:27,686:INFO:           streamlit: 1.13.0
2023-06-11 19:30:27,686:INFO:             prophet: Not installed
2023-06-11 19:30:27,686:INFO:None
2023-06-11 19:30:27,686:INFO:Set up data.
2023-06-11 19:30:27,703:INFO:Set up train/test split.
2023-06-11 19:30:27,709:INFO:Set up index.
2023-06-11 19:30:27,710:INFO:Set up folding strategy.
2023-06-11 19:30:27,710:INFO:Assigning column types.
2023-06-11 19:30:27,714:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-11 19:30:27,714:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,719:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,725:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,791:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:27,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:27,842:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,847:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,852:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,916:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:27,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:27,968:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-11 19:30:27,973:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:30:27,978:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,101:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,107:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,177:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,230:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,231:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-11 19:30:28,242:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,373:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,492:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-11 19:30:28,572:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,625:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,706:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,763:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-11 19:30:28,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:28,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:28,995:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:30:29,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:29,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:29,050:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-11 19:30:29,178:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:29,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:29,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:29,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:29,312:INFO:Preparing preprocessing pipeline...
2023-06-11 19:30:29,313:INFO:Set up simple imputation.
2023-06-11 19:30:29,315:INFO:Set up encoding of categorical features.
2023-06-11 19:30:29,316:INFO:Set up polynomial features.
2023-06-11 19:30:29,316:INFO:Set up variance threshold.
2023-06-11 19:30:29,316:INFO:Set up removing multicollinearity.
2023-06-11 19:30:29,316:INFO:Set up feature normalization.
2023-06-11 19:30:29,316:INFO:Set up feature selection.
2023-06-11 19:30:29,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:29,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:30,370:INFO:Finished creating preprocessing pipeline.
2023-06-11 19:30:30,391:INFO:Pipeline: Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf)))])
2023-06-11 19:30:30,391:INFO:Creating final display dataframe.
2023-06-11 19:30:31,455:INFO:Setup display_container:                     Description             Value
0                    Session id               123
1                        Target           credito
2                   Target type        Regression
3                    Data shape        (2190, 11)
4              Train data shape        (1532, 11)
5               Test data shape         (658, 11)
6              Numeric features                27
7          Categorical features                 4
8      Rows with missing values             71.9%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation          constant
13     Maximum one-hot encoding                 5
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17       Low variance threshold               0.1
18     Remove multicollinearity              True
19  Multicollinearity threshold               0.9
20                    Normalize              True
21             Normalize method            zscore
22            Feature selection              True
23     Feature selection method           classic
24  Feature selection estimator          lightgbm
25  Number of features selected                10
26               Fold Generator             KFold
27                  Fold Number                10
28                     CPU Jobs                -1
29                      Use GPU             False
30               Log Experiment             False
31              Experiment Name  reg-default-name
32                          USI              e044
2023-06-11 19:30:31,591:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:31,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:31,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:31,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:30:31,722:INFO:setup() successfully completed in 4.04s...............
2023-06-11 19:30:40,079:INFO:Initializing compare_models()
2023-06-11 19:30:40,079:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, include=None, fold=7, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, 'include': None, 'exclude': None, 'fold': 7, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:30:40,079:INFO:Checking exceptions
2023-06-11 19:30:40,086:INFO:Preparing display monitor
2023-06-11 19:30:40,170:INFO:Initializing Linear Regression
2023-06-11 19:30:40,170:INFO:Total runtime is 3.993511199951172e-06 minutes
2023-06-11 19:30:40,174:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:40,174:INFO:Initializing create_model()
2023-06-11 19:30:40,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=lr, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:40,175:INFO:Checking exceptions
2023-06-11 19:30:40,180:INFO:Importing libraries
2023-06-11 19:30:40,180:INFO:Copying training dataset
2023-06-11 19:30:40,186:INFO:Defining folds
2023-06-11 19:30:40,186:INFO:Declaring metric variables
2023-06-11 19:30:40,190:INFO:Importing untrained model
2023-06-11 19:30:40,195:INFO:Linear Regression Imported successfully
2023-06-11 19:30:40,206:INFO:Starting cross validation
2023-06-11 19:30:40,225:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:40,780:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:40,848:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:40,855:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:40,880:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:40,885:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:40,889:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:40,899:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:47,400:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:47,449:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:47,527:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:47,568:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:47,652:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:47,716:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:47,884:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:30:48,784:INFO:Calculating mean and std
2023-06-11 19:30:48,787:INFO:Creating metrics dataframe
2023-06-11 19:30:48,797:INFO:Uploading results into container
2023-06-11 19:30:48,799:INFO:Uploading model into container now
2023-06-11 19:30:48,799:INFO:master_model_container: 1
2023-06-11 19:30:48,800:INFO:display_container: 2
2023-06-11 19:30:48,800:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:30:48,800:INFO:create_model() successfully completed......................................
2023-06-11 19:30:49,141:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:49,141:INFO:Creating metrics dataframe
2023-06-11 19:30:49,149:INFO:Initializing Lasso Regression
2023-06-11 19:30:49,149:INFO:Total runtime is 0.14965403477350872 minutes
2023-06-11 19:30:49,153:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:49,154:INFO:Initializing create_model()
2023-06-11 19:30:49,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=lasso, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:49,154:INFO:Checking exceptions
2023-06-11 19:30:49,156:INFO:Importing libraries
2023-06-11 19:30:49,156:INFO:Copying training dataset
2023-06-11 19:30:49,160:INFO:Defining folds
2023-06-11 19:30:49,161:INFO:Declaring metric variables
2023-06-11 19:30:49,165:INFO:Importing untrained model
2023-06-11 19:30:49,169:INFO:Lasso Regression Imported successfully
2023-06-11 19:30:49,177:INFO:Starting cross validation
2023-06-11 19:30:49,194:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:49,396:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.436e+22, tolerance: 3.375e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:30:49,398:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.662e+21, tolerance: 3.167e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:30:49,401:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.576e+22, tolerance: 3.362e+19
  model = cd_fast.enet_coordinate_descent(

2023-06-11 19:30:49,726:INFO:Calculating mean and std
2023-06-11 19:30:49,729:INFO:Creating metrics dataframe
2023-06-11 19:30:49,734:INFO:Uploading results into container
2023-06-11 19:30:49,735:INFO:Uploading model into container now
2023-06-11 19:30:49,736:INFO:master_model_container: 2
2023-06-11 19:30:49,736:INFO:display_container: 2
2023-06-11 19:30:49,736:INFO:Lasso(random_state=123)
2023-06-11 19:30:49,736:INFO:create_model() successfully completed......................................
2023-06-11 19:30:50,054:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:50,054:INFO:Creating metrics dataframe
2023-06-11 19:30:50,064:INFO:Initializing Ridge Regression
2023-06-11 19:30:50,064:INFO:Total runtime is 0.1649059851964315 minutes
2023-06-11 19:30:50,072:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:50,073:INFO:Initializing create_model()
2023-06-11 19:30:50,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=ridge, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:50,073:INFO:Checking exceptions
2023-06-11 19:30:50,076:INFO:Importing libraries
2023-06-11 19:30:50,076:INFO:Copying training dataset
2023-06-11 19:30:50,081:INFO:Defining folds
2023-06-11 19:30:50,081:INFO:Declaring metric variables
2023-06-11 19:30:50,086:INFO:Importing untrained model
2023-06-11 19:30:50,091:INFO:Ridge Regression Imported successfully
2023-06-11 19:30:50,102:INFO:Starting cross validation
2023-06-11 19:30:50,118:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:50,510:INFO:Calculating mean and std
2023-06-11 19:30:50,514:INFO:Creating metrics dataframe
2023-06-11 19:30:50,520:INFO:Uploading results into container
2023-06-11 19:30:50,521:INFO:Uploading model into container now
2023-06-11 19:30:50,522:INFO:master_model_container: 3
2023-06-11 19:30:50,522:INFO:display_container: 2
2023-06-11 19:30:50,522:INFO:Ridge(random_state=123)
2023-06-11 19:30:50,522:INFO:create_model() successfully completed......................................
2023-06-11 19:30:50,840:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:50,840:INFO:Creating metrics dataframe
2023-06-11 19:30:50,850:INFO:Initializing Elastic Net
2023-06-11 19:30:50,851:INFO:Total runtime is 0.1780181606610616 minutes
2023-06-11 19:30:50,855:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:50,856:INFO:Initializing create_model()
2023-06-11 19:30:50,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=en, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:50,856:INFO:Checking exceptions
2023-06-11 19:30:50,859:INFO:Importing libraries
2023-06-11 19:30:50,859:INFO:Copying training dataset
2023-06-11 19:30:50,863:INFO:Defining folds
2023-06-11 19:30:50,863:INFO:Declaring metric variables
2023-06-11 19:30:50,867:INFO:Importing untrained model
2023-06-11 19:30:50,873:INFO:Elastic Net Imported successfully
2023-06-11 19:30:50,885:INFO:Starting cross validation
2023-06-11 19:30:50,900:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:51,289:INFO:Calculating mean and std
2023-06-11 19:30:51,291:INFO:Creating metrics dataframe
2023-06-11 19:30:51,298:INFO:Uploading results into container
2023-06-11 19:30:51,299:INFO:Uploading model into container now
2023-06-11 19:30:51,299:INFO:master_model_container: 4
2023-06-11 19:30:51,299:INFO:display_container: 2
2023-06-11 19:30:51,299:INFO:ElasticNet(random_state=123)
2023-06-11 19:30:51,299:INFO:create_model() successfully completed......................................
2023-06-11 19:30:51,621:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:51,621:INFO:Creating metrics dataframe
2023-06-11 19:30:51,631:INFO:Initializing Least Angle Regression
2023-06-11 19:30:51,631:INFO:Total runtime is 0.19102681875228883 minutes
2023-06-11 19:30:51,635:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:51,636:INFO:Initializing create_model()
2023-06-11 19:30:51,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=lar, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:51,636:INFO:Checking exceptions
2023-06-11 19:30:51,639:INFO:Importing libraries
2023-06-11 19:30:51,639:INFO:Copying training dataset
2023-06-11 19:30:51,643:INFO:Defining folds
2023-06-11 19:30:51,643:INFO:Declaring metric variables
2023-06-11 19:30:51,648:INFO:Importing untrained model
2023-06-11 19:30:51,653:INFO:Least Angle Regression Imported successfully
2023-06-11 19:30:51,663:INFO:Starting cross validation
2023-06-11 19:30:51,683:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:51,871:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:51,885:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:51,887:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:51,888:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:51,926:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:51,943:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:51,950:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:52,091:INFO:Calculating mean and std
2023-06-11 19:30:52,093:INFO:Creating metrics dataframe
2023-06-11 19:30:52,099:INFO:Uploading results into container
2023-06-11 19:30:52,100:INFO:Uploading model into container now
2023-06-11 19:30:52,100:INFO:master_model_container: 5
2023-06-11 19:30:52,100:INFO:display_container: 2
2023-06-11 19:30:52,100:INFO:Lars(random_state=123)
2023-06-11 19:30:52,101:INFO:create_model() successfully completed......................................
2023-06-11 19:30:52,410:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:52,410:INFO:Creating metrics dataframe
2023-06-11 19:30:52,420:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:30:52,420:INFO:Total runtime is 0.20417695045471193 minutes
2023-06-11 19:30:52,424:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:52,424:INFO:Initializing create_model()
2023-06-11 19:30:52,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=llar, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:52,425:INFO:Checking exceptions
2023-06-11 19:30:52,427:INFO:Importing libraries
2023-06-11 19:30:52,427:INFO:Copying training dataset
2023-06-11 19:30:52,431:INFO:Defining folds
2023-06-11 19:30:52,431:INFO:Declaring metric variables
2023-06-11 19:30:52,435:INFO:Importing untrained model
2023-06-11 19:30:52,440:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:30:52,451:INFO:Starting cross validation
2023-06-11 19:30:52,466:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:52,669:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:30:52,670:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:30:52,681:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:30:52,683:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:30:52,683:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:30:52,684:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:30:52,685:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:30:52,850:INFO:Calculating mean and std
2023-06-11 19:30:52,852:INFO:Creating metrics dataframe
2023-06-11 19:30:52,857:INFO:Uploading results into container
2023-06-11 19:30:52,858:INFO:Uploading model into container now
2023-06-11 19:30:52,858:INFO:master_model_container: 6
2023-06-11 19:30:52,858:INFO:display_container: 2
2023-06-11 19:30:52,859:INFO:LassoLars(random_state=123)
2023-06-11 19:30:52,859:INFO:create_model() successfully completed......................................
2023-06-11 19:30:53,189:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:53,189:INFO:Creating metrics dataframe
2023-06-11 19:30:53,200:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:30:53,200:INFO:Total runtime is 0.21717309157053633 minutes
2023-06-11 19:30:53,203:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:53,204:INFO:Initializing create_model()
2023-06-11 19:30:53,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=omp, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:53,204:INFO:Checking exceptions
2023-06-11 19:30:53,206:INFO:Importing libraries
2023-06-11 19:30:53,206:INFO:Copying training dataset
2023-06-11 19:30:53,211:INFO:Defining folds
2023-06-11 19:30:53,211:INFO:Declaring metric variables
2023-06-11 19:30:53,216:INFO:Importing untrained model
2023-06-11 19:30:53,220:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:30:53,230:INFO:Starting cross validation
2023-06-11 19:30:53,246:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:53,419:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:53,432:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:53,456:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:53,456:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:53,480:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:53,501:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:53,511:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:30:53,654:INFO:Calculating mean and std
2023-06-11 19:30:53,657:INFO:Creating metrics dataframe
2023-06-11 19:30:53,665:INFO:Uploading results into container
2023-06-11 19:30:53,666:INFO:Uploading model into container now
2023-06-11 19:30:53,666:INFO:master_model_container: 7
2023-06-11 19:30:53,667:INFO:display_container: 2
2023-06-11 19:30:53,667:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:30:53,667:INFO:create_model() successfully completed......................................
2023-06-11 19:30:54,026:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:54,026:INFO:Creating metrics dataframe
2023-06-11 19:30:54,036:INFO:Initializing Bayesian Ridge
2023-06-11 19:30:54,037:INFO:Total runtime is 0.23111691474914553 minutes
2023-06-11 19:30:54,040:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:54,041:INFO:Initializing create_model()
2023-06-11 19:30:54,041:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=br, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:54,041:INFO:Checking exceptions
2023-06-11 19:30:54,043:INFO:Importing libraries
2023-06-11 19:30:54,043:INFO:Copying training dataset
2023-06-11 19:30:54,048:INFO:Defining folds
2023-06-11 19:30:54,048:INFO:Declaring metric variables
2023-06-11 19:30:54,052:INFO:Importing untrained model
2023-06-11 19:30:54,057:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:30:54,069:INFO:Starting cross validation
2023-06-11 19:30:54,085:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:54,509:INFO:Calculating mean and std
2023-06-11 19:30:54,512:INFO:Creating metrics dataframe
2023-06-11 19:30:54,521:INFO:Uploading results into container
2023-06-11 19:30:54,522:INFO:Uploading model into container now
2023-06-11 19:30:54,523:INFO:master_model_container: 8
2023-06-11 19:30:54,523:INFO:display_container: 2
2023-06-11 19:30:54,524:INFO:BayesianRidge()
2023-06-11 19:30:54,524:INFO:create_model() successfully completed......................................
2023-06-11 19:30:54,855:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:54,855:INFO:Creating metrics dataframe
2023-06-11 19:30:54,866:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:30:54,866:INFO:Total runtime is 0.24493899345397951 minutes
2023-06-11 19:30:54,869:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:54,870:INFO:Initializing create_model()
2023-06-11 19:30:54,870:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=par, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:54,870:INFO:Checking exceptions
2023-06-11 19:30:54,872:INFO:Importing libraries
2023-06-11 19:30:54,872:INFO:Copying training dataset
2023-06-11 19:30:54,877:INFO:Defining folds
2023-06-11 19:30:54,878:INFO:Declaring metric variables
2023-06-11 19:30:54,882:INFO:Importing untrained model
2023-06-11 19:30:54,886:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:30:54,895:INFO:Starting cross validation
2023-06-11 19:30:54,913:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:55,197:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:30:55,233:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:30:55,239:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:30:55,240:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:30:55,250:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:30:55,269:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:30:55,275:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:30:55,420:INFO:Calculating mean and std
2023-06-11 19:30:55,421:INFO:Creating metrics dataframe
2023-06-11 19:30:55,426:INFO:Uploading results into container
2023-06-11 19:30:55,427:INFO:Uploading model into container now
2023-06-11 19:30:55,427:INFO:master_model_container: 9
2023-06-11 19:30:55,427:INFO:display_container: 2
2023-06-11 19:30:55,428:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:30:55,428:INFO:create_model() successfully completed......................................
2023-06-11 19:30:55,753:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:55,753:INFO:Creating metrics dataframe
2023-06-11 19:30:55,766:INFO:Initializing Huber Regressor
2023-06-11 19:30:55,766:INFO:Total runtime is 0.2599470416704814 minutes
2023-06-11 19:30:55,770:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:55,771:INFO:Initializing create_model()
2023-06-11 19:30:55,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=huber, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:55,771:INFO:Checking exceptions
2023-06-11 19:30:55,774:INFO:Importing libraries
2023-06-11 19:30:55,774:INFO:Copying training dataset
2023-06-11 19:30:55,779:INFO:Defining folds
2023-06-11 19:30:55,779:INFO:Declaring metric variables
2023-06-11 19:30:55,783:INFO:Importing untrained model
2023-06-11 19:30:55,790:INFO:Huber Regressor Imported successfully
2023-06-11 19:30:55,802:INFO:Starting cross validation
2023-06-11 19:30:55,821:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:56,245:INFO:Calculating mean and std
2023-06-11 19:30:56,247:INFO:Creating metrics dataframe
2023-06-11 19:30:56,252:INFO:Uploading results into container
2023-06-11 19:30:56,253:INFO:Uploading model into container now
2023-06-11 19:30:56,254:INFO:master_model_container: 10
2023-06-11 19:30:56,254:INFO:display_container: 2
2023-06-11 19:30:56,254:INFO:HuberRegressor()
2023-06-11 19:30:56,254:INFO:create_model() successfully completed......................................
2023-06-11 19:30:56,576:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:56,577:INFO:Creating metrics dataframe
2023-06-11 19:30:56,594:INFO:Initializing K Neighbors Regressor
2023-06-11 19:30:56,594:INFO:Total runtime is 0.27373776435852054 minutes
2023-06-11 19:30:56,598:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:56,599:INFO:Initializing create_model()
2023-06-11 19:30:56,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=knn, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:56,599:INFO:Checking exceptions
2023-06-11 19:30:56,603:INFO:Importing libraries
2023-06-11 19:30:56,603:INFO:Copying training dataset
2023-06-11 19:30:56,610:INFO:Defining folds
2023-06-11 19:30:56,610:INFO:Declaring metric variables
2023-06-11 19:30:56,615:INFO:Importing untrained model
2023-06-11 19:30:56,620:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:30:56,631:INFO:Starting cross validation
2023-06-11 19:30:56,648:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:57,070:INFO:Calculating mean and std
2023-06-11 19:30:57,073:INFO:Creating metrics dataframe
2023-06-11 19:30:57,079:INFO:Uploading results into container
2023-06-11 19:30:57,080:INFO:Uploading model into container now
2023-06-11 19:30:57,080:INFO:master_model_container: 11
2023-06-11 19:30:57,080:INFO:display_container: 2
2023-06-11 19:30:57,081:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:30:57,081:INFO:create_model() successfully completed......................................
2023-06-11 19:30:57,431:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:57,431:INFO:Creating metrics dataframe
2023-06-11 19:30:57,444:INFO:Initializing Decision Tree Regressor
2023-06-11 19:30:57,445:INFO:Total runtime is 0.2879170099894206 minutes
2023-06-11 19:30:57,448:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:57,449:INFO:Initializing create_model()
2023-06-11 19:30:57,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=dt, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:57,449:INFO:Checking exceptions
2023-06-11 19:30:57,452:INFO:Importing libraries
2023-06-11 19:30:57,452:INFO:Copying training dataset
2023-06-11 19:30:57,458:INFO:Defining folds
2023-06-11 19:30:57,458:INFO:Declaring metric variables
2023-06-11 19:30:57,469:INFO:Importing untrained model
2023-06-11 19:30:57,475:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:30:57,485:INFO:Starting cross validation
2023-06-11 19:30:57,505:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:30:57,924:INFO:Calculating mean and std
2023-06-11 19:30:57,927:INFO:Creating metrics dataframe
2023-06-11 19:30:57,934:INFO:Uploading results into container
2023-06-11 19:30:57,935:INFO:Uploading model into container now
2023-06-11 19:30:57,936:INFO:master_model_container: 12
2023-06-11 19:30:57,936:INFO:display_container: 2
2023-06-11 19:30:57,936:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:30:57,936:INFO:create_model() successfully completed......................................
2023-06-11 19:30:58,300:INFO:SubProcess create_model() end ==================================
2023-06-11 19:30:58,300:INFO:Creating metrics dataframe
2023-06-11 19:30:58,313:INFO:Initializing Random Forest Regressor
2023-06-11 19:30:58,313:INFO:Total runtime is 0.3023941556612651 minutes
2023-06-11 19:30:58,317:INFO:SubProcess create_model() called ==================================
2023-06-11 19:30:58,318:INFO:Initializing create_model()
2023-06-11 19:30:58,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=rf, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:30:58,318:INFO:Checking exceptions
2023-06-11 19:30:58,320:INFO:Importing libraries
2023-06-11 19:30:58,321:INFO:Copying training dataset
2023-06-11 19:30:58,325:INFO:Defining folds
2023-06-11 19:30:58,326:INFO:Declaring metric variables
2023-06-11 19:30:58,330:INFO:Importing untrained model
2023-06-11 19:30:58,335:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:30:58,346:INFO:Starting cross validation
2023-06-11 19:30:58,361:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:00,241:INFO:Calculating mean and std
2023-06-11 19:31:00,244:INFO:Creating metrics dataframe
2023-06-11 19:31:00,249:INFO:Uploading results into container
2023-06-11 19:31:00,251:INFO:Uploading model into container now
2023-06-11 19:31:00,252:INFO:master_model_container: 13
2023-06-11 19:31:00,252:INFO:display_container: 2
2023-06-11 19:31:00,253:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:31:00,253:INFO:create_model() successfully completed......................................
2023-06-11 19:31:00,714:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:00,715:INFO:Creating metrics dataframe
2023-06-11 19:31:00,732:INFO:Initializing Extra Trees Regressor
2023-06-11 19:31:00,733:INFO:Total runtime is 0.3427174091339112 minutes
2023-06-11 19:31:00,740:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:00,741:INFO:Initializing create_model()
2023-06-11 19:31:00,741:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=et, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:00,741:INFO:Checking exceptions
2023-06-11 19:31:00,744:INFO:Importing libraries
2023-06-11 19:31:00,745:INFO:Copying training dataset
2023-06-11 19:31:00,755:INFO:Defining folds
2023-06-11 19:31:00,756:INFO:Declaring metric variables
2023-06-11 19:31:00,763:INFO:Importing untrained model
2023-06-11 19:31:00,771:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:31:00,785:INFO:Starting cross validation
2023-06-11 19:31:00,808:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:01,802:INFO:Calculating mean and std
2023-06-11 19:31:01,805:INFO:Creating metrics dataframe
2023-06-11 19:31:01,808:INFO:Uploading results into container
2023-06-11 19:31:01,809:INFO:Uploading model into container now
2023-06-11 19:31:01,810:INFO:master_model_container: 14
2023-06-11 19:31:01,810:INFO:display_container: 2
2023-06-11 19:31:01,810:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:31:01,810:INFO:create_model() successfully completed......................................
2023-06-11 19:31:02,124:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:02,124:INFO:Creating metrics dataframe
2023-06-11 19:31:02,138:INFO:Initializing AdaBoost Regressor
2023-06-11 19:31:02,139:INFO:Total runtime is 0.3661530454953512 minutes
2023-06-11 19:31:02,143:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:02,144:INFO:Initializing create_model()
2023-06-11 19:31:02,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=ada, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:02,144:INFO:Checking exceptions
2023-06-11 19:31:02,147:INFO:Importing libraries
2023-06-11 19:31:02,147:INFO:Copying training dataset
2023-06-11 19:31:02,152:INFO:Defining folds
2023-06-11 19:31:02,152:INFO:Declaring metric variables
2023-06-11 19:31:02,156:INFO:Importing untrained model
2023-06-11 19:31:02,161:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:31:02,169:INFO:Starting cross validation
2023-06-11 19:31:02,184:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:02,694:INFO:Calculating mean and std
2023-06-11 19:31:02,698:INFO:Creating metrics dataframe
2023-06-11 19:31:02,706:INFO:Uploading results into container
2023-06-11 19:31:02,707:INFO:Uploading model into container now
2023-06-11 19:31:02,708:INFO:master_model_container: 15
2023-06-11 19:31:02,708:INFO:display_container: 2
2023-06-11 19:31:02,709:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:31:02,709:INFO:create_model() successfully completed......................................
2023-06-11 19:31:03,084:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:03,084:INFO:Creating metrics dataframe
2023-06-11 19:31:03,102:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:31:03,103:INFO:Total runtime is 0.38221791585286463 minutes
2023-06-11 19:31:03,106:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:03,107:INFO:Initializing create_model()
2023-06-11 19:31:03,107:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=gbr, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:03,107:INFO:Checking exceptions
2023-06-11 19:31:03,110:INFO:Importing libraries
2023-06-11 19:31:03,110:INFO:Copying training dataset
2023-06-11 19:31:03,114:INFO:Defining folds
2023-06-11 19:31:03,115:INFO:Declaring metric variables
2023-06-11 19:31:03,118:INFO:Importing untrained model
2023-06-11 19:31:03,123:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:31:03,132:INFO:Starting cross validation
2023-06-11 19:31:03,145:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:04,032:INFO:Calculating mean and std
2023-06-11 19:31:04,035:INFO:Creating metrics dataframe
2023-06-11 19:31:04,040:INFO:Uploading results into container
2023-06-11 19:31:04,042:INFO:Uploading model into container now
2023-06-11 19:31:04,043:INFO:master_model_container: 16
2023-06-11 19:31:04,043:INFO:display_container: 2
2023-06-11 19:31:04,044:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:31:04,044:INFO:create_model() successfully completed......................................
2023-06-11 19:31:04,367:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:04,367:INFO:Creating metrics dataframe
2023-06-11 19:31:04,379:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:31:04,380:INFO:Total runtime is 0.403499714533488 minutes
2023-06-11 19:31:04,384:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:04,384:INFO:Initializing create_model()
2023-06-11 19:31:04,384:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=lightgbm, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:04,384:INFO:Checking exceptions
2023-06-11 19:31:04,388:INFO:Importing libraries
2023-06-11 19:31:04,388:INFO:Copying training dataset
2023-06-11 19:31:04,394:INFO:Defining folds
2023-06-11 19:31:04,395:INFO:Declaring metric variables
2023-06-11 19:31:04,400:INFO:Importing untrained model
2023-06-11 19:31:04,405:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:31:04,414:INFO:Starting cross validation
2023-06-11 19:31:04,427:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:05,027:INFO:Calculating mean and std
2023-06-11 19:31:05,029:INFO:Creating metrics dataframe
2023-06-11 19:31:05,033:INFO:Uploading results into container
2023-06-11 19:31:05,034:INFO:Uploading model into container now
2023-06-11 19:31:05,034:INFO:master_model_container: 17
2023-06-11 19:31:05,034:INFO:display_container: 2
2023-06-11 19:31:05,035:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:31:05,035:INFO:create_model() successfully completed......................................
2023-06-11 19:31:05,365:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:05,366:INFO:Creating metrics dataframe
2023-06-11 19:31:05,384:INFO:Initializing Dummy Regressor
2023-06-11 19:31:05,385:INFO:Total runtime is 0.42025129397710165 minutes
2023-06-11 19:31:05,391:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:05,392:INFO:Initializing create_model()
2023-06-11 19:31:05,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=dummy, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036ab13700>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:05,392:INFO:Checking exceptions
2023-06-11 19:31:05,396:INFO:Importing libraries
2023-06-11 19:31:05,396:INFO:Copying training dataset
2023-06-11 19:31:05,403:INFO:Defining folds
2023-06-11 19:31:05,403:INFO:Declaring metric variables
2023-06-11 19:31:05,408:INFO:Importing untrained model
2023-06-11 19:31:05,414:INFO:Dummy Regressor Imported successfully
2023-06-11 19:31:05,425:INFO:Starting cross validation
2023-06-11 19:31:05,444:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:05,838:INFO:Calculating mean and std
2023-06-11 19:31:05,840:INFO:Creating metrics dataframe
2023-06-11 19:31:05,845:INFO:Uploading results into container
2023-06-11 19:31:05,847:INFO:Uploading model into container now
2023-06-11 19:31:05,847:INFO:master_model_container: 18
2023-06-11 19:31:05,847:INFO:display_container: 2
2023-06-11 19:31:05,848:INFO:DummyRegressor()
2023-06-11 19:31:05,848:INFO:create_model() successfully completed......................................
2023-06-11 19:31:06,162:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:06,162:INFO:Creating metrics dataframe
2023-06-11 19:31:06,186:INFO:Initializing create_model()
2023-06-11 19:31:06,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036acb2470>, estimator=AdaBoostRegressor(random_state=123), fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:06,186:INFO:Checking exceptions
2023-06-11 19:31:06,190:INFO:Importing libraries
2023-06-11 19:31:06,191:INFO:Copying training dataset
2023-06-11 19:31:06,194:INFO:Defining folds
2023-06-11 19:31:06,194:INFO:Declaring metric variables
2023-06-11 19:31:06,194:INFO:Importing untrained model
2023-06-11 19:31:06,194:INFO:Declaring custom model
2023-06-11 19:31:06,195:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:31:06,207:INFO:Cross validation set to False
2023-06-11 19:31:06,207:INFO:Fitting Model
2023-06-11 19:31:06,859:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:31:06,859:INFO:create_model() successfully completed......................................
2023-06-11 19:31:07,204:INFO:master_model_container: 18
2023-06-11 19:31:07,204:INFO:display_container: 2
2023-06-11 19:31:07,204:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:31:07,204:INFO:compare_models() successfully completed......................................
2023-06-11 19:31:44,916:INFO:PyCaret RegressionExperiment
2023-06-11 19:31:44,916:INFO:Logging name: reg-default-name
2023-06-11 19:31:44,916:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:31:44,916:INFO:version 3.0.0.rc4
2023-06-11 19:31:44,916:INFO:Initializing setup()
2023-06-11 19:31:44,916:INFO:self.USI: fe5c
2023-06-11 19:31:44,916:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:31:44,916:INFO:Checking environment
2023-06-11 19:31:44,916:INFO:python_version: 3.10.6
2023-06-11 19:31:44,916:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:31:44,917:INFO:machine: x86_64
2023-06-11 19:31:44,917:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:31:44,917:INFO:Memory: svmem(total=6088237056, available=1153425408, percent=81.1, used=4521250816, free=276492288, active=1828655104, inactive=3101450240, buffers=32169984, cached=1258323968, shared=117473280, slab=454352896)
2023-06-11 19:31:44,918:INFO:Physical Core: 4
2023-06-11 19:31:44,918:INFO:Logical Core: 8
2023-06-11 19:31:44,918:INFO:Checking libraries
2023-06-11 19:31:44,918:INFO:System:
2023-06-11 19:31:44,918:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:31:44,918:INFO:executable: /usr/bin/python3
2023-06-11 19:31:44,918:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:31:44,918:INFO:PyCaret required dependencies:
2023-06-11 19:31:44,918:INFO:                 pip: 22.0.2
2023-06-11 19:31:44,918:INFO:          setuptools: 59.6.0
2023-06-11 19:31:44,918:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:31:44,918:INFO:             IPython: 8.5.0
2023-06-11 19:31:44,918:INFO:          ipywidgets: 8.0.2
2023-06-11 19:31:44,918:INFO:                tqdm: 4.64.1
2023-06-11 19:31:44,918:INFO:               numpy: 1.22.4
2023-06-11 19:31:44,918:INFO:              pandas: 1.4.4
2023-06-11 19:31:44,918:INFO:              jinja2: 3.1.2
2023-06-11 19:31:44,919:INFO:               scipy: 1.8.1
2023-06-11 19:31:44,919:INFO:              joblib: 1.2.0
2023-06-11 19:31:44,919:INFO:             sklearn: 1.1.2
2023-06-11 19:31:44,919:INFO:                pyod: 1.0.5
2023-06-11 19:31:44,919:INFO:            imblearn: 0.9.1
2023-06-11 19:31:44,919:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:31:44,919:INFO:            lightgbm: 3.3.2
2023-06-11 19:31:44,919:INFO:               numba: 0.55.2
2023-06-11 19:31:44,919:INFO:            requests: 2.25.1
2023-06-11 19:31:44,919:INFO:          matplotlib: 3.6.0
2023-06-11 19:31:44,919:INFO:          scikitplot: 0.3.7
2023-06-11 19:31:44,919:INFO:         yellowbrick: 1.5
2023-06-11 19:31:44,919:INFO:              plotly: 5.10.0
2023-06-11 19:31:44,919:INFO:             kaleido: 0.2.1
2023-06-11 19:31:44,919:INFO:         statsmodels: 0.13.2
2023-06-11 19:31:44,919:INFO:              sktime: 0.13.4
2023-06-11 19:31:44,919:INFO:               tbats: 1.1.1
2023-06-11 19:31:44,919:INFO:            pmdarima: 1.8.5
2023-06-11 19:31:44,919:INFO:              psutil: 5.9.2
2023-06-11 19:31:44,919:INFO:PyCaret optional dependencies:
2023-06-11 19:31:44,919:INFO:                shap: Not installed
2023-06-11 19:31:44,919:INFO:           interpret: Not installed
2023-06-11 19:31:44,919:INFO:                umap: Not installed
2023-06-11 19:31:44,919:INFO:    pandas_profiling: Not installed
2023-06-11 19:31:44,919:INFO:  explainerdashboard: Not installed
2023-06-11 19:31:44,919:INFO:             autoviz: Not installed
2023-06-11 19:31:44,919:INFO:           fairlearn: Not installed
2023-06-11 19:31:44,919:INFO:             xgboost: Not installed
2023-06-11 19:31:44,919:INFO:            catboost: Not installed
2023-06-11 19:31:44,920:INFO:              kmodes: Not installed
2023-06-11 19:31:44,920:INFO:             mlxtend: 0.21.0
2023-06-11 19:31:44,920:INFO:       statsforecast: Not installed
2023-06-11 19:31:44,920:INFO:        tune_sklearn: Not installed
2023-06-11 19:31:44,920:INFO:                 ray: Not installed
2023-06-11 19:31:44,920:INFO:            hyperopt: Not installed
2023-06-11 19:31:44,920:INFO:              optuna: Not installed
2023-06-11 19:31:44,920:INFO:               skopt: Not installed
2023-06-11 19:31:44,920:INFO:              mlflow: 1.29.0
2023-06-11 19:31:44,920:INFO:              gradio: 3.4.1
2023-06-11 19:31:44,920:INFO:             fastapi: 0.85.0
2023-06-11 19:31:44,920:INFO:             uvicorn: 0.18.3
2023-06-11 19:31:44,920:INFO:              m2cgen: 0.10.0
2023-06-11 19:31:44,920:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:31:44,920:INFO:                nltk: 3.7
2023-06-11 19:31:44,920:INFO:            pyLDAvis: Not installed
2023-06-11 19:31:44,920:INFO:              gensim: Not installed
2023-06-11 19:31:44,920:INFO:               spacy: 3.5.0
2023-06-11 19:31:44,920:INFO:           wordcloud: Not installed
2023-06-11 19:31:44,920:INFO:            textblob: 0.17.1
2023-06-11 19:31:44,920:INFO:               fugue: Not installed
2023-06-11 19:31:44,920:INFO:           streamlit: 1.13.0
2023-06-11 19:31:44,920:INFO:             prophet: Not installed
2023-06-11 19:31:44,920:INFO:None
2023-06-11 19:31:44,920:INFO:Set up data.
2023-06-11 19:31:44,938:INFO:Set up train/test split.
2023-06-11 19:31:44,945:INFO:Set up index.
2023-06-11 19:31:44,946:INFO:Set up folding strategy.
2023-06-11 19:31:44,946:INFO:Assigning column types.
2023-06-11 19:31:44,950:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-11 19:31:44,951:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:31:44,956:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:31:44,962:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,027:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,078:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,083:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,089:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,203:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,204:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-11 19:31:45,210:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,215:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,280:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,330:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,336:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,342:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,407:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,457:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,459:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-11 19:31:45,469:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,535:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,587:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,598:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,665:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,718:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-11 19:31:45,798:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,980:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:31:45,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:45,981:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-11 19:31:46,057:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:46,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,185:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:31:46,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,236:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-11 19:31:46,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,495:INFO:Preparing preprocessing pipeline...
2023-06-11 19:31:46,495:INFO:Set up simple imputation.
2023-06-11 19:31:46,498:INFO:Set up encoding of categorical features.
2023-06-11 19:31:46,498:INFO:Set up variance threshold.
2023-06-11 19:31:46,498:INFO:Set up removing multicollinearity.
2023-06-11 19:31:46,498:INFO:Set up feature normalization.
2023-06-11 19:31:46,498:INFO:Set up feature selection.
2023-06-11 19:31:46,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:46,856:INFO:Finished creating preprocessing pipeline.
2023-06-11 19:31:46,876:INFO:Pipeline: Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf)))])
2023-06-11 19:31:46,876:INFO:Creating final display dataframe.
2023-06-11 19:31:47,502:INFO:Setup display_container:                     Description             Value
0                    Session id               123
1                        Target           credito
2                   Target type        Regression
3                    Data shape        (2190, 11)
4              Train data shape        (1532, 11)
5               Test data shape         (658, 11)
6              Numeric features                27
7          Categorical features                 4
8      Rows with missing values             71.9%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation          constant
13     Maximum one-hot encoding                 5
14              Encoding method              None
15       Low variance threshold               0.1
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18                    Normalize              True
19             Normalize method            zscore
20            Feature selection              True
21     Feature selection method           classic
22  Feature selection estimator          lightgbm
23  Number of features selected                10
24               Fold Generator             KFold
25                  Fold Number                10
26                     CPU Jobs                -1
27                      Use GPU             False
28               Log Experiment             False
29              Experiment Name  reg-default-name
30                          USI              fe5c
2023-06-11 19:31:47,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:47,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:47,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:47,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:31:47,773:INFO:setup() successfully completed in 2.86s...............
2023-06-11 19:31:50,488:INFO:Initializing compare_models()
2023-06-11 19:31:50,488:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, include=None, fold=7, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, 'include': None, 'exclude': None, 'fold': 7, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:31:50,488:INFO:Checking exceptions
2023-06-11 19:31:50,492:INFO:Preparing display monitor
2023-06-11 19:31:50,554:INFO:Initializing Linear Regression
2023-06-11 19:31:50,555:INFO:Total runtime is 6.67572021484375e-06 minutes
2023-06-11 19:31:50,564:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:50,565:INFO:Initializing create_model()
2023-06-11 19:31:50,565:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=lr, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:50,565:INFO:Checking exceptions
2023-06-11 19:31:50,571:INFO:Importing libraries
2023-06-11 19:31:50,571:INFO:Copying training dataset
2023-06-11 19:31:50,579:INFO:Defining folds
2023-06-11 19:31:50,580:INFO:Declaring metric variables
2023-06-11 19:31:50,587:INFO:Importing untrained model
2023-06-11 19:31:50,592:INFO:Linear Regression Imported successfully
2023-06-11 19:31:50,601:INFO:Starting cross validation
2023-06-11 19:31:50,611:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:51,914:INFO:Calculating mean and std
2023-06-11 19:31:51,917:INFO:Creating metrics dataframe
2023-06-11 19:31:51,924:INFO:Uploading results into container
2023-06-11 19:31:51,925:INFO:Uploading model into container now
2023-06-11 19:31:51,926:INFO:master_model_container: 1
2023-06-11 19:31:51,926:INFO:display_container: 2
2023-06-11 19:31:51,926:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:31:51,926:INFO:create_model() successfully completed......................................
2023-06-11 19:31:52,282:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:52,282:INFO:Creating metrics dataframe
2023-06-11 19:31:52,292:INFO:Initializing Lasso Regression
2023-06-11 19:31:52,292:INFO:Total runtime is 0.028965552647908527 minutes
2023-06-11 19:31:52,296:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:52,296:INFO:Initializing create_model()
2023-06-11 19:31:52,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=lasso, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:52,297:INFO:Checking exceptions
2023-06-11 19:31:52,301:INFO:Importing libraries
2023-06-11 19:31:52,301:INFO:Copying training dataset
2023-06-11 19:31:52,308:INFO:Defining folds
2023-06-11 19:31:52,308:INFO:Declaring metric variables
2023-06-11 19:31:52,315:INFO:Importing untrained model
2023-06-11 19:31:52,323:INFO:Lasso Regression Imported successfully
2023-06-11 19:31:52,332:INFO:Starting cross validation
2023-06-11 19:31:52,346:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:52,644:INFO:Calculating mean and std
2023-06-11 19:31:52,647:INFO:Creating metrics dataframe
2023-06-11 19:31:52,655:INFO:Uploading results into container
2023-06-11 19:31:52,656:INFO:Uploading model into container now
2023-06-11 19:31:52,657:INFO:master_model_container: 2
2023-06-11 19:31:52,657:INFO:display_container: 2
2023-06-11 19:31:52,657:INFO:Lasso(random_state=123)
2023-06-11 19:31:52,657:INFO:create_model() successfully completed......................................
2023-06-11 19:31:53,056:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:53,056:INFO:Creating metrics dataframe
2023-06-11 19:31:53,067:INFO:Initializing Ridge Regression
2023-06-11 19:31:53,068:INFO:Total runtime is 0.04188585678736369 minutes
2023-06-11 19:31:53,072:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:53,072:INFO:Initializing create_model()
2023-06-11 19:31:53,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=ridge, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:53,073:INFO:Checking exceptions
2023-06-11 19:31:53,076:INFO:Importing libraries
2023-06-11 19:31:53,076:INFO:Copying training dataset
2023-06-11 19:31:53,082:INFO:Defining folds
2023-06-11 19:31:53,082:INFO:Declaring metric variables
2023-06-11 19:31:53,086:INFO:Importing untrained model
2023-06-11 19:31:53,091:INFO:Ridge Regression Imported successfully
2023-06-11 19:31:53,100:INFO:Starting cross validation
2023-06-11 19:31:53,111:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:53,385:INFO:Calculating mean and std
2023-06-11 19:31:53,387:INFO:Creating metrics dataframe
2023-06-11 19:31:53,391:INFO:Uploading results into container
2023-06-11 19:31:53,391:INFO:Uploading model into container now
2023-06-11 19:31:53,392:INFO:master_model_container: 3
2023-06-11 19:31:53,392:INFO:display_container: 2
2023-06-11 19:31:53,392:INFO:Ridge(random_state=123)
2023-06-11 19:31:53,392:INFO:create_model() successfully completed......................................
2023-06-11 19:31:53,799:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:53,800:INFO:Creating metrics dataframe
2023-06-11 19:31:53,812:INFO:Initializing Elastic Net
2023-06-11 19:31:53,813:INFO:Total runtime is 0.05430635611216227 minutes
2023-06-11 19:31:53,819:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:53,819:INFO:Initializing create_model()
2023-06-11 19:31:53,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=en, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:53,819:INFO:Checking exceptions
2023-06-11 19:31:53,823:INFO:Importing libraries
2023-06-11 19:31:53,823:INFO:Copying training dataset
2023-06-11 19:31:53,828:INFO:Defining folds
2023-06-11 19:31:53,828:INFO:Declaring metric variables
2023-06-11 19:31:53,833:INFO:Importing untrained model
2023-06-11 19:31:53,839:INFO:Elastic Net Imported successfully
2023-06-11 19:31:53,850:INFO:Starting cross validation
2023-06-11 19:31:53,861:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:54,187:INFO:Calculating mean and std
2023-06-11 19:31:54,189:INFO:Creating metrics dataframe
2023-06-11 19:31:54,195:INFO:Uploading results into container
2023-06-11 19:31:54,197:INFO:Uploading model into container now
2023-06-11 19:31:54,197:INFO:master_model_container: 4
2023-06-11 19:31:54,197:INFO:display_container: 2
2023-06-11 19:31:54,198:INFO:ElasticNet(random_state=123)
2023-06-11 19:31:54,198:INFO:create_model() successfully completed......................................
2023-06-11 19:31:54,515:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:54,516:INFO:Creating metrics dataframe
2023-06-11 19:31:54,525:INFO:Initializing Least Angle Regression
2023-06-11 19:31:54,525:INFO:Total runtime is 0.06617811123530071 minutes
2023-06-11 19:31:54,528:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:54,529:INFO:Initializing create_model()
2023-06-11 19:31:54,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=lar, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:54,529:INFO:Checking exceptions
2023-06-11 19:31:54,531:INFO:Importing libraries
2023-06-11 19:31:54,532:INFO:Copying training dataset
2023-06-11 19:31:54,536:INFO:Defining folds
2023-06-11 19:31:54,536:INFO:Declaring metric variables
2023-06-11 19:31:54,540:INFO:Importing untrained model
2023-06-11 19:31:54,544:INFO:Least Angle Regression Imported successfully
2023-06-11 19:31:54,553:INFO:Starting cross validation
2023-06-11 19:31:54,564:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:54,675:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:54,703:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:54,708:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:54,709:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:54,722:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:54,731:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:54,744:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:54,819:INFO:Calculating mean and std
2023-06-11 19:31:54,822:INFO:Creating metrics dataframe
2023-06-11 19:31:54,827:INFO:Uploading results into container
2023-06-11 19:31:54,828:INFO:Uploading model into container now
2023-06-11 19:31:54,829:INFO:master_model_container: 5
2023-06-11 19:31:54,829:INFO:display_container: 2
2023-06-11 19:31:54,830:INFO:Lars(random_state=123)
2023-06-11 19:31:54,830:INFO:create_model() successfully completed......................................
2023-06-11 19:31:55,155:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:55,156:INFO:Creating metrics dataframe
2023-06-11 19:31:55,165:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:31:55,166:INFO:Total runtime is 0.0768543561299642 minutes
2023-06-11 19:31:55,171:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:55,172:INFO:Initializing create_model()
2023-06-11 19:31:55,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=llar, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:55,172:INFO:Checking exceptions
2023-06-11 19:31:55,176:INFO:Importing libraries
2023-06-11 19:31:55,176:INFO:Copying training dataset
2023-06-11 19:31:55,181:INFO:Defining folds
2023-06-11 19:31:55,181:INFO:Declaring metric variables
2023-06-11 19:31:55,185:INFO:Importing untrained model
2023-06-11 19:31:55,191:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:31:55,204:INFO:Starting cross validation
2023-06-11 19:31:55,216:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:55,344:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:31:55,363:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:31:55,376:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:31:55,397:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:31:55,419:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:31:55,420:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:31:55,446:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:31:55,508:INFO:Calculating mean and std
2023-06-11 19:31:55,510:INFO:Creating metrics dataframe
2023-06-11 19:31:55,515:INFO:Uploading results into container
2023-06-11 19:31:55,516:INFO:Uploading model into container now
2023-06-11 19:31:55,517:INFO:master_model_container: 6
2023-06-11 19:31:55,517:INFO:display_container: 2
2023-06-11 19:31:55,517:INFO:LassoLars(random_state=123)
2023-06-11 19:31:55,517:INFO:create_model() successfully completed......................................
2023-06-11 19:31:55,847:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:55,848:INFO:Creating metrics dataframe
2023-06-11 19:31:55,860:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:31:55,860:INFO:Total runtime is 0.08843253056208294 minutes
2023-06-11 19:31:55,867:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:55,867:INFO:Initializing create_model()
2023-06-11 19:31:55,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=omp, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:55,867:INFO:Checking exceptions
2023-06-11 19:31:55,871:INFO:Importing libraries
2023-06-11 19:31:55,871:INFO:Copying training dataset
2023-06-11 19:31:55,876:INFO:Defining folds
2023-06-11 19:31:55,876:INFO:Declaring metric variables
2023-06-11 19:31:55,882:INFO:Importing untrained model
2023-06-11 19:31:55,887:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:31:55,898:INFO:Starting cross validation
2023-06-11 19:31:55,910:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:56,036:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:56,052:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:56,054:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:56,069:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:56,081:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:56,091:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:56,092:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:31:56,171:INFO:Calculating mean and std
2023-06-11 19:31:56,174:INFO:Creating metrics dataframe
2023-06-11 19:31:56,181:INFO:Uploading results into container
2023-06-11 19:31:56,182:INFO:Uploading model into container now
2023-06-11 19:31:56,183:INFO:master_model_container: 7
2023-06-11 19:31:56,183:INFO:display_container: 2
2023-06-11 19:31:56,183:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:31:56,183:INFO:create_model() successfully completed......................................
2023-06-11 19:31:56,511:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:56,511:INFO:Creating metrics dataframe
2023-06-11 19:31:56,521:INFO:Initializing Bayesian Ridge
2023-06-11 19:31:56,522:INFO:Total runtime is 0.09945458173751832 minutes
2023-06-11 19:31:56,526:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:56,526:INFO:Initializing create_model()
2023-06-11 19:31:56,526:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=br, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:56,527:INFO:Checking exceptions
2023-06-11 19:31:56,531:INFO:Importing libraries
2023-06-11 19:31:56,531:INFO:Copying training dataset
2023-06-11 19:31:56,539:INFO:Defining folds
2023-06-11 19:31:56,539:INFO:Declaring metric variables
2023-06-11 19:31:56,545:INFO:Importing untrained model
2023-06-11 19:31:56,553:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:31:56,561:INFO:Starting cross validation
2023-06-11 19:31:56,574:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:56,818:INFO:Calculating mean and std
2023-06-11 19:31:56,821:INFO:Creating metrics dataframe
2023-06-11 19:31:56,830:INFO:Uploading results into container
2023-06-11 19:31:56,832:INFO:Uploading model into container now
2023-06-11 19:31:56,833:INFO:master_model_container: 8
2023-06-11 19:31:56,833:INFO:display_container: 2
2023-06-11 19:31:56,834:INFO:BayesianRidge()
2023-06-11 19:31:56,834:INFO:create_model() successfully completed......................................
2023-06-11 19:31:57,210:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:57,210:INFO:Creating metrics dataframe
2023-06-11 19:31:57,222:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:31:57,222:INFO:Total runtime is 0.11113042434056601 minutes
2023-06-11 19:31:57,226:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:57,227:INFO:Initializing create_model()
2023-06-11 19:31:57,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=par, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:57,227:INFO:Checking exceptions
2023-06-11 19:31:57,231:INFO:Importing libraries
2023-06-11 19:31:57,231:INFO:Copying training dataset
2023-06-11 19:31:57,236:INFO:Defining folds
2023-06-11 19:31:57,236:INFO:Declaring metric variables
2023-06-11 19:31:57,241:INFO:Importing untrained model
2023-06-11 19:31:57,247:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:31:57,259:INFO:Starting cross validation
2023-06-11 19:31:57,272:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:57,504:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:31:57,558:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:31:57,571:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:31:57,595:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:31:57,599:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:31:57,608:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:31:57,627:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:31:57,697:INFO:Calculating mean and std
2023-06-11 19:31:57,699:INFO:Creating metrics dataframe
2023-06-11 19:31:57,704:INFO:Uploading results into container
2023-06-11 19:31:57,705:INFO:Uploading model into container now
2023-06-11 19:31:57,706:INFO:master_model_container: 9
2023-06-11 19:31:57,706:INFO:display_container: 2
2023-06-11 19:31:57,706:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:31:57,706:INFO:create_model() successfully completed......................................
2023-06-11 19:31:58,043:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:58,043:INFO:Creating metrics dataframe
2023-06-11 19:31:58,054:INFO:Initializing Huber Regressor
2023-06-11 19:31:58,054:INFO:Total runtime is 0.12499360640843711 minutes
2023-06-11 19:31:58,057:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:58,058:INFO:Initializing create_model()
2023-06-11 19:31:58,058:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=huber, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:58,058:INFO:Checking exceptions
2023-06-11 19:31:58,062:INFO:Importing libraries
2023-06-11 19:31:58,063:INFO:Copying training dataset
2023-06-11 19:31:58,068:INFO:Defining folds
2023-06-11 19:31:58,069:INFO:Declaring metric variables
2023-06-11 19:31:58,073:INFO:Importing untrained model
2023-06-11 19:31:58,077:INFO:Huber Regressor Imported successfully
2023-06-11 19:31:58,086:INFO:Starting cross validation
2023-06-11 19:31:58,098:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:58,373:INFO:Calculating mean and std
2023-06-11 19:31:58,375:INFO:Creating metrics dataframe
2023-06-11 19:31:58,381:INFO:Uploading results into container
2023-06-11 19:31:58,382:INFO:Uploading model into container now
2023-06-11 19:31:58,382:INFO:master_model_container: 10
2023-06-11 19:31:58,382:INFO:display_container: 2
2023-06-11 19:31:58,382:INFO:HuberRegressor()
2023-06-11 19:31:58,382:INFO:create_model() successfully completed......................................
2023-06-11 19:31:58,691:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:58,691:INFO:Creating metrics dataframe
2023-06-11 19:31:58,701:INFO:Initializing K Neighbors Regressor
2023-06-11 19:31:58,702:INFO:Total runtime is 0.1357911507288615 minutes
2023-06-11 19:31:58,705:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:58,706:INFO:Initializing create_model()
2023-06-11 19:31:58,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=knn, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:58,706:INFO:Checking exceptions
2023-06-11 19:31:58,709:INFO:Importing libraries
2023-06-11 19:31:58,709:INFO:Copying training dataset
2023-06-11 19:31:58,713:INFO:Defining folds
2023-06-11 19:31:58,713:INFO:Declaring metric variables
2023-06-11 19:31:58,717:INFO:Importing untrained model
2023-06-11 19:31:58,722:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:31:58,731:INFO:Starting cross validation
2023-06-11 19:31:58,743:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:59,052:INFO:Calculating mean and std
2023-06-11 19:31:59,054:INFO:Creating metrics dataframe
2023-06-11 19:31:59,059:INFO:Uploading results into container
2023-06-11 19:31:59,060:INFO:Uploading model into container now
2023-06-11 19:31:59,061:INFO:master_model_container: 11
2023-06-11 19:31:59,061:INFO:display_container: 2
2023-06-11 19:31:59,061:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:31:59,061:INFO:create_model() successfully completed......................................
2023-06-11 19:31:59,424:INFO:SubProcess create_model() end ==================================
2023-06-11 19:31:59,424:INFO:Creating metrics dataframe
2023-06-11 19:31:59,436:INFO:Initializing Decision Tree Regressor
2023-06-11 19:31:59,436:INFO:Total runtime is 0.14803222020467124 minutes
2023-06-11 19:31:59,441:INFO:SubProcess create_model() called ==================================
2023-06-11 19:31:59,441:INFO:Initializing create_model()
2023-06-11 19:31:59,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=dt, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:31:59,441:INFO:Checking exceptions
2023-06-11 19:31:59,445:INFO:Importing libraries
2023-06-11 19:31:59,445:INFO:Copying training dataset
2023-06-11 19:31:59,450:INFO:Defining folds
2023-06-11 19:31:59,450:INFO:Declaring metric variables
2023-06-11 19:31:59,456:INFO:Importing untrained model
2023-06-11 19:31:59,464:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:31:59,474:INFO:Starting cross validation
2023-06-11 19:31:59,488:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:31:59,774:INFO:Calculating mean and std
2023-06-11 19:31:59,777:INFO:Creating metrics dataframe
2023-06-11 19:31:59,784:INFO:Uploading results into container
2023-06-11 19:31:59,785:INFO:Uploading model into container now
2023-06-11 19:31:59,786:INFO:master_model_container: 12
2023-06-11 19:31:59,786:INFO:display_container: 2
2023-06-11 19:31:59,787:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:31:59,787:INFO:create_model() successfully completed......................................
2023-06-11 19:32:00,122:INFO:SubProcess create_model() end ==================================
2023-06-11 19:32:00,122:INFO:Creating metrics dataframe
2023-06-11 19:32:00,135:INFO:Initializing Random Forest Regressor
2023-06-11 19:32:00,136:INFO:Total runtime is 0.1596871336301168 minutes
2023-06-11 19:32:00,139:INFO:SubProcess create_model() called ==================================
2023-06-11 19:32:00,140:INFO:Initializing create_model()
2023-06-11 19:32:00,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=rf, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:32:00,140:INFO:Checking exceptions
2023-06-11 19:32:00,143:INFO:Importing libraries
2023-06-11 19:32:00,144:INFO:Copying training dataset
2023-06-11 19:32:00,149:INFO:Defining folds
2023-06-11 19:32:00,149:INFO:Declaring metric variables
2023-06-11 19:32:00,154:INFO:Importing untrained model
2023-06-11 19:32:00,159:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:32:00,169:INFO:Starting cross validation
2023-06-11 19:32:00,180:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:32:01,619:INFO:Calculating mean and std
2023-06-11 19:32:01,621:INFO:Creating metrics dataframe
2023-06-11 19:32:01,626:INFO:Uploading results into container
2023-06-11 19:32:01,628:INFO:Uploading model into container now
2023-06-11 19:32:01,628:INFO:master_model_container: 13
2023-06-11 19:32:01,628:INFO:display_container: 2
2023-06-11 19:32:01,629:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:32:01,629:INFO:create_model() successfully completed......................................
2023-06-11 19:32:01,956:INFO:SubProcess create_model() end ==================================
2023-06-11 19:32:01,956:INFO:Creating metrics dataframe
2023-06-11 19:32:01,968:INFO:Initializing Extra Trees Regressor
2023-06-11 19:32:01,969:INFO:Total runtime is 0.190235968430837 minutes
2023-06-11 19:32:01,972:INFO:SubProcess create_model() called ==================================
2023-06-11 19:32:01,973:INFO:Initializing create_model()
2023-06-11 19:32:01,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=et, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:32:01,973:INFO:Checking exceptions
2023-06-11 19:32:01,977:INFO:Importing libraries
2023-06-11 19:32:01,977:INFO:Copying training dataset
2023-06-11 19:32:01,982:INFO:Defining folds
2023-06-11 19:32:01,982:INFO:Declaring metric variables
2023-06-11 19:32:01,986:INFO:Importing untrained model
2023-06-11 19:32:01,991:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:32:02,002:INFO:Starting cross validation
2023-06-11 19:32:02,021:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:32:02,782:INFO:Calculating mean and std
2023-06-11 19:32:02,784:INFO:Creating metrics dataframe
2023-06-11 19:32:02,790:INFO:Uploading results into container
2023-06-11 19:32:02,791:INFO:Uploading model into container now
2023-06-11 19:32:02,792:INFO:master_model_container: 14
2023-06-11 19:32:02,792:INFO:display_container: 2
2023-06-11 19:32:02,792:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:32:02,793:INFO:create_model() successfully completed......................................
2023-06-11 19:32:03,121:INFO:SubProcess create_model() end ==================================
2023-06-11 19:32:03,121:INFO:Creating metrics dataframe
2023-06-11 19:32:03,133:INFO:Initializing AdaBoost Regressor
2023-06-11 19:32:03,133:INFO:Total runtime is 0.2096493721008301 minutes
2023-06-11 19:32:03,137:INFO:SubProcess create_model() called ==================================
2023-06-11 19:32:03,138:INFO:Initializing create_model()
2023-06-11 19:32:03,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=ada, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:32:03,138:INFO:Checking exceptions
2023-06-11 19:32:03,142:INFO:Importing libraries
2023-06-11 19:32:03,142:INFO:Copying training dataset
2023-06-11 19:32:03,149:INFO:Defining folds
2023-06-11 19:32:03,149:INFO:Declaring metric variables
2023-06-11 19:32:03,155:INFO:Importing untrained model
2023-06-11 19:32:03,161:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:32:03,171:INFO:Starting cross validation
2023-06-11 19:32:03,183:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:32:03,591:INFO:Calculating mean and std
2023-06-11 19:32:03,595:INFO:Creating metrics dataframe
2023-06-11 19:32:03,602:INFO:Uploading results into container
2023-06-11 19:32:03,603:INFO:Uploading model into container now
2023-06-11 19:32:03,604:INFO:master_model_container: 15
2023-06-11 19:32:03,604:INFO:display_container: 2
2023-06-11 19:32:03,604:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:32:03,604:INFO:create_model() successfully completed......................................
2023-06-11 19:32:03,934:INFO:SubProcess create_model() end ==================================
2023-06-11 19:32:03,934:INFO:Creating metrics dataframe
2023-06-11 19:32:03,946:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:32:03,947:INFO:Total runtime is 0.22320226033528648 minutes
2023-06-11 19:32:03,950:INFO:SubProcess create_model() called ==================================
2023-06-11 19:32:03,950:INFO:Initializing create_model()
2023-06-11 19:32:03,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=gbr, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:32:03,950:INFO:Checking exceptions
2023-06-11 19:32:03,953:INFO:Importing libraries
2023-06-11 19:32:03,953:INFO:Copying training dataset
2023-06-11 19:32:03,958:INFO:Defining folds
2023-06-11 19:32:03,958:INFO:Declaring metric variables
2023-06-11 19:32:03,963:INFO:Importing untrained model
2023-06-11 19:32:03,970:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:32:03,980:INFO:Starting cross validation
2023-06-11 19:32:03,991:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:32:04,733:INFO:Calculating mean and std
2023-06-11 19:32:04,737:INFO:Creating metrics dataframe
2023-06-11 19:32:04,745:INFO:Uploading results into container
2023-06-11 19:32:04,747:INFO:Uploading model into container now
2023-06-11 19:32:04,748:INFO:master_model_container: 16
2023-06-11 19:32:04,748:INFO:display_container: 2
2023-06-11 19:32:04,749:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:32:04,749:INFO:create_model() successfully completed......................................
2023-06-11 19:32:05,118:INFO:SubProcess create_model() end ==================================
2023-06-11 19:32:05,118:INFO:Creating metrics dataframe
2023-06-11 19:32:05,131:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:32:05,131:INFO:Total runtime is 0.24294459422429404 minutes
2023-06-11 19:32:05,135:INFO:SubProcess create_model() called ==================================
2023-06-11 19:32:05,135:INFO:Initializing create_model()
2023-06-11 19:32:05,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=lightgbm, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:32:05,135:INFO:Checking exceptions
2023-06-11 19:32:05,138:INFO:Importing libraries
2023-06-11 19:32:05,138:INFO:Copying training dataset
2023-06-11 19:32:05,143:INFO:Defining folds
2023-06-11 19:32:05,143:INFO:Declaring metric variables
2023-06-11 19:32:05,147:INFO:Importing untrained model
2023-06-11 19:32:05,151:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:32:05,160:INFO:Starting cross validation
2023-06-11 19:32:05,170:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:32:05,652:INFO:Calculating mean and std
2023-06-11 19:32:05,655:INFO:Creating metrics dataframe
2023-06-11 19:32:05,661:INFO:Uploading results into container
2023-06-11 19:32:05,662:INFO:Uploading model into container now
2023-06-11 19:32:05,663:INFO:master_model_container: 17
2023-06-11 19:32:05,663:INFO:display_container: 2
2023-06-11 19:32:05,663:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:32:05,663:INFO:create_model() successfully completed......................................
2023-06-11 19:32:05,992:INFO:SubProcess create_model() end ==================================
2023-06-11 19:32:05,992:INFO:Creating metrics dataframe
2023-06-11 19:32:06,005:INFO:Initializing Dummy Regressor
2023-06-11 19:32:06,005:INFO:Total runtime is 0.25750800371170046 minutes
2023-06-11 19:32:06,008:INFO:SubProcess create_model() called ==================================
2023-06-11 19:32:06,009:INFO:Initializing create_model()
2023-06-11 19:32:06,009:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=dummy, fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036b1848b0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:32:06,009:INFO:Checking exceptions
2023-06-11 19:32:06,011:INFO:Importing libraries
2023-06-11 19:32:06,011:INFO:Copying training dataset
2023-06-11 19:32:06,016:INFO:Defining folds
2023-06-11 19:32:06,016:INFO:Declaring metric variables
2023-06-11 19:32:06,021:INFO:Importing untrained model
2023-06-11 19:32:06,026:INFO:Dummy Regressor Imported successfully
2023-06-11 19:32:06,034:INFO:Starting cross validation
2023-06-11 19:32:06,046:INFO:Cross validating with KFold(n_splits=7, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:32:06,329:INFO:Calculating mean and std
2023-06-11 19:32:06,331:INFO:Creating metrics dataframe
2023-06-11 19:32:06,336:INFO:Uploading results into container
2023-06-11 19:32:06,338:INFO:Uploading model into container now
2023-06-11 19:32:06,339:INFO:master_model_container: 18
2023-06-11 19:32:06,339:INFO:display_container: 2
2023-06-11 19:32:06,339:INFO:DummyRegressor()
2023-06-11 19:32:06,339:INFO:create_model() successfully completed......................................
2023-06-11 19:32:06,660:INFO:SubProcess create_model() end ==================================
2023-06-11 19:32:06,660:INFO:Creating metrics dataframe
2023-06-11 19:32:06,686:INFO:Initializing create_model()
2023-06-11 19:32:06,686:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d32e0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=7, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:32:06,686:INFO:Checking exceptions
2023-06-11 19:32:06,691:INFO:Importing libraries
2023-06-11 19:32:06,691:INFO:Copying training dataset
2023-06-11 19:32:06,694:INFO:Defining folds
2023-06-11 19:32:06,695:INFO:Declaring metric variables
2023-06-11 19:32:06,695:INFO:Importing untrained model
2023-06-11 19:32:06,695:INFO:Declaring custom model
2023-06-11 19:32:06,695:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:32:06,709:INFO:Cross validation set to False
2023-06-11 19:32:06,709:INFO:Fitting Model
2023-06-11 19:32:07,063:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:32:07,063:INFO:create_model() successfully completed......................................
2023-06-11 19:32:07,445:INFO:master_model_container: 18
2023-06-11 19:32:07,446:INFO:display_container: 2
2023-06-11 19:32:07,446:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:32:07,447:INFO:compare_models() successfully completed......................................
2023-06-11 19:34:06,631:INFO:PyCaret RegressionExperiment
2023-06-11 19:34:06,631:INFO:Logging name: reg-default-name
2023-06-11 19:34:06,631:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:34:06,631:INFO:version 3.0.0.rc4
2023-06-11 19:34:06,631:INFO:Initializing setup()
2023-06-11 19:34:06,631:INFO:self.USI: d374
2023-06-11 19:34:06,631:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:34:06,631:INFO:Checking environment
2023-06-11 19:34:06,631:INFO:python_version: 3.10.6
2023-06-11 19:34:06,631:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:34:06,631:INFO:machine: x86_64
2023-06-11 19:34:06,631:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:34:06,633:INFO:Memory: svmem(total=6088237056, available=1170161664, percent=80.8, used=4512198656, free=453365760, active=1661820928, inactive=3095224320, buffers=27463680, cached=1095208960, shared=109907968, slab=454144000)
2023-06-11 19:34:06,634:INFO:Physical Core: 4
2023-06-11 19:34:06,634:INFO:Logical Core: 8
2023-06-11 19:34:06,634:INFO:Checking libraries
2023-06-11 19:34:06,635:INFO:System:
2023-06-11 19:34:06,635:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:34:06,635:INFO:executable: /usr/bin/python3
2023-06-11 19:34:06,635:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:34:06,635:INFO:PyCaret required dependencies:
2023-06-11 19:34:06,635:INFO:                 pip: 22.0.2
2023-06-11 19:34:06,636:INFO:          setuptools: 59.6.0
2023-06-11 19:34:06,637:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:34:06,637:INFO:             IPython: 8.5.0
2023-06-11 19:34:06,637:INFO:          ipywidgets: 8.0.2
2023-06-11 19:34:06,637:INFO:                tqdm: 4.64.1
2023-06-11 19:34:06,637:INFO:               numpy: 1.22.4
2023-06-11 19:34:06,637:INFO:              pandas: 1.4.4
2023-06-11 19:34:06,637:INFO:              jinja2: 3.1.2
2023-06-11 19:34:06,637:INFO:               scipy: 1.8.1
2023-06-11 19:34:06,637:INFO:              joblib: 1.2.0
2023-06-11 19:34:06,637:INFO:             sklearn: 1.1.2
2023-06-11 19:34:06,638:INFO:                pyod: 1.0.5
2023-06-11 19:34:06,638:INFO:            imblearn: 0.9.1
2023-06-11 19:34:06,638:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:34:06,638:INFO:            lightgbm: 3.3.2
2023-06-11 19:34:06,638:INFO:               numba: 0.55.2
2023-06-11 19:34:06,638:INFO:            requests: 2.25.1
2023-06-11 19:34:06,638:INFO:          matplotlib: 3.6.0
2023-06-11 19:34:06,638:INFO:          scikitplot: 0.3.7
2023-06-11 19:34:06,638:INFO:         yellowbrick: 1.5
2023-06-11 19:34:06,638:INFO:              plotly: 5.10.0
2023-06-11 19:34:06,638:INFO:             kaleido: 0.2.1
2023-06-11 19:34:06,638:INFO:         statsmodels: 0.13.2
2023-06-11 19:34:06,638:INFO:              sktime: 0.13.4
2023-06-11 19:34:06,638:INFO:               tbats: 1.1.1
2023-06-11 19:34:06,639:INFO:            pmdarima: 1.8.5
2023-06-11 19:34:06,639:INFO:              psutil: 5.9.2
2023-06-11 19:34:06,639:INFO:PyCaret optional dependencies:
2023-06-11 19:34:06,639:INFO:                shap: Not installed
2023-06-11 19:34:06,639:INFO:           interpret: Not installed
2023-06-11 19:34:06,639:INFO:                umap: Not installed
2023-06-11 19:34:06,639:INFO:    pandas_profiling: Not installed
2023-06-11 19:34:06,639:INFO:  explainerdashboard: Not installed
2023-06-11 19:34:06,639:INFO:             autoviz: Not installed
2023-06-11 19:34:06,639:INFO:           fairlearn: Not installed
2023-06-11 19:34:06,639:INFO:             xgboost: Not installed
2023-06-11 19:34:06,640:INFO:            catboost: Not installed
2023-06-11 19:34:06,640:INFO:              kmodes: Not installed
2023-06-11 19:34:06,640:INFO:             mlxtend: 0.21.0
2023-06-11 19:34:06,640:INFO:       statsforecast: Not installed
2023-06-11 19:34:06,640:INFO:        tune_sklearn: Not installed
2023-06-11 19:34:06,640:INFO:                 ray: Not installed
2023-06-11 19:34:06,640:INFO:            hyperopt: Not installed
2023-06-11 19:34:06,640:INFO:              optuna: Not installed
2023-06-11 19:34:06,640:INFO:               skopt: Not installed
2023-06-11 19:34:06,640:INFO:              mlflow: 1.29.0
2023-06-11 19:34:06,640:INFO:              gradio: 3.4.1
2023-06-11 19:34:06,640:INFO:             fastapi: 0.85.0
2023-06-11 19:34:06,640:INFO:             uvicorn: 0.18.3
2023-06-11 19:34:06,640:INFO:              m2cgen: 0.10.0
2023-06-11 19:34:06,641:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:34:06,641:INFO:                nltk: 3.7
2023-06-11 19:34:06,641:INFO:            pyLDAvis: Not installed
2023-06-11 19:34:06,641:INFO:              gensim: Not installed
2023-06-11 19:34:06,641:INFO:               spacy: 3.5.0
2023-06-11 19:34:06,641:INFO:           wordcloud: Not installed
2023-06-11 19:34:06,641:INFO:            textblob: 0.17.1
2023-06-11 19:34:06,641:INFO:               fugue: Not installed
2023-06-11 19:34:06,641:INFO:           streamlit: 1.13.0
2023-06-11 19:34:06,641:INFO:             prophet: Not installed
2023-06-11 19:34:06,641:INFO:None
2023-06-11 19:34:06,641:INFO:Set up data.
2023-06-11 19:34:06,683:INFO:Set up train/test split.
2023-06-11 19:34:06,698:INFO:Set up index.
2023-06-11 19:34:06,699:INFO:Set up folding strategy.
2023-06-11 19:34:06,700:INFO:Assigning column types.
2023-06-11 19:34:06,708:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-11 19:34:06,708:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,715:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,720:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,832:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:06,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:06,833:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,838:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,844:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,908:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:06,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:06,959:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-11 19:34:06,964:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:06,969:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,033:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,088:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,093:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,209:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-11 19:34:07,220:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,289:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,354:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,421:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,474:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,475:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-11 19:34:07,556:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,608:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,758:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,759:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-11 19:34:07,850:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:07,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:07,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:08,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,046:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-11 19:34:08,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,308:INFO:Preparing preprocessing pipeline...
2023-06-11 19:34:08,309:INFO:Set up simple imputation.
2023-06-11 19:34:08,311:INFO:Set up encoding of categorical features.
2023-06-11 19:34:08,311:INFO:Set up variance threshold.
2023-06-11 19:34:08,311:INFO:Set up removing multicollinearity.
2023-06-11 19:34:08,311:INFO:Set up feature normalization.
2023-06-11 19:34:08,311:INFO:Set up feature selection.
2023-06-11 19:34:08,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:08,631:INFO:Finished creating preprocessing pipeline.
2023-06-11 19:34:08,649:INFO:Pipeline: Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=15,
                                                                threshold=-inf)))])
2023-06-11 19:34:08,649:INFO:Creating final display dataframe.
2023-06-11 19:34:09,178:INFO:Setup display_container:                     Description             Value
0                    Session id               123
1                        Target           credito
2                   Target type        Regression
3                    Data shape        (2190, 16)
4              Train data shape        (1532, 16)
5               Test data shape         (658, 16)
6              Numeric features                27
7          Categorical features                 4
8      Rows with missing values             71.9%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation          constant
13     Maximum one-hot encoding                 5
14              Encoding method              None
15       Low variance threshold               0.1
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18                    Normalize              True
19             Normalize method            zscore
20            Feature selection              True
21     Feature selection method           classic
22  Feature selection estimator          lightgbm
23  Number of features selected                15
24               Fold Generator             KFold
25                  Fold Number                10
26                     CPU Jobs                -1
27                      Use GPU             False
28               Log Experiment             False
29              Experiment Name  reg-default-name
30                          USI              d374
2023-06-11 19:34:09,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:09,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:09,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:09,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:09,450:INFO:setup() successfully completed in 2.82s...............
2023-06-11 19:34:09,985:INFO:Initializing compare_models()
2023-06-11 19:34:09,985:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, include=None, fold=5, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:34:09,985:INFO:Checking exceptions
2023-06-11 19:34:09,990:INFO:Preparing display monitor
2023-06-11 19:34:10,059:INFO:Initializing Linear Regression
2023-06-11 19:34:10,060:INFO:Total runtime is 7.998943328857421e-06 minutes
2023-06-11 19:34:10,068:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:10,068:INFO:Initializing create_model()
2023-06-11 19:34:10,069:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:10,069:INFO:Checking exceptions
2023-06-11 19:34:10,074:INFO:Importing libraries
2023-06-11 19:34:10,074:INFO:Copying training dataset
2023-06-11 19:34:10,081:INFO:Defining folds
2023-06-11 19:34:10,081:INFO:Declaring metric variables
2023-06-11 19:34:10,088:INFO:Importing untrained model
2023-06-11 19:34:10,093:INFO:Linear Regression Imported successfully
2023-06-11 19:34:10,100:INFO:Starting cross validation
2023-06-11 19:34:10,112:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:11,101:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:11,101:INFO:Calculating mean and std
2023-06-11 19:34:11,104:INFO:Creating metrics dataframe
2023-06-11 19:34:11,109:INFO:Uploading results into container
2023-06-11 19:34:11,110:INFO:Uploading model into container now
2023-06-11 19:34:11,110:INFO:master_model_container: 1
2023-06-11 19:34:11,110:INFO:display_container: 2
2023-06-11 19:34:11,111:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:34:11,111:INFO:create_model() successfully completed......................................
2023-06-11 19:34:11,492:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:11,492:INFO:Creating metrics dataframe
2023-06-11 19:34:11,500:INFO:Initializing Lasso Regression
2023-06-11 19:34:11,500:INFO:Total runtime is 0.024022177855173747 minutes
2023-06-11 19:34:11,504:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:11,505:INFO:Initializing create_model()
2023-06-11 19:34:11,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:11,505:INFO:Checking exceptions
2023-06-11 19:34:11,507:INFO:Importing libraries
2023-06-11 19:34:11,507:INFO:Copying training dataset
2023-06-11 19:34:11,512:INFO:Defining folds
2023-06-11 19:34:11,513:INFO:Declaring metric variables
2023-06-11 19:34:11,517:INFO:Importing untrained model
2023-06-11 19:34:11,522:INFO:Lasso Regression Imported successfully
2023-06-11 19:34:11,532:INFO:Starting cross validation
2023-06-11 19:34:11,544:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:11,799:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:11,799:INFO:Calculating mean and std
2023-06-11 19:34:11,800:INFO:Creating metrics dataframe
2023-06-11 19:34:11,804:INFO:Uploading results into container
2023-06-11 19:34:11,805:INFO:Uploading model into container now
2023-06-11 19:34:11,805:INFO:master_model_container: 2
2023-06-11 19:34:11,805:INFO:display_container: 2
2023-06-11 19:34:11,805:INFO:Lasso(random_state=123)
2023-06-11 19:34:11,805:INFO:create_model() successfully completed......................................
2023-06-11 19:34:12,135:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:12,135:INFO:Creating metrics dataframe
2023-06-11 19:34:12,145:INFO:Initializing Ridge Regression
2023-06-11 19:34:12,146:INFO:Total runtime is 0.034777661164601646 minutes
2023-06-11 19:34:12,150:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:12,150:INFO:Initializing create_model()
2023-06-11 19:34:12,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:12,150:INFO:Checking exceptions
2023-06-11 19:34:12,153:INFO:Importing libraries
2023-06-11 19:34:12,153:INFO:Copying training dataset
2023-06-11 19:34:12,158:INFO:Defining folds
2023-06-11 19:34:12,158:INFO:Declaring metric variables
2023-06-11 19:34:12,164:INFO:Importing untrained model
2023-06-11 19:34:12,169:INFO:Ridge Regression Imported successfully
2023-06-11 19:34:12,180:INFO:Starting cross validation
2023-06-11 19:34:12,191:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:12,422:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:12,423:INFO:Calculating mean and std
2023-06-11 19:34:12,426:INFO:Creating metrics dataframe
2023-06-11 19:34:12,432:INFO:Uploading results into container
2023-06-11 19:34:12,433:INFO:Uploading model into container now
2023-06-11 19:34:12,433:INFO:master_model_container: 3
2023-06-11 19:34:12,433:INFO:display_container: 2
2023-06-11 19:34:12,434:INFO:Ridge(random_state=123)
2023-06-11 19:34:12,434:INFO:create_model() successfully completed......................................
2023-06-11 19:34:12,780:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:12,780:INFO:Creating metrics dataframe
2023-06-11 19:34:12,789:INFO:Initializing Elastic Net
2023-06-11 19:34:12,789:INFO:Total runtime is 0.04549599885940552 minutes
2023-06-11 19:34:12,793:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:12,794:INFO:Initializing create_model()
2023-06-11 19:34:12,794:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:12,794:INFO:Checking exceptions
2023-06-11 19:34:12,799:INFO:Importing libraries
2023-06-11 19:34:12,799:INFO:Copying training dataset
2023-06-11 19:34:12,807:INFO:Defining folds
2023-06-11 19:34:12,808:INFO:Declaring metric variables
2023-06-11 19:34:12,814:INFO:Importing untrained model
2023-06-11 19:34:12,821:INFO:Elastic Net Imported successfully
2023-06-11 19:34:12,830:INFO:Starting cross validation
2023-06-11 19:34:12,840:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:13,050:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:13,050:INFO:Calculating mean and std
2023-06-11 19:34:13,052:INFO:Creating metrics dataframe
2023-06-11 19:34:13,058:INFO:Uploading results into container
2023-06-11 19:34:13,059:INFO:Uploading model into container now
2023-06-11 19:34:13,060:INFO:master_model_container: 4
2023-06-11 19:34:13,061:INFO:display_container: 2
2023-06-11 19:34:13,061:INFO:ElasticNet(random_state=123)
2023-06-11 19:34:13,061:INFO:create_model() successfully completed......................................
2023-06-11 19:34:13,431:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:13,432:INFO:Creating metrics dataframe
2023-06-11 19:34:13,443:INFO:Initializing Least Angle Regression
2023-06-11 19:34:13,443:INFO:Total runtime is 0.05639848709106446 minutes
2023-06-11 19:34:13,447:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:13,447:INFO:Initializing create_model()
2023-06-11 19:34:13,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:13,447:INFO:Checking exceptions
2023-06-11 19:34:13,450:INFO:Importing libraries
2023-06-11 19:34:13,450:INFO:Copying training dataset
2023-06-11 19:34:13,455:INFO:Defining folds
2023-06-11 19:34:13,455:INFO:Declaring metric variables
2023-06-11 19:34:13,460:INFO:Importing untrained model
2023-06-11 19:34:13,467:INFO:Least Angle Regression Imported successfully
2023-06-11 19:34:13,478:INFO:Starting cross validation
2023-06-11 19:34:13,491:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:13,583:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:13,594:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:13,645:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:13,663:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:13,716:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:13,716:INFO:Calculating mean and std
2023-06-11 19:34:13,720:INFO:Creating metrics dataframe
2023-06-11 19:34:13,730:INFO:Uploading results into container
2023-06-11 19:34:13,732:INFO:Uploading model into container now
2023-06-11 19:34:13,733:INFO:master_model_container: 5
2023-06-11 19:34:13,733:INFO:display_container: 2
2023-06-11 19:34:13,734:INFO:Lars(random_state=123)
2023-06-11 19:34:13,734:INFO:create_model() successfully completed......................................
2023-06-11 19:34:14,059:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:14,059:INFO:Creating metrics dataframe
2023-06-11 19:34:14,069:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:34:14,069:INFO:Total runtime is 0.06683652400970459 minutes
2023-06-11 19:34:14,073:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:14,074:INFO:Initializing create_model()
2023-06-11 19:34:14,074:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:14,074:INFO:Checking exceptions
2023-06-11 19:34:14,076:INFO:Importing libraries
2023-06-11 19:34:14,076:INFO:Copying training dataset
2023-06-11 19:34:14,081:INFO:Defining folds
2023-06-11 19:34:14,081:INFO:Declaring metric variables
2023-06-11 19:34:14,086:INFO:Importing untrained model
2023-06-11 19:34:14,090:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:34:14,099:INFO:Starting cross validation
2023-06-11 19:34:14,111:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:14,222:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:34:14,230:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:34:14,239:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:34:14,242:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:34:14,312:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:14,313:INFO:Calculating mean and std
2023-06-11 19:34:14,315:INFO:Creating metrics dataframe
2023-06-11 19:34:14,321:INFO:Uploading results into container
2023-06-11 19:34:14,322:INFO:Uploading model into container now
2023-06-11 19:34:14,323:INFO:master_model_container: 6
2023-06-11 19:34:14,323:INFO:display_container: 2
2023-06-11 19:34:14,323:INFO:LassoLars(random_state=123)
2023-06-11 19:34:14,324:INFO:create_model() successfully completed......................................
2023-06-11 19:34:14,689:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:14,689:INFO:Creating metrics dataframe
2023-06-11 19:34:14,704:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:34:14,704:INFO:Total runtime is 0.07741125822067262 minutes
2023-06-11 19:34:14,708:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:14,709:INFO:Initializing create_model()
2023-06-11 19:34:14,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:14,710:INFO:Checking exceptions
2023-06-11 19:34:14,714:INFO:Importing libraries
2023-06-11 19:34:14,714:INFO:Copying training dataset
2023-06-11 19:34:14,721:INFO:Defining folds
2023-06-11 19:34:14,721:INFO:Declaring metric variables
2023-06-11 19:34:14,726:INFO:Importing untrained model
2023-06-11 19:34:14,732:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:34:14,741:INFO:Starting cross validation
2023-06-11 19:34:14,754:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:14,870:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:14,880:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:14,911:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:14,926:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:34:15,000:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:15,000:INFO:Calculating mean and std
2023-06-11 19:34:15,004:INFO:Creating metrics dataframe
2023-06-11 19:34:15,010:INFO:Uploading results into container
2023-06-11 19:34:15,012:INFO:Uploading model into container now
2023-06-11 19:34:15,012:INFO:master_model_container: 7
2023-06-11 19:34:15,012:INFO:display_container: 2
2023-06-11 19:34:15,012:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:34:15,012:INFO:create_model() successfully completed......................................
2023-06-11 19:34:15,347:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:15,347:INFO:Creating metrics dataframe
2023-06-11 19:34:15,358:INFO:Initializing Bayesian Ridge
2023-06-11 19:34:15,358:INFO:Total runtime is 0.08832112948099773 minutes
2023-06-11 19:34:15,363:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:15,364:INFO:Initializing create_model()
2023-06-11 19:34:15,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:15,364:INFO:Checking exceptions
2023-06-11 19:34:15,367:INFO:Importing libraries
2023-06-11 19:34:15,367:INFO:Copying training dataset
2023-06-11 19:34:15,376:INFO:Defining folds
2023-06-11 19:34:15,376:INFO:Declaring metric variables
2023-06-11 19:34:15,383:INFO:Importing untrained model
2023-06-11 19:34:15,389:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:34:15,401:INFO:Starting cross validation
2023-06-11 19:34:15,412:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:15,628:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:15,628:INFO:Calculating mean and std
2023-06-11 19:34:15,631:INFO:Creating metrics dataframe
2023-06-11 19:34:15,636:INFO:Uploading results into container
2023-06-11 19:34:15,636:INFO:Uploading model into container now
2023-06-11 19:34:15,637:INFO:master_model_container: 8
2023-06-11 19:34:15,637:INFO:display_container: 2
2023-06-11 19:34:15,637:INFO:BayesianRidge()
2023-06-11 19:34:15,637:INFO:create_model() successfully completed......................................
2023-06-11 19:34:15,967:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:15,967:INFO:Creating metrics dataframe
2023-06-11 19:34:15,980:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:34:15,980:INFO:Total runtime is 0.09868002732594808 minutes
2023-06-11 19:34:15,984:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:15,984:INFO:Initializing create_model()
2023-06-11 19:34:15,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:15,984:INFO:Checking exceptions
2023-06-11 19:34:15,987:INFO:Importing libraries
2023-06-11 19:34:15,987:INFO:Copying training dataset
2023-06-11 19:34:15,991:INFO:Defining folds
2023-06-11 19:34:15,991:INFO:Declaring metric variables
2023-06-11 19:34:15,996:INFO:Importing untrained model
2023-06-11 19:34:16,001:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:34:16,010:INFO:Starting cross validation
2023-06-11 19:34:16,023:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:16,259:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:34:16,266:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:34:16,289:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:34:16,298:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:34:16,352:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:16,352:INFO:Calculating mean and std
2023-06-11 19:34:16,355:INFO:Creating metrics dataframe
2023-06-11 19:34:16,363:INFO:Uploading results into container
2023-06-11 19:34:16,365:INFO:Uploading model into container now
2023-06-11 19:34:16,365:INFO:master_model_container: 9
2023-06-11 19:34:16,365:INFO:display_container: 2
2023-06-11 19:34:16,366:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:34:16,366:INFO:create_model() successfully completed......................................
2023-06-11 19:34:16,694:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:16,694:INFO:Creating metrics dataframe
2023-06-11 19:34:16,705:INFO:Initializing Huber Regressor
2023-06-11 19:34:16,705:INFO:Total runtime is 0.1107598861058553 minutes
2023-06-11 19:34:16,709:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:16,710:INFO:Initializing create_model()
2023-06-11 19:34:16,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:16,710:INFO:Checking exceptions
2023-06-11 19:34:16,712:INFO:Importing libraries
2023-06-11 19:34:16,712:INFO:Copying training dataset
2023-06-11 19:34:16,716:INFO:Defining folds
2023-06-11 19:34:16,717:INFO:Declaring metric variables
2023-06-11 19:34:16,721:INFO:Importing untrained model
2023-06-11 19:34:16,726:INFO:Huber Regressor Imported successfully
2023-06-11 19:34:16,736:INFO:Starting cross validation
2023-06-11 19:34:16,748:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:16,955:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:16,956:INFO:Calculating mean and std
2023-06-11 19:34:16,957:INFO:Creating metrics dataframe
2023-06-11 19:34:16,961:INFO:Uploading results into container
2023-06-11 19:34:16,961:INFO:Uploading model into container now
2023-06-11 19:34:16,962:INFO:master_model_container: 10
2023-06-11 19:34:16,962:INFO:display_container: 2
2023-06-11 19:34:16,962:INFO:HuberRegressor()
2023-06-11 19:34:16,962:INFO:create_model() successfully completed......................................
2023-06-11 19:34:17,294:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:17,294:INFO:Creating metrics dataframe
2023-06-11 19:34:17,305:INFO:Initializing K Neighbors Regressor
2023-06-11 19:34:17,305:INFO:Total runtime is 0.12077072461446126 minutes
2023-06-11 19:34:17,309:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:17,309:INFO:Initializing create_model()
2023-06-11 19:34:17,309:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:17,309:INFO:Checking exceptions
2023-06-11 19:34:17,312:INFO:Importing libraries
2023-06-11 19:34:17,312:INFO:Copying training dataset
2023-06-11 19:34:17,317:INFO:Defining folds
2023-06-11 19:34:17,318:INFO:Declaring metric variables
2023-06-11 19:34:17,323:INFO:Importing untrained model
2023-06-11 19:34:17,328:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:34:17,337:INFO:Starting cross validation
2023-06-11 19:34:17,349:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:17,590:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:17,590:INFO:Calculating mean and std
2023-06-11 19:34:17,593:INFO:Creating metrics dataframe
2023-06-11 19:34:17,599:INFO:Uploading results into container
2023-06-11 19:34:17,600:INFO:Uploading model into container now
2023-06-11 19:34:17,600:INFO:master_model_container: 11
2023-06-11 19:34:17,600:INFO:display_container: 2
2023-06-11 19:34:17,600:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:34:17,600:INFO:create_model() successfully completed......................................
2023-06-11 19:34:17,935:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:17,935:INFO:Creating metrics dataframe
2023-06-11 19:34:17,946:INFO:Initializing Decision Tree Regressor
2023-06-11 19:34:17,947:INFO:Total runtime is 0.13145856062571207 minutes
2023-06-11 19:34:17,950:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:17,951:INFO:Initializing create_model()
2023-06-11 19:34:17,951:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:17,951:INFO:Checking exceptions
2023-06-11 19:34:17,953:INFO:Importing libraries
2023-06-11 19:34:17,953:INFO:Copying training dataset
2023-06-11 19:34:17,958:INFO:Defining folds
2023-06-11 19:34:17,958:INFO:Declaring metric variables
2023-06-11 19:34:17,962:INFO:Importing untrained model
2023-06-11 19:34:17,966:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:34:17,974:INFO:Starting cross validation
2023-06-11 19:34:17,989:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:18,234:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:18,234:INFO:Calculating mean and std
2023-06-11 19:34:18,238:INFO:Creating metrics dataframe
2023-06-11 19:34:18,246:INFO:Uploading results into container
2023-06-11 19:34:18,248:INFO:Uploading model into container now
2023-06-11 19:34:18,249:INFO:master_model_container: 12
2023-06-11 19:34:18,249:INFO:display_container: 2
2023-06-11 19:34:18,250:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:34:18,250:INFO:create_model() successfully completed......................................
2023-06-11 19:34:18,610:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:18,610:INFO:Creating metrics dataframe
2023-06-11 19:34:18,622:INFO:Initializing Random Forest Regressor
2023-06-11 19:34:18,622:INFO:Total runtime is 0.1427198529243469 minutes
2023-06-11 19:34:18,626:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:18,626:INFO:Initializing create_model()
2023-06-11 19:34:18,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:18,627:INFO:Checking exceptions
2023-06-11 19:34:18,630:INFO:Importing libraries
2023-06-11 19:34:18,630:INFO:Copying training dataset
2023-06-11 19:34:18,637:INFO:Defining folds
2023-06-11 19:34:18,637:INFO:Declaring metric variables
2023-06-11 19:34:18,643:INFO:Importing untrained model
2023-06-11 19:34:18,650:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:34:18,662:INFO:Starting cross validation
2023-06-11 19:34:18,674:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:19,787:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:19,787:INFO:Calculating mean and std
2023-06-11 19:34:19,790:INFO:Creating metrics dataframe
2023-06-11 19:34:19,793:INFO:Uploading results into container
2023-06-11 19:34:19,794:INFO:Uploading model into container now
2023-06-11 19:34:19,794:INFO:master_model_container: 13
2023-06-11 19:34:19,795:INFO:display_container: 2
2023-06-11 19:34:19,795:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:34:19,796:INFO:create_model() successfully completed......................................
2023-06-11 19:34:20,129:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:20,129:INFO:Creating metrics dataframe
2023-06-11 19:34:20,140:INFO:Initializing Extra Trees Regressor
2023-06-11 19:34:20,140:INFO:Total runtime is 0.16802138090133667 minutes
2023-06-11 19:34:20,144:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:20,145:INFO:Initializing create_model()
2023-06-11 19:34:20,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:20,145:INFO:Checking exceptions
2023-06-11 19:34:20,147:INFO:Importing libraries
2023-06-11 19:34:20,148:INFO:Copying training dataset
2023-06-11 19:34:20,152:INFO:Defining folds
2023-06-11 19:34:20,152:INFO:Declaring metric variables
2023-06-11 19:34:20,157:INFO:Importing untrained model
2023-06-11 19:34:20,161:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:34:20,171:INFO:Starting cross validation
2023-06-11 19:34:20,182:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:20,809:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:20,809:INFO:Calculating mean and std
2023-06-11 19:34:20,812:INFO:Creating metrics dataframe
2023-06-11 19:34:20,816:INFO:Uploading results into container
2023-06-11 19:34:20,817:INFO:Uploading model into container now
2023-06-11 19:34:20,818:INFO:master_model_container: 14
2023-06-11 19:34:20,818:INFO:display_container: 2
2023-06-11 19:34:20,819:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:34:20,819:INFO:create_model() successfully completed......................................
2023-06-11 19:34:21,156:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:21,157:INFO:Creating metrics dataframe
2023-06-11 19:34:21,168:INFO:Initializing AdaBoost Regressor
2023-06-11 19:34:21,169:INFO:Total runtime is 0.18515910307566324 minutes
2023-06-11 19:34:21,172:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:21,172:INFO:Initializing create_model()
2023-06-11 19:34:21,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:21,172:INFO:Checking exceptions
2023-06-11 19:34:21,176:INFO:Importing libraries
2023-06-11 19:34:21,176:INFO:Copying training dataset
2023-06-11 19:34:21,183:INFO:Defining folds
2023-06-11 19:34:21,183:INFO:Declaring metric variables
2023-06-11 19:34:21,188:INFO:Importing untrained model
2023-06-11 19:34:21,195:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:34:21,207:INFO:Starting cross validation
2023-06-11 19:34:21,219:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:21,462:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:21,462:INFO:Calculating mean and std
2023-06-11 19:34:21,464:INFO:Creating metrics dataframe
2023-06-11 19:34:21,469:INFO:Uploading results into container
2023-06-11 19:34:21,470:INFO:Uploading model into container now
2023-06-11 19:34:21,470:INFO:master_model_container: 15
2023-06-11 19:34:21,470:INFO:display_container: 2
2023-06-11 19:34:21,471:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:34:21,471:INFO:create_model() successfully completed......................................
2023-06-11 19:34:21,803:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:21,803:INFO:Creating metrics dataframe
2023-06-11 19:34:21,815:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:34:21,815:INFO:Total runtime is 0.19593144257863362 minutes
2023-06-11 19:34:21,819:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:21,819:INFO:Initializing create_model()
2023-06-11 19:34:21,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:21,819:INFO:Checking exceptions
2023-06-11 19:34:21,822:INFO:Importing libraries
2023-06-11 19:34:21,822:INFO:Copying training dataset
2023-06-11 19:34:21,826:INFO:Defining folds
2023-06-11 19:34:21,827:INFO:Declaring metric variables
2023-06-11 19:34:21,830:INFO:Importing untrained model
2023-06-11 19:34:21,835:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:34:21,843:INFO:Starting cross validation
2023-06-11 19:34:21,856:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:22,587:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:22,588:INFO:Calculating mean and std
2023-06-11 19:34:22,590:INFO:Creating metrics dataframe
2023-06-11 19:34:22,594:INFO:Uploading results into container
2023-06-11 19:34:22,595:INFO:Uploading model into container now
2023-06-11 19:34:22,595:INFO:master_model_container: 16
2023-06-11 19:34:22,596:INFO:display_container: 2
2023-06-11 19:34:22,596:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:34:22,596:INFO:create_model() successfully completed......................................
2023-06-11 19:34:22,946:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:22,946:INFO:Creating metrics dataframe
2023-06-11 19:34:22,961:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:34:22,961:INFO:Total runtime is 0.21503456830978393 minutes
2023-06-11 19:34:22,965:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:22,965:INFO:Initializing create_model()
2023-06-11 19:34:22,966:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:22,966:INFO:Checking exceptions
2023-06-11 19:34:22,968:INFO:Importing libraries
2023-06-11 19:34:22,968:INFO:Copying training dataset
2023-06-11 19:34:22,973:INFO:Defining folds
2023-06-11 19:34:22,973:INFO:Declaring metric variables
2023-06-11 19:34:22,978:INFO:Importing untrained model
2023-06-11 19:34:22,983:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:34:22,993:INFO:Starting cross validation
2023-06-11 19:34:23,006:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:23,483:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:23,483:INFO:Calculating mean and std
2023-06-11 19:34:23,486:INFO:Creating metrics dataframe
2023-06-11 19:34:23,490:INFO:Uploading results into container
2023-06-11 19:34:23,491:INFO:Uploading model into container now
2023-06-11 19:34:23,491:INFO:master_model_container: 17
2023-06-11 19:34:23,491:INFO:display_container: 2
2023-06-11 19:34:23,492:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:34:23,492:INFO:create_model() successfully completed......................................
2023-06-11 19:34:23,848:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:23,848:INFO:Creating metrics dataframe
2023-06-11 19:34:23,862:INFO:Initializing Dummy Regressor
2023-06-11 19:34:23,863:INFO:Total runtime is 0.2300622264544169 minutes
2023-06-11 19:34:23,870:INFO:SubProcess create_model() called ==================================
2023-06-11 19:34:23,870:INFO:Initializing create_model()
2023-06-11 19:34:23,870:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a310220>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:23,871:INFO:Checking exceptions
2023-06-11 19:34:23,873:INFO:Importing libraries
2023-06-11 19:34:23,874:INFO:Copying training dataset
2023-06-11 19:34:23,879:INFO:Defining folds
2023-06-11 19:34:23,879:INFO:Declaring metric variables
2023-06-11 19:34:23,884:INFO:Importing untrained model
2023-06-11 19:34:23,889:INFO:Dummy Regressor Imported successfully
2023-06-11 19:34:23,901:INFO:Starting cross validation
2023-06-11 19:34:23,920:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:34:24,131:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 211, in fit
    X, y, _ = self._fit(X, y, **fit_params_steps)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 192, in _fit
    X, y, fitted_transformer = self._memory_fit(
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 537, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/joblib/memory.py", line 779, in call
    output = self.func(*args, **kwargs)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 87, in _fit_transform_one
    _fit_one(transformer, X, y, message, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 54, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 216, in fit
    self.transformer.fit(*args, **fit_params)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 342, in fit
    self._check_max_features(X)
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/feature_selection/_from_model.py", line 298, in _check_max_features
    check_scalar(
  File "/home/user/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: max_features == 15, must be <= 14.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-11 19:34:24,132:INFO:Calculating mean and std
2023-06-11 19:34:24,135:INFO:Creating metrics dataframe
2023-06-11 19:34:24,144:INFO:Uploading results into container
2023-06-11 19:34:24,145:INFO:Uploading model into container now
2023-06-11 19:34:24,146:INFO:master_model_container: 18
2023-06-11 19:34:24,146:INFO:display_container: 2
2023-06-11 19:34:24,146:INFO:DummyRegressor()
2023-06-11 19:34:24,146:INFO:create_model() successfully completed......................................
2023-06-11 19:34:24,499:INFO:SubProcess create_model() end ==================================
2023-06-11 19:34:24,499:INFO:Creating metrics dataframe
2023-06-11 19:34:24,524:INFO:Initializing create_model()
2023-06-11 19:34:24,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f0371b02b00>, estimator=DecisionTreeRegressor(random_state=123), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:34:24,524:INFO:Checking exceptions
2023-06-11 19:34:24,529:INFO:Importing libraries
2023-06-11 19:34:24,529:INFO:Copying training dataset
2023-06-11 19:34:24,533:INFO:Defining folds
2023-06-11 19:34:24,533:INFO:Declaring metric variables
2023-06-11 19:34:24,534:INFO:Importing untrained model
2023-06-11 19:34:24,534:INFO:Declaring custom model
2023-06-11 19:34:24,534:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:34:24,545:INFO:Cross validation set to False
2023-06-11 19:34:24,545:INFO:Fitting Model
2023-06-11 19:34:24,782:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:34:24,783:INFO:create_model() successfully completed......................................
2023-06-11 19:34:25,149:INFO:master_model_container: 18
2023-06-11 19:34:25,150:INFO:display_container: 2
2023-06-11 19:34:25,150:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:34:25,150:INFO:compare_models() successfully completed......................................
2023-06-11 19:34:34,687:INFO:PyCaret RegressionExperiment
2023-06-11 19:34:34,688:INFO:Logging name: reg-default-name
2023-06-11 19:34:34,688:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:34:34,688:INFO:version 3.0.0.rc4
2023-06-11 19:34:34,688:INFO:Initializing setup()
2023-06-11 19:34:34,688:INFO:self.USI: 3436
2023-06-11 19:34:34,688:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:34:34,688:INFO:Checking environment
2023-06-11 19:34:34,688:INFO:python_version: 3.10.6
2023-06-11 19:34:34,688:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:34:34,688:INFO:machine: x86_64
2023-06-11 19:34:34,688:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:34:34,689:INFO:Memory: svmem(total=6088237056, available=1123450880, percent=81.5, used=4542353408, free=389996544, active=1678872576, inactive=3117187072, buffers=28409856, cached=1127477248, shared=126533632, slab=453943296)
2023-06-11 19:34:34,692:INFO:Physical Core: 4
2023-06-11 19:34:34,692:INFO:Logical Core: 8
2023-06-11 19:34:34,692:INFO:Checking libraries
2023-06-11 19:34:34,693:INFO:System:
2023-06-11 19:34:34,693:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:34:34,693:INFO:executable: /usr/bin/python3
2023-06-11 19:34:34,693:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:34:34,693:INFO:PyCaret required dependencies:
2023-06-11 19:34:34,693:INFO:                 pip: 22.0.2
2023-06-11 19:34:34,693:INFO:          setuptools: 59.6.0
2023-06-11 19:34:34,693:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:34:34,693:INFO:             IPython: 8.5.0
2023-06-11 19:34:34,694:INFO:          ipywidgets: 8.0.2
2023-06-11 19:34:34,694:INFO:                tqdm: 4.64.1
2023-06-11 19:34:34,694:INFO:               numpy: 1.22.4
2023-06-11 19:34:34,694:INFO:              pandas: 1.4.4
2023-06-11 19:34:34,694:INFO:              jinja2: 3.1.2
2023-06-11 19:34:34,694:INFO:               scipy: 1.8.1
2023-06-11 19:34:34,694:INFO:              joblib: 1.2.0
2023-06-11 19:34:34,694:INFO:             sklearn: 1.1.2
2023-06-11 19:34:34,694:INFO:                pyod: 1.0.5
2023-06-11 19:34:34,695:INFO:            imblearn: 0.9.1
2023-06-11 19:34:34,695:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:34:34,695:INFO:            lightgbm: 3.3.2
2023-06-11 19:34:34,695:INFO:               numba: 0.55.2
2023-06-11 19:34:34,695:INFO:            requests: 2.25.1
2023-06-11 19:34:34,695:INFO:          matplotlib: 3.6.0
2023-06-11 19:34:34,695:INFO:          scikitplot: 0.3.7
2023-06-11 19:34:34,695:INFO:         yellowbrick: 1.5
2023-06-11 19:34:34,695:INFO:              plotly: 5.10.0
2023-06-11 19:34:34,695:INFO:             kaleido: 0.2.1
2023-06-11 19:34:34,696:INFO:         statsmodels: 0.13.2
2023-06-11 19:34:34,696:INFO:              sktime: 0.13.4
2023-06-11 19:34:34,696:INFO:               tbats: 1.1.1
2023-06-11 19:34:34,696:INFO:            pmdarima: 1.8.5
2023-06-11 19:34:34,696:INFO:              psutil: 5.9.2
2023-06-11 19:34:34,696:INFO:PyCaret optional dependencies:
2023-06-11 19:34:34,696:INFO:                shap: Not installed
2023-06-11 19:34:34,696:INFO:           interpret: Not installed
2023-06-11 19:34:34,696:INFO:                umap: Not installed
2023-06-11 19:34:34,696:INFO:    pandas_profiling: Not installed
2023-06-11 19:34:34,696:INFO:  explainerdashboard: Not installed
2023-06-11 19:34:34,697:INFO:             autoviz: Not installed
2023-06-11 19:34:34,697:INFO:           fairlearn: Not installed
2023-06-11 19:34:34,697:INFO:             xgboost: Not installed
2023-06-11 19:34:34,697:INFO:            catboost: Not installed
2023-06-11 19:34:34,697:INFO:              kmodes: Not installed
2023-06-11 19:34:34,697:INFO:             mlxtend: 0.21.0
2023-06-11 19:34:34,697:INFO:       statsforecast: Not installed
2023-06-11 19:34:34,697:INFO:        tune_sklearn: Not installed
2023-06-11 19:34:34,697:INFO:                 ray: Not installed
2023-06-11 19:34:34,697:INFO:            hyperopt: Not installed
2023-06-11 19:34:34,697:INFO:              optuna: Not installed
2023-06-11 19:34:34,697:INFO:               skopt: Not installed
2023-06-11 19:34:34,697:INFO:              mlflow: 1.29.0
2023-06-11 19:34:34,697:INFO:              gradio: 3.4.1
2023-06-11 19:34:34,697:INFO:             fastapi: 0.85.0
2023-06-11 19:34:34,697:INFO:             uvicorn: 0.18.3
2023-06-11 19:34:34,697:INFO:              m2cgen: 0.10.0
2023-06-11 19:34:34,698:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:34:34,698:INFO:                nltk: 3.7
2023-06-11 19:34:34,698:INFO:            pyLDAvis: Not installed
2023-06-11 19:34:34,698:INFO:              gensim: Not installed
2023-06-11 19:34:34,698:INFO:               spacy: 3.5.0
2023-06-11 19:34:34,698:INFO:           wordcloud: Not installed
2023-06-11 19:34:34,698:INFO:            textblob: 0.17.1
2023-06-11 19:34:34,698:INFO:               fugue: Not installed
2023-06-11 19:34:34,698:INFO:           streamlit: 1.13.0
2023-06-11 19:34:34,698:INFO:             prophet: Not installed
2023-06-11 19:34:34,698:INFO:None
2023-06-11 19:34:34,698:INFO:Set up data.
2023-06-11 19:34:34,727:INFO:Set up train/test split.
2023-06-11 19:34:34,740:INFO:Set up index.
2023-06-11 19:34:34,741:INFO:Set up folding strategy.
2023-06-11 19:34:34,741:INFO:Assigning column types.
2023-06-11 19:34:34,750:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-11 19:34:34,750:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,762:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,770:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,834:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,883:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:34,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:34,884:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,889:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,894:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:34,959:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,010:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,011:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-11 19:34:35,017:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,022:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,145:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,150:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,217:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,268:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,269:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-11 19:34:35,279:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,345:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,395:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,406:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,474:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,528:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-11 19:34:35,606:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,658:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,738:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,797:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-11 19:34:35,876:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:35,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:35,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:34:36,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,086:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-11 19:34:36,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,351:INFO:Preparing preprocessing pipeline...
2023-06-11 19:34:36,352:INFO:Set up simple imputation.
2023-06-11 19:34:36,355:INFO:Set up encoding of categorical features.
2023-06-11 19:34:36,355:INFO:Set up polynomial features.
2023-06-11 19:34:36,355:INFO:Set up variance threshold.
2023-06-11 19:34:36,355:INFO:Set up removing multicollinearity.
2023-06-11 19:34:36,355:INFO:Set up feature normalization.
2023-06-11 19:34:36,355:INFO:Set up feature selection.
2023-06-11 19:34:36,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:34:36,589:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:36:26,242:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 1.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-06-11 19:36:27,647:INFO:Finished creating preprocessing pipeline.
2023-06-11 19:36:27,664:INFO:Pipeline: Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=15,
                                                                threshold=-inf)))])
2023-06-11 19:36:27,664:INFO:Creating final display dataframe.
2023-06-11 19:36:27,760:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:36:34,419:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:225: UserWarning: Persisting input arguments took 1.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(transformer, X, y)

2023-06-11 19:36:36,845:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:36:43,034:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:225: UserWarning: Persisting input arguments took 1.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(transformer, X, y)

2023-06-11 19:36:48,828:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:225: UserWarning: Persisting input arguments took 1.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(transformer, X, y)

2023-06-11 19:36:57,343:INFO:Setup display_container:                     Description             Value
0                    Session id               123
1                        Target           credito
2                   Target type        Regression
3                    Data shape        (2190, 16)
4              Train data shape        (1532, 16)
5               Test data shape         (658, 16)
6              Numeric features                27
7          Categorical features                 4
8      Rows with missing values             71.9%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation          constant
13     Maximum one-hot encoding                 5
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 3
17       Low variance threshold               0.1
18     Remove multicollinearity              True
19  Multicollinearity threshold               0.9
20                    Normalize              True
21             Normalize method            zscore
22            Feature selection              True
23     Feature selection method           classic
24  Feature selection estimator          lightgbm
25  Number of features selected                15
26               Fold Generator             KFold
27                  Fold Number                10
28                     CPU Jobs                -1
29                      Use GPU             False
30               Log Experiment             False
31              Experiment Name  reg-default-name
32                          USI              3436
2023-06-11 19:36:57,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:36:57,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:36:57,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:36:57,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:36:57,645:INFO:setup() successfully completed in 142.96s...............
2023-06-11 19:36:57,650:INFO:Initializing compare_models()
2023-06-11 19:36:57,650:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, include=None, fold=5, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:36:57,650:INFO:Checking exceptions
2023-06-11 19:36:57,655:INFO:Preparing display monitor
2023-06-11 19:36:57,698:INFO:Initializing Linear Regression
2023-06-11 19:36:57,699:INFO:Total runtime is 5.547205607096354e-06 minutes
2023-06-11 19:36:57,703:INFO:SubProcess create_model() called ==================================
2023-06-11 19:36:57,704:INFO:Initializing create_model()
2023-06-11 19:36:57,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:36:57,704:INFO:Checking exceptions
2023-06-11 19:36:57,707:INFO:Importing libraries
2023-06-11 19:36:57,707:INFO:Copying training dataset
2023-06-11 19:36:57,711:INFO:Defining folds
2023-06-11 19:36:57,712:INFO:Declaring metric variables
2023-06-11 19:36:57,717:INFO:Importing untrained model
2023-06-11 19:36:57,721:INFO:Linear Regression Imported successfully
2023-06-11 19:36:57,731:INFO:Starting cross validation
2023-06-11 19:36:58,020:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:36:58,197:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:36:58,210:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:36:58,331:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:36:58,560:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:36:58,690:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:37:01,035:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-06-11 19:39:38,096:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 2.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-06-11 19:39:44,414:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:39:48,463:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 3.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-06-11 19:39:50,796:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 2.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-06-11 19:39:52,490:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 4.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-06-11 19:39:52,569:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 2.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2023-06-11 19:39:52,715:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 5.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-06-11 19:39:53,946:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:39:57,060:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:39:58,639:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:39:59,154:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:40:03,505:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 2.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2023-06-11 19:40:06,475:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 2.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2023-06-11 19:40:08,526:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 2.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2023-06-11 19:40:08,794:WARNING:/home/user/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 3.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2023-06-11 19:40:09,041:INFO:Calculating mean and std
2023-06-11 19:40:09,076:INFO:Creating metrics dataframe
2023-06-11 19:40:09,142:INFO:Uploading results into container
2023-06-11 19:40:09,154:INFO:Uploading model into container now
2023-06-11 19:40:09,156:INFO:master_model_container: 1
2023-06-11 19:40:09,156:INFO:display_container: 2
2023-06-11 19:40:09,160:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:40:09,161:INFO:create_model() successfully completed......................................
2023-06-11 19:40:11,139:INFO:SubProcess create_model() end ==================================
2023-06-11 19:40:11,139:INFO:Creating metrics dataframe
2023-06-11 19:40:11,152:INFO:Initializing Lasso Regression
2023-06-11 19:40:11,152:INFO:Total runtime is 3.2242282589276634 minutes
2023-06-11 19:40:11,157:INFO:SubProcess create_model() called ==================================
2023-06-11 19:40:11,157:INFO:Initializing create_model()
2023-06-11 19:40:11,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:40:11,157:INFO:Checking exceptions
2023-06-11 19:40:11,164:INFO:Importing libraries
2023-06-11 19:40:11,164:INFO:Copying training dataset
2023-06-11 19:40:11,170:INFO:Defining folds
2023-06-11 19:40:11,170:INFO:Declaring metric variables
2023-06-11 19:40:11,174:INFO:Importing untrained model
2023-06-11 19:40:11,179:INFO:Lasso Regression Imported successfully
2023-06-11 19:40:11,188:INFO:Starting cross validation
2023-06-11 19:40:11,487:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:40:19,246:INFO:Calculating mean and std
2023-06-11 19:40:19,250:INFO:Creating metrics dataframe
2023-06-11 19:40:19,265:INFO:Uploading results into container
2023-06-11 19:40:19,267:INFO:Uploading model into container now
2023-06-11 19:40:19,268:INFO:master_model_container: 2
2023-06-11 19:40:19,268:INFO:display_container: 2
2023-06-11 19:40:19,269:INFO:Lasso(random_state=123)
2023-06-11 19:40:19,269:INFO:create_model() successfully completed......................................
2023-06-11 19:40:19,629:INFO:SubProcess create_model() end ==================================
2023-06-11 19:40:19,629:INFO:Creating metrics dataframe
2023-06-11 19:40:19,641:INFO:Initializing Ridge Regression
2023-06-11 19:40:19,641:INFO:Total runtime is 3.3657153169314067 minutes
2023-06-11 19:40:19,645:INFO:SubProcess create_model() called ==================================
2023-06-11 19:40:19,645:INFO:Initializing create_model()
2023-06-11 19:40:19,646:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:40:19,646:INFO:Checking exceptions
2023-06-11 19:40:19,649:INFO:Importing libraries
2023-06-11 19:40:19,649:INFO:Copying training dataset
2023-06-11 19:40:19,653:INFO:Defining folds
2023-06-11 19:40:19,653:INFO:Declaring metric variables
2023-06-11 19:40:19,658:INFO:Importing untrained model
2023-06-11 19:40:19,663:INFO:Ridge Regression Imported successfully
2023-06-11 19:40:19,672:INFO:Starting cross validation
2023-06-11 19:40:19,939:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:40:28,087:INFO:Calculating mean and std
2023-06-11 19:40:28,090:INFO:Creating metrics dataframe
2023-06-11 19:40:28,099:INFO:Uploading results into container
2023-06-11 19:40:28,101:INFO:Uploading model into container now
2023-06-11 19:40:28,102:INFO:master_model_container: 3
2023-06-11 19:40:28,102:INFO:display_container: 2
2023-06-11 19:40:28,102:INFO:Ridge(random_state=123)
2023-06-11 19:40:28,102:INFO:create_model() successfully completed......................................
2023-06-11 19:40:28,484:INFO:SubProcess create_model() end ==================================
2023-06-11 19:40:28,484:INFO:Creating metrics dataframe
2023-06-11 19:40:28,494:INFO:Initializing Elastic Net
2023-06-11 19:40:28,494:INFO:Total runtime is 3.5132665673891705 minutes
2023-06-11 19:40:28,498:INFO:SubProcess create_model() called ==================================
2023-06-11 19:40:28,499:INFO:Initializing create_model()
2023-06-11 19:40:28,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:40:28,499:INFO:Checking exceptions
2023-06-11 19:40:28,503:INFO:Importing libraries
2023-06-11 19:40:28,503:INFO:Copying training dataset
2023-06-11 19:40:28,508:INFO:Defining folds
2023-06-11 19:40:28,508:INFO:Declaring metric variables
2023-06-11 19:40:28,513:INFO:Importing untrained model
2023-06-11 19:40:28,519:INFO:Elastic Net Imported successfully
2023-06-11 19:40:28,528:INFO:Starting cross validation
2023-06-11 19:40:28,813:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:40:34,588:INFO:Calculating mean and std
2023-06-11 19:40:34,591:INFO:Creating metrics dataframe
2023-06-11 19:40:34,603:INFO:Uploading results into container
2023-06-11 19:40:34,605:INFO:Uploading model into container now
2023-06-11 19:40:34,606:INFO:master_model_container: 4
2023-06-11 19:40:34,607:INFO:display_container: 2
2023-06-11 19:40:34,607:INFO:ElasticNet(random_state=123)
2023-06-11 19:40:34,608:INFO:create_model() successfully completed......................................
2023-06-11 19:40:34,948:INFO:SubProcess create_model() end ==================================
2023-06-11 19:40:34,948:INFO:Creating metrics dataframe
2023-06-11 19:40:34,958:INFO:Initializing Least Angle Regression
2023-06-11 19:40:34,958:INFO:Total runtime is 3.6209951639175415 minutes
2023-06-11 19:40:34,962:INFO:SubProcess create_model() called ==================================
2023-06-11 19:40:34,963:INFO:Initializing create_model()
2023-06-11 19:40:34,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:40:34,963:INFO:Checking exceptions
2023-06-11 19:40:34,966:INFO:Importing libraries
2023-06-11 19:40:34,966:INFO:Copying training dataset
2023-06-11 19:40:34,970:INFO:Defining folds
2023-06-11 19:40:34,970:INFO:Declaring metric variables
2023-06-11 19:40:34,975:INFO:Importing untrained model
2023-06-11 19:40:34,981:INFO:Least Angle Regression Imported successfully
2023-06-11 19:40:34,990:INFO:Starting cross validation
2023-06-11 19:40:35,280:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:40:36,514:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:36,701:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:36,728:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:37,136:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:37,256:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:40,897:INFO:Calculating mean and std
2023-06-11 19:40:40,901:INFO:Creating metrics dataframe
2023-06-11 19:40:40,912:INFO:Uploading results into container
2023-06-11 19:40:40,913:INFO:Uploading model into container now
2023-06-11 19:40:40,914:INFO:master_model_container: 5
2023-06-11 19:40:40,914:INFO:display_container: 2
2023-06-11 19:40:40,917:INFO:Lars(random_state=123)
2023-06-11 19:40:40,917:INFO:create_model() successfully completed......................................
2023-06-11 19:40:41,288:INFO:SubProcess create_model() end ==================================
2023-06-11 19:40:41,288:INFO:Creating metrics dataframe
2023-06-11 19:40:41,299:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:40:41,300:INFO:Total runtime is 3.726688492298126 minutes
2023-06-11 19:40:41,303:INFO:SubProcess create_model() called ==================================
2023-06-11 19:40:41,303:INFO:Initializing create_model()
2023-06-11 19:40:41,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:40:41,303:INFO:Checking exceptions
2023-06-11 19:40:41,307:INFO:Importing libraries
2023-06-11 19:40:41,307:INFO:Copying training dataset
2023-06-11 19:40:41,313:INFO:Defining folds
2023-06-11 19:40:41,313:INFO:Declaring metric variables
2023-06-11 19:40:41,317:INFO:Importing untrained model
2023-06-11 19:40:41,322:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:40:41,331:INFO:Starting cross validation
2023-06-11 19:40:41,614:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:40:42,951:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:40:43,343:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:40:43,492:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:40:43,540:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:40:43,600:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:40:47,200:INFO:Calculating mean and std
2023-06-11 19:40:47,203:INFO:Creating metrics dataframe
2023-06-11 19:40:47,212:INFO:Uploading results into container
2023-06-11 19:40:47,214:INFO:Uploading model into container now
2023-06-11 19:40:47,215:INFO:master_model_container: 6
2023-06-11 19:40:47,215:INFO:display_container: 2
2023-06-11 19:40:47,215:INFO:LassoLars(random_state=123)
2023-06-11 19:40:47,215:INFO:create_model() successfully completed......................................
2023-06-11 19:40:47,546:INFO:SubProcess create_model() end ==================================
2023-06-11 19:40:47,546:INFO:Creating metrics dataframe
2023-06-11 19:40:47,558:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:40:47,558:INFO:Total runtime is 3.8309972206751506 minutes
2023-06-11 19:40:47,562:INFO:SubProcess create_model() called ==================================
2023-06-11 19:40:47,563:INFO:Initializing create_model()
2023-06-11 19:40:47,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:40:47,563:INFO:Checking exceptions
2023-06-11 19:40:47,566:INFO:Importing libraries
2023-06-11 19:40:47,566:INFO:Copying training dataset
2023-06-11 19:40:47,571:INFO:Defining folds
2023-06-11 19:40:47,571:INFO:Declaring metric variables
2023-06-11 19:40:47,575:INFO:Importing untrained model
2023-06-11 19:40:47,580:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:40:47,589:INFO:Starting cross validation
2023-06-11 19:40:47,850:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:40:49,090:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:49,142:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:49,203:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:49,535:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:49,823:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:40:53,491:INFO:Calculating mean and std
2023-06-11 19:40:53,494:INFO:Creating metrics dataframe
2023-06-11 19:40:53,501:INFO:Uploading results into container
2023-06-11 19:40:53,501:INFO:Uploading model into container now
2023-06-11 19:40:53,502:INFO:master_model_container: 7
2023-06-11 19:40:53,502:INFO:display_container: 2
2023-06-11 19:40:53,502:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:40:53,502:INFO:create_model() successfully completed......................................
2023-06-11 19:40:53,862:INFO:SubProcess create_model() end ==================================
2023-06-11 19:40:53,862:INFO:Creating metrics dataframe
2023-06-11 19:40:53,872:INFO:Initializing Bayesian Ridge
2023-06-11 19:40:53,872:INFO:Total runtime is 3.9362378478050233 minutes
2023-06-11 19:40:53,878:INFO:SubProcess create_model() called ==================================
2023-06-11 19:40:53,879:INFO:Initializing create_model()
2023-06-11 19:40:53,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:40:53,879:INFO:Checking exceptions
2023-06-11 19:40:53,882:INFO:Importing libraries
2023-06-11 19:40:53,882:INFO:Copying training dataset
2023-06-11 19:40:53,886:INFO:Defining folds
2023-06-11 19:40:53,886:INFO:Declaring metric variables
2023-06-11 19:40:53,891:INFO:Importing untrained model
2023-06-11 19:40:53,896:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:40:53,905:INFO:Starting cross validation
2023-06-11 19:40:54,198:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:40:59,793:INFO:Calculating mean and std
2023-06-11 19:40:59,796:INFO:Creating metrics dataframe
2023-06-11 19:40:59,806:INFO:Uploading results into container
2023-06-11 19:40:59,807:INFO:Uploading model into container now
2023-06-11 19:40:59,807:INFO:master_model_container: 8
2023-06-11 19:40:59,807:INFO:display_container: 2
2023-06-11 19:40:59,808:INFO:BayesianRidge()
2023-06-11 19:40:59,808:INFO:create_model() successfully completed......................................
2023-06-11 19:41:00,180:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:00,180:INFO:Creating metrics dataframe
2023-06-11 19:41:00,192:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:41:00,192:INFO:Total runtime is 4.041564071178437 minutes
2023-06-11 19:41:00,196:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:00,197:INFO:Initializing create_model()
2023-06-11 19:41:00,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:00,197:INFO:Checking exceptions
2023-06-11 19:41:00,200:INFO:Importing libraries
2023-06-11 19:41:00,200:INFO:Copying training dataset
2023-06-11 19:41:00,206:INFO:Defining folds
2023-06-11 19:41:00,206:INFO:Declaring metric variables
2023-06-11 19:41:00,210:INFO:Importing untrained model
2023-06-11 19:41:00,216:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:41:00,229:INFO:Starting cross validation
2023-06-11 19:41:00,513:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:01,942:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:41:02,064:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:41:02,079:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:41:02,483:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:41:02,559:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:41:06,421:INFO:Calculating mean and std
2023-06-11 19:41:06,423:INFO:Creating metrics dataframe
2023-06-11 19:41:06,437:INFO:Uploading results into container
2023-06-11 19:41:06,439:INFO:Uploading model into container now
2023-06-11 19:41:06,440:INFO:master_model_container: 9
2023-06-11 19:41:06,441:INFO:display_container: 2
2023-06-11 19:41:06,442:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:41:06,442:INFO:create_model() successfully completed......................................
2023-06-11 19:41:06,792:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:06,793:INFO:Creating metrics dataframe
2023-06-11 19:41:06,805:INFO:Initializing Huber Regressor
2023-06-11 19:41:06,805:INFO:Total runtime is 4.151778841018677 minutes
2023-06-11 19:41:06,810:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:06,811:INFO:Initializing create_model()
2023-06-11 19:41:06,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:06,811:INFO:Checking exceptions
2023-06-11 19:41:06,814:INFO:Importing libraries
2023-06-11 19:41:06,814:INFO:Copying training dataset
2023-06-11 19:41:06,819:INFO:Defining folds
2023-06-11 19:41:06,819:INFO:Declaring metric variables
2023-06-11 19:41:06,824:INFO:Importing untrained model
2023-06-11 19:41:06,830:INFO:Huber Regressor Imported successfully
2023-06-11 19:41:06,840:INFO:Starting cross validation
2023-06-11 19:41:07,121:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:13,102:INFO:Calculating mean and std
2023-06-11 19:41:13,106:INFO:Creating metrics dataframe
2023-06-11 19:41:13,118:INFO:Uploading results into container
2023-06-11 19:41:13,121:INFO:Uploading model into container now
2023-06-11 19:41:13,122:INFO:master_model_container: 10
2023-06-11 19:41:13,122:INFO:display_container: 2
2023-06-11 19:41:13,123:INFO:HuberRegressor()
2023-06-11 19:41:13,123:INFO:create_model() successfully completed......................................
2023-06-11 19:41:13,490:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:13,490:INFO:Creating metrics dataframe
2023-06-11 19:41:13,501:INFO:Initializing K Neighbors Regressor
2023-06-11 19:41:13,502:INFO:Total runtime is 4.263391156991323 minutes
2023-06-11 19:41:13,505:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:13,506:INFO:Initializing create_model()
2023-06-11 19:41:13,506:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:13,506:INFO:Checking exceptions
2023-06-11 19:41:13,508:INFO:Importing libraries
2023-06-11 19:41:13,508:INFO:Copying training dataset
2023-06-11 19:41:13,513:INFO:Defining folds
2023-06-11 19:41:13,513:INFO:Declaring metric variables
2023-06-11 19:41:13,518:INFO:Importing untrained model
2023-06-11 19:41:13,522:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:41:13,530:INFO:Starting cross validation
2023-06-11 19:41:13,799:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:19,153:INFO:Calculating mean and std
2023-06-11 19:41:19,156:INFO:Creating metrics dataframe
2023-06-11 19:41:19,162:INFO:Uploading results into container
2023-06-11 19:41:19,164:INFO:Uploading model into container now
2023-06-11 19:41:19,164:INFO:master_model_container: 11
2023-06-11 19:41:19,165:INFO:display_container: 2
2023-06-11 19:41:19,165:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:41:19,165:INFO:create_model() successfully completed......................................
2023-06-11 19:41:19,492:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:19,492:INFO:Creating metrics dataframe
2023-06-11 19:41:19,508:INFO:Initializing Decision Tree Regressor
2023-06-11 19:41:19,508:INFO:Total runtime is 4.3635031461715705 minutes
2023-06-11 19:41:19,512:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:19,513:INFO:Initializing create_model()
2023-06-11 19:41:19,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:19,513:INFO:Checking exceptions
2023-06-11 19:41:19,516:INFO:Importing libraries
2023-06-11 19:41:19,516:INFO:Copying training dataset
2023-06-11 19:41:19,520:INFO:Defining folds
2023-06-11 19:41:19,521:INFO:Declaring metric variables
2023-06-11 19:41:19,524:INFO:Importing untrained model
2023-06-11 19:41:19,529:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:41:19,539:INFO:Starting cross validation
2023-06-11 19:41:19,838:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:25,387:INFO:Calculating mean and std
2023-06-11 19:41:25,390:INFO:Creating metrics dataframe
2023-06-11 19:41:25,395:INFO:Uploading results into container
2023-06-11 19:41:25,396:INFO:Uploading model into container now
2023-06-11 19:41:25,397:INFO:master_model_container: 12
2023-06-11 19:41:25,397:INFO:display_container: 2
2023-06-11 19:41:25,397:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:41:25,397:INFO:create_model() successfully completed......................................
2023-06-11 19:41:25,711:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:25,711:INFO:Creating metrics dataframe
2023-06-11 19:41:25,723:INFO:Initializing Random Forest Regressor
2023-06-11 19:41:25,723:INFO:Total runtime is 4.46707631746928 minutes
2023-06-11 19:41:25,726:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:25,727:INFO:Initializing create_model()
2023-06-11 19:41:25,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:25,727:INFO:Checking exceptions
2023-06-11 19:41:25,729:INFO:Importing libraries
2023-06-11 19:41:25,729:INFO:Copying training dataset
2023-06-11 19:41:25,734:INFO:Defining folds
2023-06-11 19:41:25,734:INFO:Declaring metric variables
2023-06-11 19:41:25,738:INFO:Importing untrained model
2023-06-11 19:41:25,742:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:41:25,750:INFO:Starting cross validation
2023-06-11 19:41:26,015:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:32,815:INFO:Calculating mean and std
2023-06-11 19:41:32,817:INFO:Creating metrics dataframe
2023-06-11 19:41:32,825:INFO:Uploading results into container
2023-06-11 19:41:32,827:INFO:Uploading model into container now
2023-06-11 19:41:32,827:INFO:master_model_container: 13
2023-06-11 19:41:32,827:INFO:display_container: 2
2023-06-11 19:41:32,828:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:41:32,828:INFO:create_model() successfully completed......................................
2023-06-11 19:41:33,196:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:33,196:INFO:Creating metrics dataframe
2023-06-11 19:41:33,209:INFO:Initializing Extra Trees Regressor
2023-06-11 19:41:33,209:INFO:Total runtime is 4.591844820976259 minutes
2023-06-11 19:41:33,214:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:33,215:INFO:Initializing create_model()
2023-06-11 19:41:33,215:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:33,215:INFO:Checking exceptions
2023-06-11 19:41:33,218:INFO:Importing libraries
2023-06-11 19:41:33,219:INFO:Copying training dataset
2023-06-11 19:41:33,223:INFO:Defining folds
2023-06-11 19:41:33,224:INFO:Declaring metric variables
2023-06-11 19:41:33,228:INFO:Importing untrained model
2023-06-11 19:41:33,234:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:41:33,243:INFO:Starting cross validation
2023-06-11 19:41:33,559:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:39,645:INFO:Calculating mean and std
2023-06-11 19:41:39,648:INFO:Creating metrics dataframe
2023-06-11 19:41:39,654:INFO:Uploading results into container
2023-06-11 19:41:39,655:INFO:Uploading model into container now
2023-06-11 19:41:39,655:INFO:master_model_container: 14
2023-06-11 19:41:39,655:INFO:display_container: 2
2023-06-11 19:41:39,656:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:41:39,656:INFO:create_model() successfully completed......................................
2023-06-11 19:41:39,998:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:39,998:INFO:Creating metrics dataframe
2023-06-11 19:41:40,011:INFO:Initializing AdaBoost Regressor
2023-06-11 19:41:40,011:INFO:Total runtime is 4.705217353502911 minutes
2023-06-11 19:41:40,015:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:40,015:INFO:Initializing create_model()
2023-06-11 19:41:40,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:40,015:INFO:Checking exceptions
2023-06-11 19:41:40,018:INFO:Importing libraries
2023-06-11 19:41:40,018:INFO:Copying training dataset
2023-06-11 19:41:40,022:INFO:Defining folds
2023-06-11 19:41:40,023:INFO:Declaring metric variables
2023-06-11 19:41:40,028:INFO:Importing untrained model
2023-06-11 19:41:40,032:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:41:40,041:INFO:Starting cross validation
2023-06-11 19:41:40,329:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:46,491:INFO:Calculating mean and std
2023-06-11 19:41:46,493:INFO:Creating metrics dataframe
2023-06-11 19:41:46,500:INFO:Uploading results into container
2023-06-11 19:41:46,501:INFO:Uploading model into container now
2023-06-11 19:41:46,501:INFO:master_model_container: 15
2023-06-11 19:41:46,501:INFO:display_container: 2
2023-06-11 19:41:46,501:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:41:46,501:INFO:create_model() successfully completed......................................
2023-06-11 19:41:46,866:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:46,866:INFO:Creating metrics dataframe
2023-06-11 19:41:46,879:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:41:46,879:INFO:Total runtime is 4.819677642981213 minutes
2023-06-11 19:41:46,883:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:46,884:INFO:Initializing create_model()
2023-06-11 19:41:46,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:46,884:INFO:Checking exceptions
2023-06-11 19:41:46,887:INFO:Importing libraries
2023-06-11 19:41:46,887:INFO:Copying training dataset
2023-06-11 19:41:46,893:INFO:Defining folds
2023-06-11 19:41:46,894:INFO:Declaring metric variables
2023-06-11 19:41:46,898:INFO:Importing untrained model
2023-06-11 19:41:46,903:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:41:46,914:INFO:Starting cross validation
2023-06-11 19:41:47,198:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:53,335:INFO:Calculating mean and std
2023-06-11 19:41:53,338:INFO:Creating metrics dataframe
2023-06-11 19:41:53,350:INFO:Uploading results into container
2023-06-11 19:41:53,352:INFO:Uploading model into container now
2023-06-11 19:41:53,353:INFO:master_model_container: 16
2023-06-11 19:41:53,354:INFO:display_container: 2
2023-06-11 19:41:53,355:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:41:53,355:INFO:create_model() successfully completed......................................
2023-06-11 19:41:53,683:INFO:SubProcess create_model() end ==================================
2023-06-11 19:41:53,683:INFO:Creating metrics dataframe
2023-06-11 19:41:53,695:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:41:53,695:INFO:Total runtime is 4.933287628491721 minutes
2023-06-11 19:41:53,699:INFO:SubProcess create_model() called ==================================
2023-06-11 19:41:53,700:INFO:Initializing create_model()
2023-06-11 19:41:53,700:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:41:53,700:INFO:Checking exceptions
2023-06-11 19:41:53,703:INFO:Importing libraries
2023-06-11 19:41:53,703:INFO:Copying training dataset
2023-06-11 19:41:53,708:INFO:Defining folds
2023-06-11 19:41:53,708:INFO:Declaring metric variables
2023-06-11 19:41:53,712:INFO:Importing untrained model
2023-06-11 19:41:53,716:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:41:53,724:INFO:Starting cross validation
2023-06-11 19:41:53,984:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:41:59,687:INFO:Calculating mean and std
2023-06-11 19:41:59,690:INFO:Creating metrics dataframe
2023-06-11 19:41:59,699:INFO:Uploading results into container
2023-06-11 19:41:59,700:INFO:Uploading model into container now
2023-06-11 19:41:59,700:INFO:master_model_container: 17
2023-06-11 19:41:59,700:INFO:display_container: 2
2023-06-11 19:41:59,700:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:41:59,700:INFO:create_model() successfully completed......................................
2023-06-11 19:42:00,034:INFO:SubProcess create_model() end ==================================
2023-06-11 19:42:00,034:INFO:Creating metrics dataframe
2023-06-11 19:42:00,047:INFO:Initializing Dummy Regressor
2023-06-11 19:42:00,047:INFO:Total runtime is 5.039152451356253 minutes
2023-06-11 19:42:00,051:INFO:SubProcess create_model() called ==================================
2023-06-11 19:42:00,052:INFO:Initializing create_model()
2023-06-11 19:42:00,052:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036c9e0be0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:42:00,052:INFO:Checking exceptions
2023-06-11 19:42:00,055:INFO:Importing libraries
2023-06-11 19:42:00,055:INFO:Copying training dataset
2023-06-11 19:42:00,060:INFO:Defining folds
2023-06-11 19:42:00,060:INFO:Declaring metric variables
2023-06-11 19:42:00,064:INFO:Importing untrained model
2023-06-11 19:42:00,069:INFO:Dummy Regressor Imported successfully
2023-06-11 19:42:00,078:INFO:Starting cross validation
2023-06-11 19:42:00,356:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:42:06,467:INFO:Calculating mean and std
2023-06-11 19:42:06,471:INFO:Creating metrics dataframe
2023-06-11 19:42:06,478:INFO:Uploading results into container
2023-06-11 19:42:06,479:INFO:Uploading model into container now
2023-06-11 19:42:06,479:INFO:master_model_container: 18
2023-06-11 19:42:06,479:INFO:display_container: 2
2023-06-11 19:42:06,480:INFO:DummyRegressor()
2023-06-11 19:42:06,480:INFO:create_model() successfully completed......................................
2023-06-11 19:42:06,859:INFO:SubProcess create_model() end ==================================
2023-06-11 19:42:06,859:INFO:Creating metrics dataframe
2023-06-11 19:42:06,888:INFO:Initializing create_model()
2023-06-11 19:42:06,889:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a3d0400>, estimator=HuberRegressor(), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:42:06,889:INFO:Checking exceptions
2023-06-11 19:42:06,896:INFO:Importing libraries
2023-06-11 19:42:06,897:INFO:Copying training dataset
2023-06-11 19:42:06,901:INFO:Defining folds
2023-06-11 19:42:06,901:INFO:Declaring metric variables
2023-06-11 19:42:06,901:INFO:Importing untrained model
2023-06-11 19:42:06,901:INFO:Declaring custom model
2023-06-11 19:42:06,902:INFO:Huber Regressor Imported successfully
2023-06-11 19:42:07,190:INFO:Cross validation set to False
2023-06-11 19:42:07,190:INFO:Fitting Model
2023-06-11 19:42:11,623:INFO:HuberRegressor()
2023-06-11 19:42:11,624:INFO:create_model() successfully completed......................................
2023-06-11 19:42:12,067:INFO:master_model_container: 18
2023-06-11 19:42:12,068:INFO:display_container: 2
2023-06-11 19:42:12,068:INFO:HuberRegressor()
2023-06-11 19:42:12,069:INFO:compare_models() successfully completed......................................
2023-06-11 19:48:57,156:INFO:PyCaret RegressionExperiment
2023-06-11 19:48:57,156:INFO:Logging name: reg-default-name
2023-06-11 19:48:57,157:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-11 19:48:57,157:INFO:version 3.0.0.rc4
2023-06-11 19:48:57,157:INFO:Initializing setup()
2023-06-11 19:48:57,157:INFO:self.USI: 0b57
2023-06-11 19:48:57,157:INFO:self.variable_keys: {'variable_keys', '_ml_usecase', 'X_test', 'logging_param', 'display_container', 'X_train', 'data', 'exp_id', 'transform_target_param', 'html_param', 'log_plots_param', 'y', '_all_metrics', 'target_param', 'exp_name_log', '_available_plots', 'X', 'y_train', 'fold_shuffle_param', 'fold_generator', 'idx', '_gpu_n_jobs_param', 'USI', 'seed', 'memory', 'n_jobs_param', 'transform_target_method_param', 'pipeline', 'y_test', '_all_models_internal', 'fold_groups_param', '_all_models', 'gpu_param', 'master_model_container'}
2023-06-11 19:48:57,158:INFO:Checking environment
2023-06-11 19:48:57,158:INFO:python_version: 3.10.6
2023-06-11 19:48:57,158:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-11 19:48:57,158:INFO:machine: x86_64
2023-06-11 19:48:57,158:INFO:platform: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:48:57,159:INFO:Memory: svmem(total=6088237056, available=2999586816, percent=50.7, used=2741690368, free=1533861888, active=2271227904, inactive=1444392960, buffers=52903936, cached=1759780864, shared=65040384, slab=421588992)
2023-06-11 19:48:57,161:INFO:Physical Core: 4
2023-06-11 19:48:57,161:INFO:Logical Core: 8
2023-06-11 19:48:57,161:INFO:Checking libraries
2023-06-11 19:48:57,161:INFO:System:
2023-06-11 19:48:57,161:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-11 19:48:57,161:INFO:executable: /usr/bin/python3
2023-06-11 19:48:57,161:INFO:   machine: Linux-5.19.0-43-generic-x86_64-with-glibc2.35
2023-06-11 19:48:57,161:INFO:PyCaret required dependencies:
2023-06-11 19:48:57,162:INFO:                 pip: 22.0.2
2023-06-11 19:48:57,162:INFO:          setuptools: 59.6.0
2023-06-11 19:48:57,162:INFO:             pycaret: 3.0.0rc4
2023-06-11 19:48:57,162:INFO:             IPython: 8.5.0
2023-06-11 19:48:57,162:INFO:          ipywidgets: 8.0.2
2023-06-11 19:48:57,162:INFO:                tqdm: 4.64.1
2023-06-11 19:48:57,162:INFO:               numpy: 1.22.4
2023-06-11 19:48:57,162:INFO:              pandas: 1.4.4
2023-06-11 19:48:57,162:INFO:              jinja2: 3.1.2
2023-06-11 19:48:57,162:INFO:               scipy: 1.8.1
2023-06-11 19:48:57,162:INFO:              joblib: 1.2.0
2023-06-11 19:48:57,163:INFO:             sklearn: 1.1.2
2023-06-11 19:48:57,163:INFO:                pyod: 1.0.5
2023-06-11 19:48:57,163:INFO:            imblearn: 0.9.1
2023-06-11 19:48:57,163:INFO:   category_encoders: 2.5.1.post0
2023-06-11 19:48:57,163:INFO:            lightgbm: 3.3.2
2023-06-11 19:48:57,163:INFO:               numba: 0.55.2
2023-06-11 19:48:57,163:INFO:            requests: 2.25.1
2023-06-11 19:48:57,163:INFO:          matplotlib: 3.6.0
2023-06-11 19:48:57,163:INFO:          scikitplot: 0.3.7
2023-06-11 19:48:57,163:INFO:         yellowbrick: 1.5
2023-06-11 19:48:57,163:INFO:              plotly: 5.10.0
2023-06-11 19:48:57,163:INFO:             kaleido: 0.2.1
2023-06-11 19:48:57,164:INFO:         statsmodels: 0.13.2
2023-06-11 19:48:57,164:INFO:              sktime: 0.13.4
2023-06-11 19:48:57,164:INFO:               tbats: 1.1.1
2023-06-11 19:48:57,164:INFO:            pmdarima: 1.8.5
2023-06-11 19:48:57,164:INFO:              psutil: 5.9.2
2023-06-11 19:48:57,164:INFO:PyCaret optional dependencies:
2023-06-11 19:48:57,164:INFO:                shap: Not installed
2023-06-11 19:48:57,164:INFO:           interpret: Not installed
2023-06-11 19:48:57,164:INFO:                umap: Not installed
2023-06-11 19:48:57,164:INFO:    pandas_profiling: Not installed
2023-06-11 19:48:57,164:INFO:  explainerdashboard: Not installed
2023-06-11 19:48:57,165:INFO:             autoviz: Not installed
2023-06-11 19:48:57,165:INFO:           fairlearn: Not installed
2023-06-11 19:48:57,165:INFO:             xgboost: Not installed
2023-06-11 19:48:57,165:INFO:            catboost: Not installed
2023-06-11 19:48:57,165:INFO:              kmodes: Not installed
2023-06-11 19:48:57,165:INFO:             mlxtend: 0.21.0
2023-06-11 19:48:57,165:INFO:       statsforecast: Not installed
2023-06-11 19:48:57,165:INFO:        tune_sklearn: Not installed
2023-06-11 19:48:57,165:INFO:                 ray: Not installed
2023-06-11 19:48:57,165:INFO:            hyperopt: Not installed
2023-06-11 19:48:57,165:INFO:              optuna: Not installed
2023-06-11 19:48:57,166:INFO:               skopt: Not installed
2023-06-11 19:48:57,166:INFO:              mlflow: 1.29.0
2023-06-11 19:48:57,166:INFO:              gradio: 3.4.1
2023-06-11 19:48:57,166:INFO:             fastapi: 0.85.0
2023-06-11 19:48:57,166:INFO:             uvicorn: 0.18.3
2023-06-11 19:48:57,166:INFO:              m2cgen: 0.10.0
2023-06-11 19:48:57,166:INFO:           evidently: 0.1.58.dev0
2023-06-11 19:48:57,166:INFO:                nltk: 3.7
2023-06-11 19:48:57,166:INFO:            pyLDAvis: Not installed
2023-06-11 19:48:57,166:INFO:              gensim: Not installed
2023-06-11 19:48:57,166:INFO:               spacy: 3.5.0
2023-06-11 19:48:57,166:INFO:           wordcloud: Not installed
2023-06-11 19:48:57,167:INFO:            textblob: 0.17.1
2023-06-11 19:48:57,167:INFO:               fugue: Not installed
2023-06-11 19:48:57,167:INFO:           streamlit: 1.13.0
2023-06-11 19:48:57,167:INFO:             prophet: Not installed
2023-06-11 19:48:57,167:INFO:None
2023-06-11 19:48:57,167:INFO:Set up data.
2023-06-11 19:48:57,222:INFO:Set up train/test split.
2023-06-11 19:48:57,238:INFO:Set up index.
2023-06-11 19:48:57,239:INFO:Set up folding strategy.
2023-06-11 19:48:57,240:INFO:Assigning column types.
2023-06-11 19:48:57,249:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-11 19:48:57,250:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,256:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,261:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,376:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,377:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,382:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,388:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,452:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,503:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,504:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-11 19:48:57,510:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,515:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,580:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,636:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,642:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,708:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,765:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,766:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-11 19:48:57,776:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,843:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:57,907:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-11 19:48:57,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,033:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-11 19:48:58,115:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,165:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,247:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,305:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-11 19:48:58,390:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,527:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-11 19:48:58,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,580:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-11 19:48:58,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,847:INFO:Preparing preprocessing pipeline...
2023-06-11 19:48:58,848:INFO:Set up simple imputation.
2023-06-11 19:48:58,855:INFO:Set up encoding of categorical features.
2023-06-11 19:48:58,855:INFO:Set up polynomial features.
2023-06-11 19:48:58,855:INFO:Set up variance threshold.
2023-06-11 19:48:58,855:INFO:Set up removing multicollinearity.
2023-06-11 19:48:58,855:INFO:Set up feature normalization.
2023-06-11 19:48:58,855:INFO:Set up feature selection.
2023-06-11 19:48:58,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:48:58,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:49:00,237:INFO:Finished creating preprocessing pipeline.
2023-06-11 19:49:00,258:INFO:Pipeline: Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=VarianceThreshold(threshold=0.08))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf)))])
2023-06-11 19:49:00,258:INFO:Creating final display dataframe.
2023-06-11 19:49:01,240:INFO:Setup display_container:                     Description             Value
0                    Session id               123
1                        Target           credito
2                   Target type        Regression
3                    Data shape        (2190, 11)
4              Train data shape        (1532, 11)
5               Test data shape         (658, 11)
6              Numeric features                27
7          Categorical features                 4
8      Rows with missing values             71.9%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation          constant
13     Maximum one-hot encoding                 5
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17       Low variance threshold              0.08
18     Remove multicollinearity              True
19  Multicollinearity threshold               0.9
20                    Normalize              True
21             Normalize method            zscore
22            Feature selection              True
23     Feature selection method           classic
24  Feature selection estimator          lightgbm
25  Number of features selected                10
26               Fold Generator             KFold
27                  Fold Number                10
28                     CPU Jobs                -1
29                      Use GPU             False
30               Log Experiment             False
31              Experiment Name  reg-default-name
32                          USI              0b57
2023-06-11 19:49:01,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:49:01,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:49:01,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:49:01,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-11 19:49:01,513:INFO:setup() successfully completed in 4.36s...............
2023-06-11 19:49:01,520:INFO:Initializing compare_models()
2023-06-11 19:49:01,520:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, include=None, fold=4, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, 'include': None, 'exclude': None, 'fold': 4, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:49:01,521:INFO:Checking exceptions
2023-06-11 19:49:01,527:INFO:Preparing display monitor
2023-06-11 19:49:01,576:INFO:Initializing Linear Regression
2023-06-11 19:49:01,576:INFO:Total runtime is 7.367134094238281e-06 minutes
2023-06-11 19:49:01,582:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:01,583:INFO:Initializing create_model()
2023-06-11 19:49:01,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lr, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:01,583:INFO:Checking exceptions
2023-06-11 19:49:01,586:INFO:Importing libraries
2023-06-11 19:49:01,586:INFO:Copying training dataset
2023-06-11 19:49:01,593:INFO:Defining folds
2023-06-11 19:49:01,593:INFO:Declaring metric variables
2023-06-11 19:49:01,605:INFO:Importing untrained model
2023-06-11 19:49:01,612:INFO:Linear Regression Imported successfully
2023-06-11 19:49:01,631:INFO:Starting cross validation
2023-06-11 19:49:01,653:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:03,998:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:04,014:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:04,093:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:04,149:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:08,539:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:08,557:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:08,563:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:08,787:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:49:09,521:INFO:Calculating mean and std
2023-06-11 19:49:09,526:INFO:Creating metrics dataframe
2023-06-11 19:49:09,538:INFO:Uploading results into container
2023-06-11 19:49:09,540:INFO:Uploading model into container now
2023-06-11 19:49:09,541:INFO:master_model_container: 1
2023-06-11 19:49:09,541:INFO:display_container: 2
2023-06-11 19:49:09,542:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:49:09,543:INFO:create_model() successfully completed......................................
2023-06-11 19:49:09,940:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:09,940:INFO:Creating metrics dataframe
2023-06-11 19:49:09,950:INFO:Initializing Lasso Regression
2023-06-11 19:49:09,950:INFO:Total runtime is 0.13956726789474488 minutes
2023-06-11 19:49:09,954:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:09,955:INFO:Initializing create_model()
2023-06-11 19:49:09,955:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lasso, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:09,955:INFO:Checking exceptions
2023-06-11 19:49:09,958:INFO:Importing libraries
2023-06-11 19:49:09,958:INFO:Copying training dataset
2023-06-11 19:49:09,965:INFO:Defining folds
2023-06-11 19:49:09,965:INFO:Declaring metric variables
2023-06-11 19:49:09,969:INFO:Importing untrained model
2023-06-11 19:49:09,974:INFO:Lasso Regression Imported successfully
2023-06-11 19:49:09,984:INFO:Starting cross validation
2023-06-11 19:49:10,002:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:11,950:INFO:Calculating mean and std
2023-06-11 19:49:11,953:INFO:Creating metrics dataframe
2023-06-11 19:49:11,960:INFO:Uploading results into container
2023-06-11 19:49:11,961:INFO:Uploading model into container now
2023-06-11 19:49:11,962:INFO:master_model_container: 2
2023-06-11 19:49:11,962:INFO:display_container: 2
2023-06-11 19:49:11,963:INFO:Lasso(random_state=123)
2023-06-11 19:49:11,963:INFO:create_model() successfully completed......................................
2023-06-11 19:49:12,288:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:12,288:INFO:Creating metrics dataframe
2023-06-11 19:49:12,298:INFO:Initializing Ridge Regression
2023-06-11 19:49:12,298:INFO:Total runtime is 0.1787031968434652 minutes
2023-06-11 19:49:12,303:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:12,303:INFO:Initializing create_model()
2023-06-11 19:49:12,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ridge, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:12,304:INFO:Checking exceptions
2023-06-11 19:49:12,306:INFO:Importing libraries
2023-06-11 19:49:12,307:INFO:Copying training dataset
2023-06-11 19:49:12,311:INFO:Defining folds
2023-06-11 19:49:12,311:INFO:Declaring metric variables
2023-06-11 19:49:12,316:INFO:Importing untrained model
2023-06-11 19:49:12,321:INFO:Ridge Regression Imported successfully
2023-06-11 19:49:12,331:INFO:Starting cross validation
2023-06-11 19:49:12,347:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:12,668:INFO:Calculating mean and std
2023-06-11 19:49:12,670:INFO:Creating metrics dataframe
2023-06-11 19:49:12,676:INFO:Uploading results into container
2023-06-11 19:49:12,677:INFO:Uploading model into container now
2023-06-11 19:49:12,678:INFO:master_model_container: 3
2023-06-11 19:49:12,678:INFO:display_container: 2
2023-06-11 19:49:12,679:INFO:Ridge(random_state=123)
2023-06-11 19:49:12,679:INFO:create_model() successfully completed......................................
2023-06-11 19:49:13,003:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:13,003:INFO:Creating metrics dataframe
2023-06-11 19:49:13,012:INFO:Initializing Elastic Net
2023-06-11 19:49:13,013:INFO:Total runtime is 0.19061068693796795 minutes
2023-06-11 19:49:13,016:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:13,017:INFO:Initializing create_model()
2023-06-11 19:49:13,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=en, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:13,017:INFO:Checking exceptions
2023-06-11 19:49:13,020:INFO:Importing libraries
2023-06-11 19:49:13,020:INFO:Copying training dataset
2023-06-11 19:49:13,025:INFO:Defining folds
2023-06-11 19:49:13,025:INFO:Declaring metric variables
2023-06-11 19:49:13,033:INFO:Importing untrained model
2023-06-11 19:49:13,048:INFO:Elastic Net Imported successfully
2023-06-11 19:49:13,057:INFO:Starting cross validation
2023-06-11 19:49:13,074:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:13,366:INFO:Calculating mean and std
2023-06-11 19:49:13,369:INFO:Creating metrics dataframe
2023-06-11 19:49:13,375:INFO:Uploading results into container
2023-06-11 19:49:13,375:INFO:Uploading model into container now
2023-06-11 19:49:13,376:INFO:master_model_container: 4
2023-06-11 19:49:13,376:INFO:display_container: 2
2023-06-11 19:49:13,377:INFO:ElasticNet(random_state=123)
2023-06-11 19:49:13,377:INFO:create_model() successfully completed......................................
2023-06-11 19:49:13,717:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:13,717:INFO:Creating metrics dataframe
2023-06-11 19:49:13,728:INFO:Initializing Least Angle Regression
2023-06-11 19:49:13,728:INFO:Total runtime is 0.2025301218032837 minutes
2023-06-11 19:49:13,732:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:13,733:INFO:Initializing create_model()
2023-06-11 19:49:13,733:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lar, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:13,733:INFO:Checking exceptions
2023-06-11 19:49:13,736:INFO:Importing libraries
2023-06-11 19:49:13,736:INFO:Copying training dataset
2023-06-11 19:49:13,741:INFO:Defining folds
2023-06-11 19:49:13,741:INFO:Declaring metric variables
2023-06-11 19:49:13,747:INFO:Importing untrained model
2023-06-11 19:49:13,753:INFO:Least Angle Regression Imported successfully
2023-06-11 19:49:13,766:INFO:Starting cross validation
2023-06-11 19:49:13,784:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:13,917:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:13,928:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:13,954:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:13,985:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:14,102:INFO:Calculating mean and std
2023-06-11 19:49:14,104:INFO:Creating metrics dataframe
2023-06-11 19:49:14,109:INFO:Uploading results into container
2023-06-11 19:49:14,111:INFO:Uploading model into container now
2023-06-11 19:49:14,112:INFO:master_model_container: 5
2023-06-11 19:49:14,112:INFO:display_container: 2
2023-06-11 19:49:14,113:INFO:Lars(random_state=123)
2023-06-11 19:49:14,113:INFO:create_model() successfully completed......................................
2023-06-11 19:49:14,451:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:14,451:INFO:Creating metrics dataframe
2023-06-11 19:49:14,461:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:49:14,461:INFO:Total runtime is 0.21475042899449667 minutes
2023-06-11 19:49:14,465:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:14,465:INFO:Initializing create_model()
2023-06-11 19:49:14,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=llar, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:14,465:INFO:Checking exceptions
2023-06-11 19:49:14,468:INFO:Importing libraries
2023-06-11 19:49:14,468:INFO:Copying training dataset
2023-06-11 19:49:14,472:INFO:Defining folds
2023-06-11 19:49:14,473:INFO:Declaring metric variables
2023-06-11 19:49:14,477:INFO:Importing untrained model
2023-06-11 19:49:14,482:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:49:14,491:INFO:Starting cross validation
2023-06-11 19:49:14,510:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:14,652:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:49:14,664:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:49:14,670:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:49:14,694:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:49:14,812:INFO:Calculating mean and std
2023-06-11 19:49:14,815:INFO:Creating metrics dataframe
2023-06-11 19:49:14,821:INFO:Uploading results into container
2023-06-11 19:49:14,822:INFO:Uploading model into container now
2023-06-11 19:49:14,823:INFO:master_model_container: 6
2023-06-11 19:49:14,823:INFO:display_container: 2
2023-06-11 19:49:14,823:INFO:LassoLars(random_state=123)
2023-06-11 19:49:14,823:INFO:create_model() successfully completed......................................
2023-06-11 19:49:15,191:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:15,191:INFO:Creating metrics dataframe
2023-06-11 19:49:15,205:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:49:15,205:INFO:Total runtime is 0.22715210914611816 minutes
2023-06-11 19:49:15,209:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:15,210:INFO:Initializing create_model()
2023-06-11 19:49:15,210:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=omp, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:15,210:INFO:Checking exceptions
2023-06-11 19:49:15,214:INFO:Importing libraries
2023-06-11 19:49:15,214:INFO:Copying training dataset
2023-06-11 19:49:15,220:INFO:Defining folds
2023-06-11 19:49:15,221:INFO:Declaring metric variables
2023-06-11 19:49:15,225:INFO:Importing untrained model
2023-06-11 19:49:15,230:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:49:15,240:INFO:Starting cross validation
2023-06-11 19:49:15,255:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:15,390:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:15,393:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:15,401:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:15,418:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:49:15,534:INFO:Calculating mean and std
2023-06-11 19:49:15,537:INFO:Creating metrics dataframe
2023-06-11 19:49:15,542:INFO:Uploading results into container
2023-06-11 19:49:15,543:INFO:Uploading model into container now
2023-06-11 19:49:15,544:INFO:master_model_container: 7
2023-06-11 19:49:15,544:INFO:display_container: 2
2023-06-11 19:49:15,545:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:49:15,545:INFO:create_model() successfully completed......................................
2023-06-11 19:49:15,899:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:15,899:INFO:Creating metrics dataframe
2023-06-11 19:49:15,912:INFO:Initializing Bayesian Ridge
2023-06-11 19:49:15,912:INFO:Total runtime is 0.23893479506174722 minutes
2023-06-11 19:49:15,916:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:15,917:INFO:Initializing create_model()
2023-06-11 19:49:15,917:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=br, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:15,917:INFO:Checking exceptions
2023-06-11 19:49:15,920:INFO:Importing libraries
2023-06-11 19:49:15,920:INFO:Copying training dataset
2023-06-11 19:49:15,926:INFO:Defining folds
2023-06-11 19:49:15,926:INFO:Declaring metric variables
2023-06-11 19:49:15,931:INFO:Importing untrained model
2023-06-11 19:49:15,936:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:49:15,948:INFO:Starting cross validation
2023-06-11 19:49:15,968:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:16,295:INFO:Calculating mean and std
2023-06-11 19:49:16,299:INFO:Creating metrics dataframe
2023-06-11 19:49:16,306:INFO:Uploading results into container
2023-06-11 19:49:16,308:INFO:Uploading model into container now
2023-06-11 19:49:16,309:INFO:master_model_container: 8
2023-06-11 19:49:16,309:INFO:display_container: 2
2023-06-11 19:49:16,310:INFO:BayesianRidge()
2023-06-11 19:49:16,310:INFO:create_model() successfully completed......................................
2023-06-11 19:49:16,646:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:16,646:INFO:Creating metrics dataframe
2023-06-11 19:49:16,657:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:49:16,657:INFO:Total runtime is 0.25135049819946287 minutes
2023-06-11 19:49:16,660:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:16,661:INFO:Initializing create_model()
2023-06-11 19:49:16,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=par, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:16,661:INFO:Checking exceptions
2023-06-11 19:49:16,664:INFO:Importing libraries
2023-06-11 19:49:16,664:INFO:Copying training dataset
2023-06-11 19:49:16,669:INFO:Defining folds
2023-06-11 19:49:16,669:INFO:Declaring metric variables
2023-06-11 19:49:16,674:INFO:Importing untrained model
2023-06-11 19:49:16,678:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:49:16,686:INFO:Starting cross validation
2023-06-11 19:49:16,702:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:16,905:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:49:16,919:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:49:16,947:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:49:16,971:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:49:17,080:INFO:Calculating mean and std
2023-06-11 19:49:17,083:INFO:Creating metrics dataframe
2023-06-11 19:49:17,088:INFO:Uploading results into container
2023-06-11 19:49:17,089:INFO:Uploading model into container now
2023-06-11 19:49:17,090:INFO:master_model_container: 9
2023-06-11 19:49:17,090:INFO:display_container: 2
2023-06-11 19:49:17,090:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:49:17,091:INFO:create_model() successfully completed......................................
2023-06-11 19:49:17,401:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:17,401:INFO:Creating metrics dataframe
2023-06-11 19:49:17,412:INFO:Initializing Huber Regressor
2023-06-11 19:49:17,412:INFO:Total runtime is 0.26394014755884804 minutes
2023-06-11 19:49:17,416:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:17,417:INFO:Initializing create_model()
2023-06-11 19:49:17,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=huber, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:17,417:INFO:Checking exceptions
2023-06-11 19:49:17,419:INFO:Importing libraries
2023-06-11 19:49:17,420:INFO:Copying training dataset
2023-06-11 19:49:17,424:INFO:Defining folds
2023-06-11 19:49:17,425:INFO:Declaring metric variables
2023-06-11 19:49:17,429:INFO:Importing untrained model
2023-06-11 19:49:17,433:INFO:Huber Regressor Imported successfully
2023-06-11 19:49:17,441:INFO:Starting cross validation
2023-06-11 19:49:17,458:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:17,747:INFO:Calculating mean and std
2023-06-11 19:49:17,749:INFO:Creating metrics dataframe
2023-06-11 19:49:17,755:INFO:Uploading results into container
2023-06-11 19:49:17,756:INFO:Uploading model into container now
2023-06-11 19:49:17,757:INFO:master_model_container: 10
2023-06-11 19:49:17,757:INFO:display_container: 2
2023-06-11 19:49:17,757:INFO:HuberRegressor()
2023-06-11 19:49:17,758:INFO:create_model() successfully completed......................................
2023-06-11 19:49:18,087:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:18,087:INFO:Creating metrics dataframe
2023-06-11 19:49:18,099:INFO:Initializing K Neighbors Regressor
2023-06-11 19:49:18,099:INFO:Total runtime is 0.2753888050715128 minutes
2023-06-11 19:49:18,104:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:18,105:INFO:Initializing create_model()
2023-06-11 19:49:18,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=knn, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:18,105:INFO:Checking exceptions
2023-06-11 19:49:18,108:INFO:Importing libraries
2023-06-11 19:49:18,108:INFO:Copying training dataset
2023-06-11 19:49:18,112:INFO:Defining folds
2023-06-11 19:49:18,113:INFO:Declaring metric variables
2023-06-11 19:49:18,116:INFO:Importing untrained model
2023-06-11 19:49:18,121:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:49:18,130:INFO:Starting cross validation
2023-06-11 19:49:18,148:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:18,448:INFO:Calculating mean and std
2023-06-11 19:49:18,451:INFO:Creating metrics dataframe
2023-06-11 19:49:18,456:INFO:Uploading results into container
2023-06-11 19:49:18,456:INFO:Uploading model into container now
2023-06-11 19:49:18,457:INFO:master_model_container: 11
2023-06-11 19:49:18,457:INFO:display_container: 2
2023-06-11 19:49:18,458:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:49:18,458:INFO:create_model() successfully completed......................................
2023-06-11 19:49:18,829:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:18,829:INFO:Creating metrics dataframe
2023-06-11 19:49:18,842:INFO:Initializing Decision Tree Regressor
2023-06-11 19:49:18,843:INFO:Total runtime is 0.2877759178479512 minutes
2023-06-11 19:49:18,848:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:18,849:INFO:Initializing create_model()
2023-06-11 19:49:18,849:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=dt, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:18,849:INFO:Checking exceptions
2023-06-11 19:49:18,852:INFO:Importing libraries
2023-06-11 19:49:18,852:INFO:Copying training dataset
2023-06-11 19:49:18,857:INFO:Defining folds
2023-06-11 19:49:18,857:INFO:Declaring metric variables
2023-06-11 19:49:18,861:INFO:Importing untrained model
2023-06-11 19:49:18,866:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:49:18,876:INFO:Starting cross validation
2023-06-11 19:49:18,891:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:19,176:INFO:Calculating mean and std
2023-06-11 19:49:19,178:INFO:Creating metrics dataframe
2023-06-11 19:49:19,182:INFO:Uploading results into container
2023-06-11 19:49:19,182:INFO:Uploading model into container now
2023-06-11 19:49:19,183:INFO:master_model_container: 12
2023-06-11 19:49:19,183:INFO:display_container: 2
2023-06-11 19:49:19,183:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:49:19,183:INFO:create_model() successfully completed......................................
2023-06-11 19:49:19,501:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:19,501:INFO:Creating metrics dataframe
2023-06-11 19:49:19,514:INFO:Initializing Random Forest Regressor
2023-06-11 19:49:19,514:INFO:Total runtime is 0.29897335767745964 minutes
2023-06-11 19:49:19,518:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:19,519:INFO:Initializing create_model()
2023-06-11 19:49:19,519:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=rf, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:19,519:INFO:Checking exceptions
2023-06-11 19:49:19,521:INFO:Importing libraries
2023-06-11 19:49:19,521:INFO:Copying training dataset
2023-06-11 19:49:19,527:INFO:Defining folds
2023-06-11 19:49:19,527:INFO:Declaring metric variables
2023-06-11 19:49:19,531:INFO:Importing untrained model
2023-06-11 19:49:19,536:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:49:19,547:INFO:Starting cross validation
2023-06-11 19:49:19,565:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:20,550:INFO:Calculating mean and std
2023-06-11 19:49:20,552:INFO:Creating metrics dataframe
2023-06-11 19:49:20,557:INFO:Uploading results into container
2023-06-11 19:49:20,558:INFO:Uploading model into container now
2023-06-11 19:49:20,558:INFO:master_model_container: 13
2023-06-11 19:49:20,559:INFO:display_container: 2
2023-06-11 19:49:20,559:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:49:20,559:INFO:create_model() successfully completed......................................
2023-06-11 19:49:20,887:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:20,887:INFO:Creating metrics dataframe
2023-06-11 19:49:20,899:INFO:Initializing Extra Trees Regressor
2023-06-11 19:49:20,900:INFO:Total runtime is 0.3220612923304239 minutes
2023-06-11 19:49:20,904:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:20,904:INFO:Initializing create_model()
2023-06-11 19:49:20,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=et, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:20,904:INFO:Checking exceptions
2023-06-11 19:49:20,907:INFO:Importing libraries
2023-06-11 19:49:20,907:INFO:Copying training dataset
2023-06-11 19:49:20,912:INFO:Defining folds
2023-06-11 19:49:20,912:INFO:Declaring metric variables
2023-06-11 19:49:20,917:INFO:Importing untrained model
2023-06-11 19:49:20,935:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:49:20,947:INFO:Starting cross validation
2023-06-11 19:49:20,966:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:21,591:INFO:Calculating mean and std
2023-06-11 19:49:21,594:INFO:Creating metrics dataframe
2023-06-11 19:49:21,598:INFO:Uploading results into container
2023-06-11 19:49:21,599:INFO:Uploading model into container now
2023-06-11 19:49:21,600:INFO:master_model_container: 14
2023-06-11 19:49:21,600:INFO:display_container: 2
2023-06-11 19:49:21,600:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:49:21,600:INFO:create_model() successfully completed......................................
2023-06-11 19:49:21,959:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:21,959:INFO:Creating metrics dataframe
2023-06-11 19:49:21,973:INFO:Initializing AdaBoost Regressor
2023-06-11 19:49:21,973:INFO:Total runtime is 0.33994917074839265 minutes
2023-06-11 19:49:21,977:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:21,978:INFO:Initializing create_model()
2023-06-11 19:49:21,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ada, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:21,978:INFO:Checking exceptions
2023-06-11 19:49:21,982:INFO:Importing libraries
2023-06-11 19:49:21,982:INFO:Copying training dataset
2023-06-11 19:49:21,988:INFO:Defining folds
2023-06-11 19:49:21,988:INFO:Declaring metric variables
2023-06-11 19:49:21,994:INFO:Importing untrained model
2023-06-11 19:49:22,000:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:49:22,013:INFO:Starting cross validation
2023-06-11 19:49:22,031:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:22,459:INFO:Calculating mean and std
2023-06-11 19:49:22,462:INFO:Creating metrics dataframe
2023-06-11 19:49:22,468:INFO:Uploading results into container
2023-06-11 19:49:22,469:INFO:Uploading model into container now
2023-06-11 19:49:22,469:INFO:master_model_container: 15
2023-06-11 19:49:22,469:INFO:display_container: 2
2023-06-11 19:49:22,470:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:49:22,470:INFO:create_model() successfully completed......................................
2023-06-11 19:49:22,806:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:22,806:INFO:Creating metrics dataframe
2023-06-11 19:49:22,818:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:49:22,818:INFO:Total runtime is 0.3540300448735554 minutes
2023-06-11 19:49:22,822:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:22,822:INFO:Initializing create_model()
2023-06-11 19:49:22,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=gbr, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:22,823:INFO:Checking exceptions
2023-06-11 19:49:22,825:INFO:Importing libraries
2023-06-11 19:49:22,825:INFO:Copying training dataset
2023-06-11 19:49:22,829:INFO:Defining folds
2023-06-11 19:49:22,830:INFO:Declaring metric variables
2023-06-11 19:49:22,834:INFO:Importing untrained model
2023-06-11 19:49:22,839:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:49:22,848:INFO:Starting cross validation
2023-06-11 19:49:22,869:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:23,523:INFO:Calculating mean and std
2023-06-11 19:49:23,526:INFO:Creating metrics dataframe
2023-06-11 19:49:23,531:INFO:Uploading results into container
2023-06-11 19:49:23,532:INFO:Uploading model into container now
2023-06-11 19:49:23,533:INFO:master_model_container: 16
2023-06-11 19:49:23,533:INFO:display_container: 2
2023-06-11 19:49:23,534:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:49:23,534:INFO:create_model() successfully completed......................................
2023-06-11 19:49:23,866:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:23,866:INFO:Creating metrics dataframe
2023-06-11 19:49:23,879:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:49:23,879:INFO:Total runtime is 0.3717155615488687 minutes
2023-06-11 19:49:23,883:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:23,884:INFO:Initializing create_model()
2023-06-11 19:49:23,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lightgbm, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:23,884:INFO:Checking exceptions
2023-06-11 19:49:23,887:INFO:Importing libraries
2023-06-11 19:49:23,887:INFO:Copying training dataset
2023-06-11 19:49:23,892:INFO:Defining folds
2023-06-11 19:49:23,892:INFO:Declaring metric variables
2023-06-11 19:49:23,897:INFO:Importing untrained model
2023-06-11 19:49:23,902:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:49:23,911:INFO:Starting cross validation
2023-06-11 19:49:23,929:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:24,356:INFO:Calculating mean and std
2023-06-11 19:49:24,358:INFO:Creating metrics dataframe
2023-06-11 19:49:24,364:INFO:Uploading results into container
2023-06-11 19:49:24,365:INFO:Uploading model into container now
2023-06-11 19:49:24,365:INFO:master_model_container: 17
2023-06-11 19:49:24,365:INFO:display_container: 2
2023-06-11 19:49:24,366:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:49:24,366:INFO:create_model() successfully completed......................................
2023-06-11 19:49:24,719:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:24,719:INFO:Creating metrics dataframe
2023-06-11 19:49:24,732:INFO:Initializing Dummy Regressor
2023-06-11 19:49:24,733:INFO:Total runtime is 0.385942510763804 minutes
2023-06-11 19:49:24,737:INFO:SubProcess create_model() called ==================================
2023-06-11 19:49:24,737:INFO:Initializing create_model()
2023-06-11 19:49:24,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=dummy, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036a3d1210>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:24,737:INFO:Checking exceptions
2023-06-11 19:49:24,740:INFO:Importing libraries
2023-06-11 19:49:24,740:INFO:Copying training dataset
2023-06-11 19:49:24,745:INFO:Defining folds
2023-06-11 19:49:24,745:INFO:Declaring metric variables
2023-06-11 19:49:24,751:INFO:Importing untrained model
2023-06-11 19:49:24,758:INFO:Dummy Regressor Imported successfully
2023-06-11 19:49:24,769:INFO:Starting cross validation
2023-06-11 19:49:24,784:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:49:25,079:INFO:Calculating mean and std
2023-06-11 19:49:25,081:INFO:Creating metrics dataframe
2023-06-11 19:49:25,086:INFO:Uploading results into container
2023-06-11 19:49:25,087:INFO:Uploading model into container now
2023-06-11 19:49:25,088:INFO:master_model_container: 18
2023-06-11 19:49:25,088:INFO:display_container: 2
2023-06-11 19:49:25,088:INFO:DummyRegressor()
2023-06-11 19:49:25,088:INFO:create_model() successfully completed......................................
2023-06-11 19:49:25,428:INFO:SubProcess create_model() end ==================================
2023-06-11 19:49:25,428:INFO:Creating metrics dataframe
2023-06-11 19:49:25,455:INFO:Initializing create_model()
2023-06-11 19:49:25,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:49:25,456:INFO:Checking exceptions
2023-06-11 19:49:25,461:INFO:Importing libraries
2023-06-11 19:49:25,461:INFO:Copying training dataset
2023-06-11 19:49:25,465:INFO:Defining folds
2023-06-11 19:49:25,465:INFO:Declaring metric variables
2023-06-11 19:49:25,466:INFO:Importing untrained model
2023-06-11 19:49:25,466:INFO:Declaring custom model
2023-06-11 19:49:25,466:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:49:25,482:INFO:Cross validation set to False
2023-06-11 19:49:25,483:INFO:Fitting Model
2023-06-11 19:49:25,601:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:49:25,602:INFO:create_model() successfully completed......................................
2023-06-11 19:49:26,015:INFO:master_model_container: 18
2023-06-11 19:49:26,015:INFO:display_container: 2
2023-06-11 19:49:26,016:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:49:26,016:INFO:compare_models() successfully completed......................................
2023-06-11 19:52:47,539:INFO:Initializing create_model()
2023-06-11 19:52:47,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:52:47,539:INFO:Checking exceptions
2023-06-11 19:52:47,625:INFO:Importing libraries
2023-06-11 19:52:47,625:INFO:Copying training dataset
2023-06-11 19:52:47,631:INFO:Defining folds
2023-06-11 19:52:47,631:INFO:Declaring metric variables
2023-06-11 19:52:47,636:INFO:Importing untrained model
2023-06-11 19:52:47,636:INFO:Declaring custom model
2023-06-11 19:52:47,642:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:52:47,652:INFO:Starting cross validation
2023-06-11 19:52:47,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:52:54,968:INFO:Calculating mean and std
2023-06-11 19:52:54,971:INFO:Creating metrics dataframe
2023-06-11 19:52:54,978:INFO:Finalizing model
2023-06-11 19:52:55,133:INFO:Uploading results into container
2023-06-11 19:52:55,134:INFO:Uploading model into container now
2023-06-11 19:52:55,148:INFO:master_model_container: 19
2023-06-11 19:52:55,148:INFO:display_container: 3
2023-06-11 19:52:55,149:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:52:55,149:INFO:create_model() successfully completed......................................
2023-06-11 19:53:45,400:INFO:Initializing create_model()
2023-06-11 19:53:45,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:53:45,401:INFO:Checking exceptions
2023-06-11 19:53:45,466:INFO:Importing libraries
2023-06-11 19:53:45,466:INFO:Copying training dataset
2023-06-11 19:53:45,476:INFO:Defining folds
2023-06-11 19:53:45,476:INFO:Declaring metric variables
2023-06-11 19:53:45,484:INFO:Importing untrained model
2023-06-11 19:53:45,492:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:53:45,504:INFO:Starting cross validation
2023-06-11 19:53:45,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:53:46,268:INFO:Calculating mean and std
2023-06-11 19:53:46,269:INFO:Creating metrics dataframe
2023-06-11 19:53:46,281:INFO:Finalizing model
2023-06-11 19:53:46,502:INFO:Uploading results into container
2023-06-11 19:53:46,504:INFO:Uploading model into container now
2023-06-11 19:53:46,516:INFO:master_model_container: 20
2023-06-11 19:53:46,516:INFO:display_container: 4
2023-06-11 19:53:46,517:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:53:46,517:INFO:create_model() successfully completed......................................
2023-06-11 19:54:36,771:INFO:Initializing create_model()
2023-06-11 19:54:36,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ada, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:54:36,771:INFO:Checking exceptions
2023-06-11 19:54:36,842:INFO:Importing libraries
2023-06-11 19:54:36,842:INFO:Copying training dataset
2023-06-11 19:54:36,853:INFO:Defining folds
2023-06-11 19:54:36,853:INFO:Declaring metric variables
2023-06-11 19:54:36,863:INFO:Importing untrained model
2023-06-11 19:54:36,873:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:54:36,883:INFO:Starting cross validation
2023-06-11 19:54:36,902:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:54:40,552:INFO:Calculating mean and std
2023-06-11 19:54:40,555:INFO:Creating metrics dataframe
2023-06-11 19:54:40,566:INFO:Finalizing model
2023-06-11 19:54:40,747:INFO:Uploading results into container
2023-06-11 19:54:40,748:INFO:Uploading model into container now
2023-06-11 19:54:40,760:INFO:master_model_container: 21
2023-06-11 19:54:40,760:INFO:display_container: 5
2023-06-11 19:54:40,761:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:54:40,761:INFO:create_model() successfully completed......................................
2023-06-11 19:54:55,113:INFO:Initializing compare_models()
2023-06-11 19:54:55,113:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, include=None, fold=10, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:54:55,113:INFO:Checking exceptions
2023-06-11 19:54:55,120:INFO:Preparing display monitor
2023-06-11 19:54:55,200:INFO:Initializing Linear Regression
2023-06-11 19:54:55,201:INFO:Total runtime is 8.352597554524739e-06 minutes
2023-06-11 19:54:55,208:INFO:SubProcess create_model() called ==================================
2023-06-11 19:54:55,208:INFO:Initializing create_model()
2023-06-11 19:54:55,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:54:55,209:INFO:Checking exceptions
2023-06-11 19:54:55,213:INFO:Importing libraries
2023-06-11 19:54:55,213:INFO:Copying training dataset
2023-06-11 19:54:55,218:INFO:Defining folds
2023-06-11 19:54:55,218:INFO:Declaring metric variables
2023-06-11 19:54:55,224:INFO:Importing untrained model
2023-06-11 19:54:55,229:INFO:Linear Regression Imported successfully
2023-06-11 19:54:55,238:INFO:Starting cross validation
2023-06-11 19:54:55,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:54:55,857:INFO:Calculating mean and std
2023-06-11 19:54:55,858:INFO:Creating metrics dataframe
2023-06-11 19:54:55,863:INFO:Uploading results into container
2023-06-11 19:54:55,863:INFO:Uploading model into container now
2023-06-11 19:54:55,864:INFO:master_model_container: 22
2023-06-11 19:54:55,864:INFO:display_container: 6
2023-06-11 19:54:55,864:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:54:55,864:INFO:create_model() successfully completed......................................
2023-06-11 19:54:56,220:INFO:SubProcess create_model() end ==================================
2023-06-11 19:54:56,220:INFO:Creating metrics dataframe
2023-06-11 19:54:56,229:INFO:Initializing Lasso Regression
2023-06-11 19:54:56,230:INFO:Total runtime is 0.017157129446665448 minutes
2023-06-11 19:54:56,235:INFO:SubProcess create_model() called ==================================
2023-06-11 19:54:56,236:INFO:Initializing create_model()
2023-06-11 19:54:56,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:54:56,236:INFO:Checking exceptions
2023-06-11 19:54:56,238:INFO:Importing libraries
2023-06-11 19:54:56,238:INFO:Copying training dataset
2023-06-11 19:54:56,243:INFO:Defining folds
2023-06-11 19:54:56,243:INFO:Declaring metric variables
2023-06-11 19:54:56,248:INFO:Importing untrained model
2023-06-11 19:54:56,253:INFO:Lasso Regression Imported successfully
2023-06-11 19:54:56,264:INFO:Starting cross validation
2023-06-11 19:54:56,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:54:56,940:INFO:Calculating mean and std
2023-06-11 19:54:56,943:INFO:Creating metrics dataframe
2023-06-11 19:54:56,949:INFO:Uploading results into container
2023-06-11 19:54:56,950:INFO:Uploading model into container now
2023-06-11 19:54:56,951:INFO:master_model_container: 23
2023-06-11 19:54:56,952:INFO:display_container: 6
2023-06-11 19:54:56,952:INFO:Lasso(random_state=123)
2023-06-11 19:54:56,952:INFO:create_model() successfully completed......................................
2023-06-11 19:54:57,281:INFO:SubProcess create_model() end ==================================
2023-06-11 19:54:57,281:INFO:Creating metrics dataframe
2023-06-11 19:54:57,290:INFO:Initializing Ridge Regression
2023-06-11 19:54:57,290:INFO:Total runtime is 0.034824824333190924 minutes
2023-06-11 19:54:57,294:INFO:SubProcess create_model() called ==================================
2023-06-11 19:54:57,294:INFO:Initializing create_model()
2023-06-11 19:54:57,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:54:57,294:INFO:Checking exceptions
2023-06-11 19:54:57,297:INFO:Importing libraries
2023-06-11 19:54:57,297:INFO:Copying training dataset
2023-06-11 19:54:57,301:INFO:Defining folds
2023-06-11 19:54:57,302:INFO:Declaring metric variables
2023-06-11 19:54:57,306:INFO:Importing untrained model
2023-06-11 19:54:57,309:INFO:Ridge Regression Imported successfully
2023-06-11 19:54:57,317:INFO:Starting cross validation
2023-06-11 19:54:57,336:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:54:57,950:INFO:Calculating mean and std
2023-06-11 19:54:57,953:INFO:Creating metrics dataframe
2023-06-11 19:54:57,962:INFO:Uploading results into container
2023-06-11 19:54:57,964:INFO:Uploading model into container now
2023-06-11 19:54:57,965:INFO:master_model_container: 24
2023-06-11 19:54:57,965:INFO:display_container: 6
2023-06-11 19:54:57,966:INFO:Ridge(random_state=123)
2023-06-11 19:54:57,966:INFO:create_model() successfully completed......................................
2023-06-11 19:54:58,323:INFO:SubProcess create_model() end ==================================
2023-06-11 19:54:58,323:INFO:Creating metrics dataframe
2023-06-11 19:54:58,333:INFO:Initializing Elastic Net
2023-06-11 19:54:58,333:INFO:Total runtime is 0.05220922231674195 minutes
2023-06-11 19:54:58,338:INFO:SubProcess create_model() called ==================================
2023-06-11 19:54:58,338:INFO:Initializing create_model()
2023-06-11 19:54:58,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:54:58,338:INFO:Checking exceptions
2023-06-11 19:54:58,341:INFO:Importing libraries
2023-06-11 19:54:58,341:INFO:Copying training dataset
2023-06-11 19:54:58,346:INFO:Defining folds
2023-06-11 19:54:58,347:INFO:Declaring metric variables
2023-06-11 19:54:58,351:INFO:Importing untrained model
2023-06-11 19:54:58,356:INFO:Elastic Net Imported successfully
2023-06-11 19:54:58,364:INFO:Starting cross validation
2023-06-11 19:54:58,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:54:59,003:INFO:Calculating mean and std
2023-06-11 19:54:59,006:INFO:Creating metrics dataframe
2023-06-11 19:54:59,012:INFO:Uploading results into container
2023-06-11 19:54:59,013:INFO:Uploading model into container now
2023-06-11 19:54:59,013:INFO:master_model_container: 25
2023-06-11 19:54:59,013:INFO:display_container: 6
2023-06-11 19:54:59,014:INFO:ElasticNet(random_state=123)
2023-06-11 19:54:59,014:INFO:create_model() successfully completed......................................
2023-06-11 19:54:59,326:INFO:SubProcess create_model() end ==================================
2023-06-11 19:54:59,326:INFO:Creating metrics dataframe
2023-06-11 19:54:59,337:INFO:Initializing Least Angle Regression
2023-06-11 19:54:59,338:INFO:Total runtime is 0.0689530889193217 minutes
2023-06-11 19:54:59,341:INFO:SubProcess create_model() called ==================================
2023-06-11 19:54:59,341:INFO:Initializing create_model()
2023-06-11 19:54:59,341:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:54:59,342:INFO:Checking exceptions
2023-06-11 19:54:59,344:INFO:Importing libraries
2023-06-11 19:54:59,344:INFO:Copying training dataset
2023-06-11 19:54:59,349:INFO:Defining folds
2023-06-11 19:54:59,350:INFO:Declaring metric variables
2023-06-11 19:54:59,354:INFO:Importing untrained model
2023-06-11 19:54:59,358:INFO:Least Angle Regression Imported successfully
2023-06-11 19:54:59,366:INFO:Starting cross validation
2023-06-11 19:54:59,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:54:59,582:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,593:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,600:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,615:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,624:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,656:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,671:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,683:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,890:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,897:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:54:59,992:INFO:Calculating mean and std
2023-06-11 19:54:59,997:INFO:Creating metrics dataframe
2023-06-11 19:55:00,007:INFO:Uploading results into container
2023-06-11 19:55:00,008:INFO:Uploading model into container now
2023-06-11 19:55:00,009:INFO:master_model_container: 26
2023-06-11 19:55:00,009:INFO:display_container: 6
2023-06-11 19:55:00,010:INFO:Lars(random_state=123)
2023-06-11 19:55:00,010:INFO:create_model() successfully completed......................................
2023-06-11 19:55:00,366:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:00,366:INFO:Creating metrics dataframe
2023-06-11 19:55:00,376:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:55:00,377:INFO:Total runtime is 0.08627046744028727 minutes
2023-06-11 19:55:00,381:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:00,381:INFO:Initializing create_model()
2023-06-11 19:55:00,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:00,381:INFO:Checking exceptions
2023-06-11 19:55:00,384:INFO:Importing libraries
2023-06-11 19:55:00,384:INFO:Copying training dataset
2023-06-11 19:55:00,389:INFO:Defining folds
2023-06-11 19:55:00,390:INFO:Declaring metric variables
2023-06-11 19:55:00,394:INFO:Importing untrained model
2023-06-11 19:55:00,398:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:55:00,406:INFO:Starting cross validation
2023-06-11 19:55:00,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:00,610:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,642:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,644:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,650:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,659:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,698:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,705:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,714:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,929:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:00,942:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:01,035:INFO:Calculating mean and std
2023-06-11 19:55:01,037:INFO:Creating metrics dataframe
2023-06-11 19:55:01,042:INFO:Uploading results into container
2023-06-11 19:55:01,043:INFO:Uploading model into container now
2023-06-11 19:55:01,044:INFO:master_model_container: 27
2023-06-11 19:55:01,045:INFO:display_container: 6
2023-06-11 19:55:01,045:INFO:LassoLars(random_state=123)
2023-06-11 19:55:01,045:INFO:create_model() successfully completed......................................
2023-06-11 19:55:01,370:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:01,370:INFO:Creating metrics dataframe
2023-06-11 19:55:01,380:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:55:01,381:INFO:Total runtime is 0.10300419727961221 minutes
2023-06-11 19:55:01,384:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:01,385:INFO:Initializing create_model()
2023-06-11 19:55:01,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:01,385:INFO:Checking exceptions
2023-06-11 19:55:01,388:INFO:Importing libraries
2023-06-11 19:55:01,388:INFO:Copying training dataset
2023-06-11 19:55:01,394:INFO:Defining folds
2023-06-11 19:55:01,394:INFO:Declaring metric variables
2023-06-11 19:55:01,400:INFO:Importing untrained model
2023-06-11 19:55:01,405:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:55:01,415:INFO:Starting cross validation
2023-06-11 19:55:01,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:01,628:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,645:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,647:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,657:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,687:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,689:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,711:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,715:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,937:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:01,937:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:02,035:INFO:Calculating mean and std
2023-06-11 19:55:02,039:INFO:Creating metrics dataframe
2023-06-11 19:55:02,048:INFO:Uploading results into container
2023-06-11 19:55:02,050:INFO:Uploading model into container now
2023-06-11 19:55:02,051:INFO:master_model_container: 28
2023-06-11 19:55:02,051:INFO:display_container: 6
2023-06-11 19:55:02,052:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:55:02,052:INFO:create_model() successfully completed......................................
2023-06-11 19:55:02,393:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:02,393:INFO:Creating metrics dataframe
2023-06-11 19:55:02,404:INFO:Initializing Bayesian Ridge
2023-06-11 19:55:02,404:INFO:Total runtime is 0.12006154060363769 minutes
2023-06-11 19:55:02,407:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:02,408:INFO:Initializing create_model()
2023-06-11 19:55:02,408:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:02,408:INFO:Checking exceptions
2023-06-11 19:55:02,411:INFO:Importing libraries
2023-06-11 19:55:02,411:INFO:Copying training dataset
2023-06-11 19:55:02,416:INFO:Defining folds
2023-06-11 19:55:02,417:INFO:Declaring metric variables
2023-06-11 19:55:02,421:INFO:Importing untrained model
2023-06-11 19:55:02,425:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:55:02,434:INFO:Starting cross validation
2023-06-11 19:55:02,452:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:03,080:INFO:Calculating mean and std
2023-06-11 19:55:03,083:INFO:Creating metrics dataframe
2023-06-11 19:55:03,091:INFO:Uploading results into container
2023-06-11 19:55:03,093:INFO:Uploading model into container now
2023-06-11 19:55:03,094:INFO:master_model_container: 29
2023-06-11 19:55:03,095:INFO:display_container: 6
2023-06-11 19:55:03,096:INFO:BayesianRidge()
2023-06-11 19:55:03,096:INFO:create_model() successfully completed......................................
2023-06-11 19:55:03,437:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:03,437:INFO:Creating metrics dataframe
2023-06-11 19:55:03,449:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:55:03,449:INFO:Total runtime is 0.13748342990875242 minutes
2023-06-11 19:55:03,454:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:03,454:INFO:Initializing create_model()
2023-06-11 19:55:03,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:03,455:INFO:Checking exceptions
2023-06-11 19:55:03,458:INFO:Importing libraries
2023-06-11 19:55:03,458:INFO:Copying training dataset
2023-06-11 19:55:03,462:INFO:Defining folds
2023-06-11 19:55:03,463:INFO:Declaring metric variables
2023-06-11 19:55:03,467:INFO:Importing untrained model
2023-06-11 19:55:03,473:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:55:03,484:INFO:Starting cross validation
2023-06-11 19:55:03,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:03,871:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:03,878:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:03,882:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:03,895:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:03,897:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:03,898:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:03,909:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:03,987:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:04,251:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:04,259:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:04,352:INFO:Calculating mean and std
2023-06-11 19:55:04,354:INFO:Creating metrics dataframe
2023-06-11 19:55:04,358:INFO:Uploading results into container
2023-06-11 19:55:04,359:INFO:Uploading model into container now
2023-06-11 19:55:04,359:INFO:master_model_container: 30
2023-06-11 19:55:04,360:INFO:display_container: 6
2023-06-11 19:55:04,360:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:55:04,360:INFO:create_model() successfully completed......................................
2023-06-11 19:55:04,692:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:04,692:INFO:Creating metrics dataframe
2023-06-11 19:55:04,705:INFO:Initializing Huber Regressor
2023-06-11 19:55:04,706:INFO:Total runtime is 0.15842145681381223 minutes
2023-06-11 19:55:04,712:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:04,713:INFO:Initializing create_model()
2023-06-11 19:55:04,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:04,713:INFO:Checking exceptions
2023-06-11 19:55:04,717:INFO:Importing libraries
2023-06-11 19:55:04,717:INFO:Copying training dataset
2023-06-11 19:55:04,723:INFO:Defining folds
2023-06-11 19:55:04,724:INFO:Declaring metric variables
2023-06-11 19:55:04,728:INFO:Importing untrained model
2023-06-11 19:55:04,733:INFO:Huber Regressor Imported successfully
2023-06-11 19:55:04,743:INFO:Starting cross validation
2023-06-11 19:55:04,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:05,372:INFO:Calculating mean and std
2023-06-11 19:55:05,376:INFO:Creating metrics dataframe
2023-06-11 19:55:05,385:INFO:Uploading results into container
2023-06-11 19:55:05,387:INFO:Uploading model into container now
2023-06-11 19:55:05,388:INFO:master_model_container: 31
2023-06-11 19:55:05,388:INFO:display_container: 6
2023-06-11 19:55:05,389:INFO:HuberRegressor()
2023-06-11 19:55:05,389:INFO:create_model() successfully completed......................................
2023-06-11 19:55:05,743:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:05,743:INFO:Creating metrics dataframe
2023-06-11 19:55:05,754:INFO:Initializing K Neighbors Regressor
2023-06-11 19:55:05,754:INFO:Total runtime is 0.17589360872904458 minutes
2023-06-11 19:55:05,758:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:05,759:INFO:Initializing create_model()
2023-06-11 19:55:05,759:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:05,759:INFO:Checking exceptions
2023-06-11 19:55:05,762:INFO:Importing libraries
2023-06-11 19:55:05,762:INFO:Copying training dataset
2023-06-11 19:55:05,767:INFO:Defining folds
2023-06-11 19:55:05,767:INFO:Declaring metric variables
2023-06-11 19:55:05,771:INFO:Importing untrained model
2023-06-11 19:55:05,778:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:55:05,789:INFO:Starting cross validation
2023-06-11 19:55:05,804:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:06,449:INFO:Calculating mean and std
2023-06-11 19:55:06,452:INFO:Creating metrics dataframe
2023-06-11 19:55:06,458:INFO:Uploading results into container
2023-06-11 19:55:06,458:INFO:Uploading model into container now
2023-06-11 19:55:06,459:INFO:master_model_container: 32
2023-06-11 19:55:06,459:INFO:display_container: 6
2023-06-11 19:55:06,459:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:55:06,459:INFO:create_model() successfully completed......................................
2023-06-11 19:55:06,795:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:06,795:INFO:Creating metrics dataframe
2023-06-11 19:55:06,809:INFO:Initializing Decision Tree Regressor
2023-06-11 19:55:06,809:INFO:Total runtime is 0.19347707033157346 minutes
2023-06-11 19:55:06,813:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:06,814:INFO:Initializing create_model()
2023-06-11 19:55:06,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:06,814:INFO:Checking exceptions
2023-06-11 19:55:06,817:INFO:Importing libraries
2023-06-11 19:55:06,817:INFO:Copying training dataset
2023-06-11 19:55:06,821:INFO:Defining folds
2023-06-11 19:55:06,822:INFO:Declaring metric variables
2023-06-11 19:55:06,826:INFO:Importing untrained model
2023-06-11 19:55:06,831:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:55:06,839:INFO:Starting cross validation
2023-06-11 19:55:06,855:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:07,502:INFO:Calculating mean and std
2023-06-11 19:55:07,504:INFO:Creating metrics dataframe
2023-06-11 19:55:07,511:INFO:Uploading results into container
2023-06-11 19:55:07,513:INFO:Uploading model into container now
2023-06-11 19:55:07,514:INFO:master_model_container: 33
2023-06-11 19:55:07,514:INFO:display_container: 6
2023-06-11 19:55:07,514:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:55:07,515:INFO:create_model() successfully completed......................................
2023-06-11 19:55:07,847:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:07,847:INFO:Creating metrics dataframe
2023-06-11 19:55:07,859:INFO:Initializing Random Forest Regressor
2023-06-11 19:55:07,859:INFO:Total runtime is 0.2109813332557678 minutes
2023-06-11 19:55:07,863:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:07,863:INFO:Initializing create_model()
2023-06-11 19:55:07,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:07,863:INFO:Checking exceptions
2023-06-11 19:55:07,866:INFO:Importing libraries
2023-06-11 19:55:07,866:INFO:Copying training dataset
2023-06-11 19:55:07,870:INFO:Defining folds
2023-06-11 19:55:07,871:INFO:Declaring metric variables
2023-06-11 19:55:07,875:INFO:Importing untrained model
2023-06-11 19:55:07,880:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:55:07,892:INFO:Starting cross validation
2023-06-11 19:55:07,910:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:10,475:INFO:Calculating mean and std
2023-06-11 19:55:10,477:INFO:Creating metrics dataframe
2023-06-11 19:55:10,483:INFO:Uploading results into container
2023-06-11 19:55:10,484:INFO:Uploading model into container now
2023-06-11 19:55:10,485:INFO:master_model_container: 34
2023-06-11 19:55:10,485:INFO:display_container: 6
2023-06-11 19:55:10,485:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:55:10,485:INFO:create_model() successfully completed......................................
2023-06-11 19:55:10,821:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:10,821:INFO:Creating metrics dataframe
2023-06-11 19:55:10,833:INFO:Initializing Extra Trees Regressor
2023-06-11 19:55:10,833:INFO:Total runtime is 0.26054217815399167 minutes
2023-06-11 19:55:10,837:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:10,837:INFO:Initializing create_model()
2023-06-11 19:55:10,838:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:10,838:INFO:Checking exceptions
2023-06-11 19:55:10,841:INFO:Importing libraries
2023-06-11 19:55:10,842:INFO:Copying training dataset
2023-06-11 19:55:10,848:INFO:Defining folds
2023-06-11 19:55:10,849:INFO:Declaring metric variables
2023-06-11 19:55:10,854:INFO:Importing untrained model
2023-06-11 19:55:10,860:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:55:10,869:INFO:Starting cross validation
2023-06-11 19:55:10,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:12,358:INFO:Calculating mean and std
2023-06-11 19:55:12,360:INFO:Creating metrics dataframe
2023-06-11 19:55:12,364:INFO:Uploading results into container
2023-06-11 19:55:12,365:INFO:Uploading model into container now
2023-06-11 19:55:12,366:INFO:master_model_container: 35
2023-06-11 19:55:12,366:INFO:display_container: 6
2023-06-11 19:55:12,366:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:55:12,367:INFO:create_model() successfully completed......................................
2023-06-11 19:55:12,715:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:12,715:INFO:Creating metrics dataframe
2023-06-11 19:55:12,728:INFO:Initializing AdaBoost Regressor
2023-06-11 19:55:12,728:INFO:Total runtime is 0.2921300371487935 minutes
2023-06-11 19:55:12,732:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:12,733:INFO:Initializing create_model()
2023-06-11 19:55:12,733:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:12,733:INFO:Checking exceptions
2023-06-11 19:55:12,735:INFO:Importing libraries
2023-06-11 19:55:12,736:INFO:Copying training dataset
2023-06-11 19:55:12,740:INFO:Defining folds
2023-06-11 19:55:12,740:INFO:Declaring metric variables
2023-06-11 19:55:12,744:INFO:Importing untrained model
2023-06-11 19:55:12,750:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:55:12,762:INFO:Starting cross validation
2023-06-11 19:55:12,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:13,540:INFO:Calculating mean and std
2023-06-11 19:55:13,544:INFO:Creating metrics dataframe
2023-06-11 19:55:13,553:INFO:Uploading results into container
2023-06-11 19:55:13,554:INFO:Uploading model into container now
2023-06-11 19:55:13,555:INFO:master_model_container: 36
2023-06-11 19:55:13,555:INFO:display_container: 6
2023-06-11 19:55:13,556:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:55:13,556:INFO:create_model() successfully completed......................................
2023-06-11 19:55:13,908:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:13,908:INFO:Creating metrics dataframe
2023-06-11 19:55:13,922:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:55:13,922:INFO:Total runtime is 0.3120260953903198 minutes
2023-06-11 19:55:13,926:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:13,926:INFO:Initializing create_model()
2023-06-11 19:55:13,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:13,926:INFO:Checking exceptions
2023-06-11 19:55:13,930:INFO:Importing libraries
2023-06-11 19:55:13,930:INFO:Copying training dataset
2023-06-11 19:55:13,937:INFO:Defining folds
2023-06-11 19:55:13,937:INFO:Declaring metric variables
2023-06-11 19:55:13,943:INFO:Importing untrained model
2023-06-11 19:55:13,950:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:55:13,962:INFO:Starting cross validation
2023-06-11 19:55:13,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:15,466:INFO:Calculating mean and std
2023-06-11 19:55:15,469:INFO:Creating metrics dataframe
2023-06-11 19:55:15,479:INFO:Uploading results into container
2023-06-11 19:55:15,481:INFO:Uploading model into container now
2023-06-11 19:55:15,482:INFO:master_model_container: 37
2023-06-11 19:55:15,482:INFO:display_container: 6
2023-06-11 19:55:15,483:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:55:15,483:INFO:create_model() successfully completed......................................
2023-06-11 19:55:15,826:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:15,826:INFO:Creating metrics dataframe
2023-06-11 19:55:15,839:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:55:15,839:INFO:Total runtime is 0.34397922356923416 minutes
2023-06-11 19:55:15,843:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:15,843:INFO:Initializing create_model()
2023-06-11 19:55:15,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:15,843:INFO:Checking exceptions
2023-06-11 19:55:15,846:INFO:Importing libraries
2023-06-11 19:55:15,846:INFO:Copying training dataset
2023-06-11 19:55:15,851:INFO:Defining folds
2023-06-11 19:55:15,852:INFO:Declaring metric variables
2023-06-11 19:55:15,856:INFO:Importing untrained model
2023-06-11 19:55:15,861:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:55:15,869:INFO:Starting cross validation
2023-06-11 19:55:15,903:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:16,840:INFO:Calculating mean and std
2023-06-11 19:55:16,842:INFO:Creating metrics dataframe
2023-06-11 19:55:16,847:INFO:Uploading results into container
2023-06-11 19:55:16,848:INFO:Uploading model into container now
2023-06-11 19:55:16,848:INFO:master_model_container: 38
2023-06-11 19:55:16,849:INFO:display_container: 6
2023-06-11 19:55:16,849:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:55:16,849:INFO:create_model() successfully completed......................................
2023-06-11 19:55:17,179:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:17,179:INFO:Creating metrics dataframe
2023-06-11 19:55:17,191:INFO:Initializing Dummy Regressor
2023-06-11 19:55:17,191:INFO:Total runtime is 0.3665142973264058 minutes
2023-06-11 19:55:17,195:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:17,195:INFO:Initializing create_model()
2023-06-11 19:55:17,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f03704b5cf0>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:17,195:INFO:Checking exceptions
2023-06-11 19:55:17,198:INFO:Importing libraries
2023-06-11 19:55:17,198:INFO:Copying training dataset
2023-06-11 19:55:17,202:INFO:Defining folds
2023-06-11 19:55:17,203:INFO:Declaring metric variables
2023-06-11 19:55:17,207:INFO:Importing untrained model
2023-06-11 19:55:17,210:INFO:Dummy Regressor Imported successfully
2023-06-11 19:55:17,218:INFO:Starting cross validation
2023-06-11 19:55:17,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:17,851:INFO:Calculating mean and std
2023-06-11 19:55:17,854:INFO:Creating metrics dataframe
2023-06-11 19:55:17,864:INFO:Uploading results into container
2023-06-11 19:55:17,866:INFO:Uploading model into container now
2023-06-11 19:55:17,867:INFO:master_model_container: 39
2023-06-11 19:55:17,867:INFO:display_container: 6
2023-06-11 19:55:17,867:INFO:DummyRegressor()
2023-06-11 19:55:17,868:INFO:create_model() successfully completed......................................
2023-06-11 19:55:18,227:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:18,228:INFO:Creating metrics dataframe
2023-06-11 19:55:18,253:INFO:Initializing create_model()
2023-06-11 19:55:18,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:18,253:INFO:Checking exceptions
2023-06-11 19:55:18,258:INFO:Importing libraries
2023-06-11 19:55:18,258:INFO:Copying training dataset
2023-06-11 19:55:18,261:INFO:Defining folds
2023-06-11 19:55:18,262:INFO:Declaring metric variables
2023-06-11 19:55:18,262:INFO:Importing untrained model
2023-06-11 19:55:18,262:INFO:Declaring custom model
2023-06-11 19:55:18,262:INFO:Huber Regressor Imported successfully
2023-06-11 19:55:18,277:INFO:Cross validation set to False
2023-06-11 19:55:18,277:INFO:Fitting Model
2023-06-11 19:55:18,390:INFO:HuberRegressor()
2023-06-11 19:55:18,390:INFO:create_model() successfully completed......................................
2023-06-11 19:55:18,776:INFO:master_model_container: 39
2023-06-11 19:55:18,776:INFO:display_container: 6
2023-06-11 19:55:18,776:INFO:HuberRegressor()
2023-06-11 19:55:18,776:INFO:compare_models() successfully completed......................................
2023-06-11 19:55:23,656:INFO:Initializing compare_models()
2023-06-11 19:55:23,656:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, include=None, fold=4, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, 'include': None, 'exclude': None, 'fold': 4, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-11 19:55:23,656:INFO:Checking exceptions
2023-06-11 19:55:23,663:INFO:Preparing display monitor
2023-06-11 19:55:23,746:INFO:Initializing Linear Regression
2023-06-11 19:55:23,746:INFO:Total runtime is 4.712740580240885e-06 minutes
2023-06-11 19:55:23,751:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:23,751:INFO:Initializing create_model()
2023-06-11 19:55:23,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lr, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:23,751:INFO:Checking exceptions
2023-06-11 19:55:23,754:INFO:Importing libraries
2023-06-11 19:55:23,754:INFO:Copying training dataset
2023-06-11 19:55:23,757:INFO:Defining folds
2023-06-11 19:55:23,758:INFO:Declaring metric variables
2023-06-11 19:55:23,761:INFO:Importing untrained model
2023-06-11 19:55:23,769:INFO:Linear Regression Imported successfully
2023-06-11 19:55:23,780:INFO:Starting cross validation
2023-06-11 19:55:23,796:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:24,078:INFO:Calculating mean and std
2023-06-11 19:55:24,079:INFO:Creating metrics dataframe
2023-06-11 19:55:24,084:INFO:Uploading results into container
2023-06-11 19:55:24,085:INFO:Uploading model into container now
2023-06-11 19:55:24,085:INFO:master_model_container: 40
2023-06-11 19:55:24,085:INFO:display_container: 7
2023-06-11 19:55:24,086:INFO:LinearRegression(n_jobs=-1)
2023-06-11 19:55:24,086:INFO:create_model() successfully completed......................................
2023-06-11 19:55:24,457:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:24,457:INFO:Creating metrics dataframe
2023-06-11 19:55:24,467:INFO:Initializing Lasso Regression
2023-06-11 19:55:24,467:INFO:Total runtime is 0.012015195687611899 minutes
2023-06-11 19:55:24,471:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:24,472:INFO:Initializing create_model()
2023-06-11 19:55:24,472:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lasso, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:24,472:INFO:Checking exceptions
2023-06-11 19:55:24,476:INFO:Importing libraries
2023-06-11 19:55:24,476:INFO:Copying training dataset
2023-06-11 19:55:24,480:INFO:Defining folds
2023-06-11 19:55:24,480:INFO:Declaring metric variables
2023-06-11 19:55:24,484:INFO:Importing untrained model
2023-06-11 19:55:24,489:INFO:Lasso Regression Imported successfully
2023-06-11 19:55:24,498:INFO:Starting cross validation
2023-06-11 19:55:24,515:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:24,847:INFO:Calculating mean and std
2023-06-11 19:55:24,849:INFO:Creating metrics dataframe
2023-06-11 19:55:24,854:INFO:Uploading results into container
2023-06-11 19:55:24,855:INFO:Uploading model into container now
2023-06-11 19:55:24,856:INFO:master_model_container: 41
2023-06-11 19:55:24,856:INFO:display_container: 7
2023-06-11 19:55:24,856:INFO:Lasso(random_state=123)
2023-06-11 19:55:24,857:INFO:create_model() successfully completed......................................
2023-06-11 19:55:25,238:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:25,238:INFO:Creating metrics dataframe
2023-06-11 19:55:25,249:INFO:Initializing Ridge Regression
2023-06-11 19:55:25,249:INFO:Total runtime is 0.02504424254099528 minutes
2023-06-11 19:55:25,252:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:25,253:INFO:Initializing create_model()
2023-06-11 19:55:25,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ridge, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:25,253:INFO:Checking exceptions
2023-06-11 19:55:25,256:INFO:Importing libraries
2023-06-11 19:55:25,256:INFO:Copying training dataset
2023-06-11 19:55:25,262:INFO:Defining folds
2023-06-11 19:55:25,262:INFO:Declaring metric variables
2023-06-11 19:55:25,265:INFO:Importing untrained model
2023-06-11 19:55:25,270:INFO:Ridge Regression Imported successfully
2023-06-11 19:55:25,280:INFO:Starting cross validation
2023-06-11 19:55:25,297:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:25,614:INFO:Calculating mean and std
2023-06-11 19:55:25,617:INFO:Creating metrics dataframe
2023-06-11 19:55:25,629:INFO:Uploading results into container
2023-06-11 19:55:25,631:INFO:Uploading model into container now
2023-06-11 19:55:25,632:INFO:master_model_container: 42
2023-06-11 19:55:25,632:INFO:display_container: 7
2023-06-11 19:55:25,632:INFO:Ridge(random_state=123)
2023-06-11 19:55:25,633:INFO:create_model() successfully completed......................................
2023-06-11 19:55:25,968:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:25,968:INFO:Creating metrics dataframe
2023-06-11 19:55:25,978:INFO:Initializing Elastic Net
2023-06-11 19:55:25,978:INFO:Total runtime is 0.037198972702026364 minutes
2023-06-11 19:55:25,982:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:25,983:INFO:Initializing create_model()
2023-06-11 19:55:25,983:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=en, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:25,983:INFO:Checking exceptions
2023-06-11 19:55:25,985:INFO:Importing libraries
2023-06-11 19:55:25,986:INFO:Copying training dataset
2023-06-11 19:55:25,990:INFO:Defining folds
2023-06-11 19:55:25,991:INFO:Declaring metric variables
2023-06-11 19:55:25,995:INFO:Importing untrained model
2023-06-11 19:55:26,000:INFO:Elastic Net Imported successfully
2023-06-11 19:55:26,009:INFO:Starting cross validation
2023-06-11 19:55:26,028:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:26,362:INFO:Calculating mean and std
2023-06-11 19:55:26,365:INFO:Creating metrics dataframe
2023-06-11 19:55:26,371:INFO:Uploading results into container
2023-06-11 19:55:26,372:INFO:Uploading model into container now
2023-06-11 19:55:26,373:INFO:master_model_container: 43
2023-06-11 19:55:26,373:INFO:display_container: 7
2023-06-11 19:55:26,373:INFO:ElasticNet(random_state=123)
2023-06-11 19:55:26,373:INFO:create_model() successfully completed......................................
2023-06-11 19:55:26,710:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:26,710:INFO:Creating metrics dataframe
2023-06-11 19:55:26,720:INFO:Initializing Least Angle Regression
2023-06-11 19:55:26,721:INFO:Total runtime is 0.04957468509674072 minutes
2023-06-11 19:55:26,725:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:26,726:INFO:Initializing create_model()
2023-06-11 19:55:26,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lar, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:26,726:INFO:Checking exceptions
2023-06-11 19:55:26,729:INFO:Importing libraries
2023-06-11 19:55:26,730:INFO:Copying training dataset
2023-06-11 19:55:26,734:INFO:Defining folds
2023-06-11 19:55:26,734:INFO:Declaring metric variables
2023-06-11 19:55:26,738:INFO:Importing untrained model
2023-06-11 19:55:26,744:INFO:Least Angle Regression Imported successfully
2023-06-11 19:55:26,756:INFO:Starting cross validation
2023-06-11 19:55:26,772:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:26,918:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:26,930:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:26,945:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:26,972:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:27,107:INFO:Calculating mean and std
2023-06-11 19:55:27,110:INFO:Creating metrics dataframe
2023-06-11 19:55:27,116:INFO:Uploading results into container
2023-06-11 19:55:27,117:INFO:Uploading model into container now
2023-06-11 19:55:27,118:INFO:master_model_container: 44
2023-06-11 19:55:27,118:INFO:display_container: 7
2023-06-11 19:55:27,118:INFO:Lars(random_state=123)
2023-06-11 19:55:27,118:INFO:create_model() successfully completed......................................
2023-06-11 19:55:27,492:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:27,492:INFO:Creating metrics dataframe
2023-06-11 19:55:27,502:INFO:Initializing Lasso Least Angle Regression
2023-06-11 19:55:27,502:INFO:Total runtime is 0.06260392665863036 minutes
2023-06-11 19:55:27,507:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:27,508:INFO:Initializing create_model()
2023-06-11 19:55:27,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=llar, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:27,508:INFO:Checking exceptions
2023-06-11 19:55:27,511:INFO:Importing libraries
2023-06-11 19:55:27,512:INFO:Copying training dataset
2023-06-11 19:55:27,517:INFO:Defining folds
2023-06-11 19:55:27,517:INFO:Declaring metric variables
2023-06-11 19:55:27,524:INFO:Importing untrained model
2023-06-11 19:55:27,530:INFO:Lasso Least Angle Regression Imported successfully
2023-06-11 19:55:27,542:INFO:Starting cross validation
2023-06-11 19:55:27,558:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:27,690:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:27,702:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:27,719:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:27,756:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-11 19:55:27,869:INFO:Calculating mean and std
2023-06-11 19:55:27,872:INFO:Creating metrics dataframe
2023-06-11 19:55:27,878:INFO:Uploading results into container
2023-06-11 19:55:27,879:INFO:Uploading model into container now
2023-06-11 19:55:27,880:INFO:master_model_container: 45
2023-06-11 19:55:27,880:INFO:display_container: 7
2023-06-11 19:55:27,881:INFO:LassoLars(random_state=123)
2023-06-11 19:55:27,881:INFO:create_model() successfully completed......................................
2023-06-11 19:55:28,251:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:28,251:INFO:Creating metrics dataframe
2023-06-11 19:55:28,266:INFO:Initializing Orthogonal Matching Pursuit
2023-06-11 19:55:28,266:INFO:Total runtime is 0.07533748547236124 minutes
2023-06-11 19:55:28,271:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:28,272:INFO:Initializing create_model()
2023-06-11 19:55:28,272:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=omp, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:28,272:INFO:Checking exceptions
2023-06-11 19:55:28,275:INFO:Importing libraries
2023-06-11 19:55:28,276:INFO:Copying training dataset
2023-06-11 19:55:28,280:INFO:Defining folds
2023-06-11 19:55:28,281:INFO:Declaring metric variables
2023-06-11 19:55:28,285:INFO:Importing untrained model
2023-06-11 19:55:28,291:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-11 19:55:28,303:INFO:Starting cross validation
2023-06-11 19:55:28,319:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:28,470:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:28,472:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:28,478:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:28,485:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-11 19:55:28,607:INFO:Calculating mean and std
2023-06-11 19:55:28,609:INFO:Creating metrics dataframe
2023-06-11 19:55:28,614:INFO:Uploading results into container
2023-06-11 19:55:28,615:INFO:Uploading model into container now
2023-06-11 19:55:28,615:INFO:master_model_container: 46
2023-06-11 19:55:28,615:INFO:display_container: 7
2023-06-11 19:55:28,616:INFO:OrthogonalMatchingPursuit()
2023-06-11 19:55:28,616:INFO:create_model() successfully completed......................................
2023-06-11 19:55:28,955:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:28,955:INFO:Creating metrics dataframe
2023-06-11 19:55:28,967:INFO:Initializing Bayesian Ridge
2023-06-11 19:55:28,968:INFO:Total runtime is 0.08702522913614909 minutes
2023-06-11 19:55:28,973:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:28,974:INFO:Initializing create_model()
2023-06-11 19:55:28,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=br, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:28,974:INFO:Checking exceptions
2023-06-11 19:55:28,977:INFO:Importing libraries
2023-06-11 19:55:28,978:INFO:Copying training dataset
2023-06-11 19:55:28,983:INFO:Defining folds
2023-06-11 19:55:28,983:INFO:Declaring metric variables
2023-06-11 19:55:28,988:INFO:Importing untrained model
2023-06-11 19:55:28,993:INFO:Bayesian Ridge Imported successfully
2023-06-11 19:55:29,004:INFO:Starting cross validation
2023-06-11 19:55:29,023:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:29,329:INFO:Calculating mean and std
2023-06-11 19:55:29,332:INFO:Creating metrics dataframe
2023-06-11 19:55:29,341:INFO:Uploading results into container
2023-06-11 19:55:29,343:INFO:Uploading model into container now
2023-06-11 19:55:29,343:INFO:master_model_container: 47
2023-06-11 19:55:29,344:INFO:display_container: 7
2023-06-11 19:55:29,344:INFO:BayesianRidge()
2023-06-11 19:55:29,345:INFO:create_model() successfully completed......................................
2023-06-11 19:55:29,685:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:29,685:INFO:Creating metrics dataframe
2023-06-11 19:55:29,702:INFO:Initializing Passive Aggressive Regressor
2023-06-11 19:55:29,702:INFO:Total runtime is 0.09926789204279582 minutes
2023-06-11 19:55:29,708:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:29,708:INFO:Initializing create_model()
2023-06-11 19:55:29,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=par, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:29,709:INFO:Checking exceptions
2023-06-11 19:55:29,712:INFO:Importing libraries
2023-06-11 19:55:29,712:INFO:Copying training dataset
2023-06-11 19:55:29,717:INFO:Defining folds
2023-06-11 19:55:29,718:INFO:Declaring metric variables
2023-06-11 19:55:29,723:INFO:Importing untrained model
2023-06-11 19:55:29,730:INFO:Passive Aggressive Regressor Imported successfully
2023-06-11 19:55:29,742:INFO:Starting cross validation
2023-06-11 19:55:29,757:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:29,971:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:29,979:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:29,989:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:30,004:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py:1527: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-06-11 19:55:30,128:INFO:Calculating mean and std
2023-06-11 19:55:30,131:INFO:Creating metrics dataframe
2023-06-11 19:55:30,138:INFO:Uploading results into container
2023-06-11 19:55:30,139:INFO:Uploading model into container now
2023-06-11 19:55:30,140:INFO:master_model_container: 48
2023-06-11 19:55:30,140:INFO:display_container: 7
2023-06-11 19:55:30,140:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-11 19:55:30,140:INFO:create_model() successfully completed......................................
2023-06-11 19:55:30,503:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:30,503:INFO:Creating metrics dataframe
2023-06-11 19:55:30,514:INFO:Initializing Huber Regressor
2023-06-11 19:55:30,515:INFO:Total runtime is 0.11280991633733115 minutes
2023-06-11 19:55:30,519:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:30,520:INFO:Initializing create_model()
2023-06-11 19:55:30,520:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=huber, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:30,520:INFO:Checking exceptions
2023-06-11 19:55:30,523:INFO:Importing libraries
2023-06-11 19:55:30,523:INFO:Copying training dataset
2023-06-11 19:55:30,527:INFO:Defining folds
2023-06-11 19:55:30,528:INFO:Declaring metric variables
2023-06-11 19:55:30,531:INFO:Importing untrained model
2023-06-11 19:55:30,536:INFO:Huber Regressor Imported successfully
2023-06-11 19:55:30,544:INFO:Starting cross validation
2023-06-11 19:55:30,563:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:30,891:INFO:Calculating mean and std
2023-06-11 19:55:30,894:INFO:Creating metrics dataframe
2023-06-11 19:55:30,899:INFO:Uploading results into container
2023-06-11 19:55:30,900:INFO:Uploading model into container now
2023-06-11 19:55:30,901:INFO:master_model_container: 49
2023-06-11 19:55:30,901:INFO:display_container: 7
2023-06-11 19:55:30,901:INFO:HuberRegressor()
2023-06-11 19:55:30,901:INFO:create_model() successfully completed......................................
2023-06-11 19:55:31,223:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:31,223:INFO:Creating metrics dataframe
2023-06-11 19:55:31,234:INFO:Initializing K Neighbors Regressor
2023-06-11 19:55:31,235:INFO:Total runtime is 0.12480727434158326 minutes
2023-06-11 19:55:31,239:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:31,239:INFO:Initializing create_model()
2023-06-11 19:55:31,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=knn, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:31,239:INFO:Checking exceptions
2023-06-11 19:55:31,242:INFO:Importing libraries
2023-06-11 19:55:31,242:INFO:Copying training dataset
2023-06-11 19:55:31,247:INFO:Defining folds
2023-06-11 19:55:31,247:INFO:Declaring metric variables
2023-06-11 19:55:31,252:INFO:Importing untrained model
2023-06-11 19:55:31,258:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:55:31,270:INFO:Starting cross validation
2023-06-11 19:55:31,287:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:31,596:INFO:Calculating mean and std
2023-06-11 19:55:31,599:INFO:Creating metrics dataframe
2023-06-11 19:55:31,603:INFO:Uploading results into container
2023-06-11 19:55:31,604:INFO:Uploading model into container now
2023-06-11 19:55:31,605:INFO:master_model_container: 50
2023-06-11 19:55:31,605:INFO:display_container: 7
2023-06-11 19:55:31,605:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:55:31,605:INFO:create_model() successfully completed......................................
2023-06-11 19:55:31,937:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:31,938:INFO:Creating metrics dataframe
2023-06-11 19:55:31,954:INFO:Initializing Decision Tree Regressor
2023-06-11 19:55:31,954:INFO:Total runtime is 0.13679478963216146 minutes
2023-06-11 19:55:31,958:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:31,958:INFO:Initializing create_model()
2023-06-11 19:55:31,958:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=dt, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:31,959:INFO:Checking exceptions
2023-06-11 19:55:31,962:INFO:Importing libraries
2023-06-11 19:55:31,962:INFO:Copying training dataset
2023-06-11 19:55:31,969:INFO:Defining folds
2023-06-11 19:55:31,969:INFO:Declaring metric variables
2023-06-11 19:55:31,974:INFO:Importing untrained model
2023-06-11 19:55:31,978:INFO:Decision Tree Regressor Imported successfully
2023-06-11 19:55:31,987:INFO:Starting cross validation
2023-06-11 19:55:32,004:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:32,326:INFO:Calculating mean and std
2023-06-11 19:55:32,329:INFO:Creating metrics dataframe
2023-06-11 19:55:32,336:INFO:Uploading results into container
2023-06-11 19:55:32,337:INFO:Uploading model into container now
2023-06-11 19:55:32,338:INFO:master_model_container: 51
2023-06-11 19:55:32,338:INFO:display_container: 7
2023-06-11 19:55:32,338:INFO:DecisionTreeRegressor(random_state=123)
2023-06-11 19:55:32,338:INFO:create_model() successfully completed......................................
2023-06-11 19:55:32,709:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:32,709:INFO:Creating metrics dataframe
2023-06-11 19:55:32,722:INFO:Initializing Random Forest Regressor
2023-06-11 19:55:32,723:INFO:Total runtime is 0.14960835774739584 minutes
2023-06-11 19:55:32,727:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:32,727:INFO:Initializing create_model()
2023-06-11 19:55:32,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=rf, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:32,727:INFO:Checking exceptions
2023-06-11 19:55:32,730:INFO:Importing libraries
2023-06-11 19:55:32,731:INFO:Copying training dataset
2023-06-11 19:55:32,736:INFO:Defining folds
2023-06-11 19:55:32,737:INFO:Declaring metric variables
2023-06-11 19:55:32,741:INFO:Importing untrained model
2023-06-11 19:55:32,746:INFO:Random Forest Regressor Imported successfully
2023-06-11 19:55:32,755:INFO:Starting cross validation
2023-06-11 19:55:32,774:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:33,799:INFO:Calculating mean and std
2023-06-11 19:55:33,802:INFO:Creating metrics dataframe
2023-06-11 19:55:33,806:INFO:Uploading results into container
2023-06-11 19:55:33,807:INFO:Uploading model into container now
2023-06-11 19:55:33,807:INFO:master_model_container: 52
2023-06-11 19:55:33,807:INFO:display_container: 7
2023-06-11 19:55:33,808:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:55:33,808:INFO:create_model() successfully completed......................................
2023-06-11 19:55:34,163:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:34,164:INFO:Creating metrics dataframe
2023-06-11 19:55:34,180:INFO:Initializing Extra Trees Regressor
2023-06-11 19:55:34,180:INFO:Total runtime is 0.1738975723584493 minutes
2023-06-11 19:55:34,184:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:34,185:INFO:Initializing create_model()
2023-06-11 19:55:34,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=et, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:34,185:INFO:Checking exceptions
2023-06-11 19:55:34,188:INFO:Importing libraries
2023-06-11 19:55:34,188:INFO:Copying training dataset
2023-06-11 19:55:34,193:INFO:Defining folds
2023-06-11 19:55:34,193:INFO:Declaring metric variables
2023-06-11 19:55:34,197:INFO:Importing untrained model
2023-06-11 19:55:34,201:INFO:Extra Trees Regressor Imported successfully
2023-06-11 19:55:34,210:INFO:Starting cross validation
2023-06-11 19:55:34,227:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:34,893:INFO:Calculating mean and std
2023-06-11 19:55:34,896:INFO:Creating metrics dataframe
2023-06-11 19:55:34,902:INFO:Uploading results into container
2023-06-11 19:55:34,903:INFO:Uploading model into container now
2023-06-11 19:55:34,903:INFO:master_model_container: 53
2023-06-11 19:55:34,904:INFO:display_container: 7
2023-06-11 19:55:34,904:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-11 19:55:34,904:INFO:create_model() successfully completed......................................
2023-06-11 19:55:35,254:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:35,254:INFO:Creating metrics dataframe
2023-06-11 19:55:35,266:INFO:Initializing AdaBoost Regressor
2023-06-11 19:55:35,266:INFO:Total runtime is 0.19200228055318197 minutes
2023-06-11 19:55:35,270:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:35,271:INFO:Initializing create_model()
2023-06-11 19:55:35,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=ada, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:35,271:INFO:Checking exceptions
2023-06-11 19:55:35,273:INFO:Importing libraries
2023-06-11 19:55:35,273:INFO:Copying training dataset
2023-06-11 19:55:35,278:INFO:Defining folds
2023-06-11 19:55:35,278:INFO:Declaring metric variables
2023-06-11 19:55:35,282:INFO:Importing untrained model
2023-06-11 19:55:35,287:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:55:35,296:INFO:Starting cross validation
2023-06-11 19:55:35,313:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:35,711:INFO:Calculating mean and std
2023-06-11 19:55:35,713:INFO:Creating metrics dataframe
2023-06-11 19:55:35,718:INFO:Uploading results into container
2023-06-11 19:55:35,718:INFO:Uploading model into container now
2023-06-11 19:55:35,719:INFO:master_model_container: 54
2023-06-11 19:55:35,719:INFO:display_container: 7
2023-06-11 19:55:35,719:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:55:35,719:INFO:create_model() successfully completed......................................
2023-06-11 19:55:36,063:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:36,063:INFO:Creating metrics dataframe
2023-06-11 19:55:36,078:INFO:Initializing Gradient Boosting Regressor
2023-06-11 19:55:36,078:INFO:Total runtime is 0.2055274287859599 minutes
2023-06-11 19:55:36,082:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:36,083:INFO:Initializing create_model()
2023-06-11 19:55:36,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=gbr, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:36,083:INFO:Checking exceptions
2023-06-11 19:55:36,086:INFO:Importing libraries
2023-06-11 19:55:36,086:INFO:Copying training dataset
2023-06-11 19:55:36,091:INFO:Defining folds
2023-06-11 19:55:36,091:INFO:Declaring metric variables
2023-06-11 19:55:36,096:INFO:Importing untrained model
2023-06-11 19:55:36,100:INFO:Gradient Boosting Regressor Imported successfully
2023-06-11 19:55:36,109:INFO:Starting cross validation
2023-06-11 19:55:36,126:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:36,830:INFO:Calculating mean and std
2023-06-11 19:55:36,833:INFO:Creating metrics dataframe
2023-06-11 19:55:36,839:INFO:Uploading results into container
2023-06-11 19:55:36,840:INFO:Uploading model into container now
2023-06-11 19:55:36,841:INFO:master_model_container: 55
2023-06-11 19:55:36,841:INFO:display_container: 7
2023-06-11 19:55:36,841:INFO:GradientBoostingRegressor(random_state=123)
2023-06-11 19:55:36,841:INFO:create_model() successfully completed......................................
2023-06-11 19:55:37,216:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:37,216:INFO:Creating metrics dataframe
2023-06-11 19:55:37,230:INFO:Initializing Light Gradient Boosting Machine
2023-06-11 19:55:37,231:INFO:Total runtime is 0.2247398614883423 minutes
2023-06-11 19:55:37,235:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:37,235:INFO:Initializing create_model()
2023-06-11 19:55:37,235:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lightgbm, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:37,235:INFO:Checking exceptions
2023-06-11 19:55:37,238:INFO:Importing libraries
2023-06-11 19:55:37,238:INFO:Copying training dataset
2023-06-11 19:55:37,245:INFO:Defining folds
2023-06-11 19:55:37,245:INFO:Declaring metric variables
2023-06-11 19:55:37,249:INFO:Importing untrained model
2023-06-11 19:55:37,254:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-11 19:55:37,266:INFO:Starting cross validation
2023-06-11 19:55:37,283:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:37,769:INFO:Calculating mean and std
2023-06-11 19:55:37,772:INFO:Creating metrics dataframe
2023-06-11 19:55:37,782:INFO:Uploading results into container
2023-06-11 19:55:37,783:INFO:Uploading model into container now
2023-06-11 19:55:37,783:INFO:master_model_container: 56
2023-06-11 19:55:37,783:INFO:display_container: 7
2023-06-11 19:55:37,784:INFO:LGBMRegressor(random_state=123)
2023-06-11 19:55:37,784:INFO:create_model() successfully completed......................................
2023-06-11 19:55:38,136:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:38,136:INFO:Creating metrics dataframe
2023-06-11 19:55:38,152:INFO:Initializing Dummy Regressor
2023-06-11 19:55:38,152:INFO:Total runtime is 0.24009592135747274 minutes
2023-06-11 19:55:38,156:INFO:SubProcess create_model() called ==================================
2023-06-11 19:55:38,157:INFO:Initializing create_model()
2023-06-11 19:55:38,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=dummy, fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0369d92050>, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:38,157:INFO:Checking exceptions
2023-06-11 19:55:38,162:INFO:Importing libraries
2023-06-11 19:55:38,162:INFO:Copying training dataset
2023-06-11 19:55:38,168:INFO:Defining folds
2023-06-11 19:55:38,168:INFO:Declaring metric variables
2023-06-11 19:55:38,172:INFO:Importing untrained model
2023-06-11 19:55:38,177:INFO:Dummy Regressor Imported successfully
2023-06-11 19:55:38,186:INFO:Starting cross validation
2023-06-11 19:55:38,202:INFO:Cross validating with KFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:55:38,509:INFO:Calculating mean and std
2023-06-11 19:55:38,513:INFO:Creating metrics dataframe
2023-06-11 19:55:38,519:INFO:Uploading results into container
2023-06-11 19:55:38,520:INFO:Uploading model into container now
2023-06-11 19:55:38,521:INFO:master_model_container: 57
2023-06-11 19:55:38,521:INFO:display_container: 7
2023-06-11 19:55:38,521:INFO:DummyRegressor()
2023-06-11 19:55:38,521:INFO:create_model() successfully completed......................................
2023-06-11 19:55:38,883:INFO:SubProcess create_model() end ==================================
2023-06-11 19:55:38,883:INFO:Creating metrics dataframe
2023-06-11 19:55:38,907:INFO:Initializing create_model()
2023-06-11 19:55:38,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:55:38,907:INFO:Checking exceptions
2023-06-11 19:55:38,912:INFO:Importing libraries
2023-06-11 19:55:38,912:INFO:Copying training dataset
2023-06-11 19:55:38,915:INFO:Defining folds
2023-06-11 19:55:38,916:INFO:Declaring metric variables
2023-06-11 19:55:38,916:INFO:Importing untrained model
2023-06-11 19:55:38,916:INFO:Declaring custom model
2023-06-11 19:55:38,916:INFO:K Neighbors Regressor Imported successfully
2023-06-11 19:55:38,931:INFO:Cross validation set to False
2023-06-11 19:55:38,931:INFO:Fitting Model
2023-06-11 19:55:39,037:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:55:39,038:INFO:create_model() successfully completed......................................
2023-06-11 19:55:39,412:INFO:master_model_container: 57
2023-06-11 19:55:39,413:INFO:display_container: 7
2023-06-11 19:55:39,413:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 19:55:39,413:INFO:compare_models() successfully completed......................................
2023-06-11 19:55:51,879:INFO:Initializing tune_model()
2023-06-11 19:55:51,880:INFO:tune_model(estimator=ada, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>)
2023-06-11 19:55:51,880:INFO:Checking exceptions
2023-06-11 19:56:04,771:INFO:Initializing tune_model()
2023-06-11 19:56:04,772:INFO:tune_model(estimator=AdaBoostRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>)
2023-06-11 19:56:04,772:INFO:Checking exceptions
2023-06-11 19:56:04,842:INFO:Copying training dataset
2023-06-11 19:56:04,853:INFO:Checking base model
2023-06-11 19:56:04,854:INFO:Base model : AdaBoost Regressor
2023-06-11 19:56:04,863:INFO:Declaring metric variables
2023-06-11 19:56:04,872:INFO:Defining Hyperparameters
2023-06-11 19:56:05,253:INFO:Tuning with n_jobs=-1
2023-06-11 19:56:05,253:INFO:Initializing RandomizedSearchCV
2023-06-11 19:56:19,244:INFO:best_params: {'actual_estimator__n_estimators': 80, 'actual_estimator__loss': 'exponential', 'actual_estimator__learning_rate': 0.4}
2023-06-11 19:56:19,245:INFO:Hyperparameter search completed
2023-06-11 19:56:19,246:INFO:SubProcess create_model() called ==================================
2023-06-11 19:56:19,246:INFO:Initializing create_model()
2023-06-11 19:56:19,246:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=AdaBoostRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0371092ad0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 80, 'loss': 'exponential', 'learning_rate': 0.4})
2023-06-11 19:56:19,246:INFO:Checking exceptions
2023-06-11 19:56:19,250:INFO:Importing libraries
2023-06-11 19:56:19,250:INFO:Copying training dataset
2023-06-11 19:56:19,255:INFO:Defining folds
2023-06-11 19:56:19,255:INFO:Declaring metric variables
2023-06-11 19:56:19,260:INFO:Importing untrained model
2023-06-11 19:56:19,261:INFO:Declaring custom model
2023-06-11 19:56:19,265:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:56:19,275:INFO:Starting cross validation
2023-06-11 19:56:19,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:56:20,529:INFO:Calculating mean and std
2023-06-11 19:56:20,532:INFO:Creating metrics dataframe
2023-06-11 19:56:20,547:INFO:Finalizing model
2023-06-11 19:56:20,900:INFO:Uploading results into container
2023-06-11 19:56:20,901:INFO:Uploading model into container now
2023-06-11 19:56:20,902:INFO:master_model_container: 58
2023-06-11 19:56:20,902:INFO:display_container: 8
2023-06-11 19:56:20,902:INFO:AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123)
2023-06-11 19:56:20,902:INFO:create_model() successfully completed......................................
2023-06-11 19:56:21,245:INFO:SubProcess create_model() end ==================================
2023-06-11 19:56:21,245:INFO:choose_better activated
2023-06-11 19:56:21,249:INFO:SubProcess create_model() called ==================================
2023-06-11 19:56:21,250:INFO:Initializing create_model()
2023-06-11 19:56:21,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=AdaBoostRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 19:56:21,250:INFO:Checking exceptions
2023-06-11 19:56:21,254:INFO:Importing libraries
2023-06-11 19:56:21,254:INFO:Copying training dataset
2023-06-11 19:56:21,258:INFO:Defining folds
2023-06-11 19:56:21,258:INFO:Declaring metric variables
2023-06-11 19:56:21,258:INFO:Importing untrained model
2023-06-11 19:56:21,258:INFO:Declaring custom model
2023-06-11 19:56:21,258:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:56:21,259:INFO:Starting cross validation
2023-06-11 19:56:21,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 19:56:22,038:INFO:Calculating mean and std
2023-06-11 19:56:22,039:INFO:Creating metrics dataframe
2023-06-11 19:56:22,044:INFO:Finalizing model
2023-06-11 19:56:22,234:INFO:Uploading results into container
2023-06-11 19:56:22,235:INFO:Uploading model into container now
2023-06-11 19:56:22,236:INFO:master_model_container: 59
2023-06-11 19:56:22,236:INFO:display_container: 9
2023-06-11 19:56:22,236:INFO:AdaBoostRegressor(random_state=123)
2023-06-11 19:56:22,236:INFO:create_model() successfully completed......................................
2023-06-11 19:56:22,588:INFO:SubProcess create_model() end ==================================
2023-06-11 19:56:22,589:INFO:AdaBoostRegressor(random_state=123) result for R2 is -66.0852
2023-06-11 19:56:22,589:INFO:AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123) result for R2 is -2.0437
2023-06-11 19:56:22,590:INFO:AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123) is best model
2023-06-11 19:56:22,590:INFO:choose_better completed
2023-06-11 19:56:22,600:INFO:master_model_container: 59
2023-06-11 19:56:22,601:INFO:display_container: 8
2023-06-11 19:56:22,601:INFO:AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123)
2023-06-11 19:56:22,601:INFO:tune_model() successfully completed......................................
2023-06-11 19:56:53,975:INFO:Initializing plot_model()
2023-06-11 19:56:53,976:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, system=True)
2023-06-11 19:56:53,976:INFO:Checking exceptions
2023-06-11 19:56:53,991:INFO:Preloading libraries
2023-06-11 19:56:54,006:INFO:Copying training dataset
2023-06-11 19:56:54,006:INFO:Plot type: residuals
2023-06-11 19:56:54,431:INFO:Fitting Model
2023-06-11 19:56:54,431:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but AdaBoostRegressor was fitted with feature names
  warnings.warn(

2023-06-11 19:56:54,499:INFO:Scoring test/hold-out set
2023-06-11 19:56:54,982:INFO:Visual Rendered Successfully
2023-06-11 19:56:55,385:INFO:plot_model() successfully completed......................................
2023-06-11 19:57:37,098:INFO:Initializing predict_model()
2023-06-11 19:57:37,098:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=AdaBoostRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f03968e3c70>)
2023-06-11 19:57:37,098:INFO:Checking exceptions
2023-06-11 19:57:37,098:INFO:Preloading libraries
2023-06-11 19:57:43,466:INFO:Initializing predict_model()
2023-06-11 19:57:43,466:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f03968e1bd0>)
2023-06-11 19:57:43,466:INFO:Checking exceptions
2023-06-11 19:57:43,466:INFO:Preloading libraries
2023-06-11 19:58:13,049:INFO:Initializing predict_model()
2023-06-11 19:58:13,049:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=AdaBoostRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f03968e0310>)
2023-06-11 19:58:13,049:INFO:Checking exceptions
2023-06-11 19:58:13,049:INFO:Preloading libraries
2023-06-11 19:58:13,055:INFO:Set up data.
2023-06-11 19:58:13,199:INFO:Set up index.
2023-06-11 19:58:13,558:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:58:26,900:INFO:Initializing finalize_model()
2023-06-11 19:58:26,901:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-06-11 19:58:26,902:INFO:Finalizing AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123)
2023-06-11 19:58:26,912:INFO:Initializing create_model()
2023-06-11 19:58:26,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=AdaBoostRegressor(learning_rate=0.4, loss='exponential', n_estimators=80,
                  random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-06-11 19:58:26,912:INFO:Checking exceptions
2023-06-11 19:58:26,916:INFO:Importing libraries
2023-06-11 19:58:26,916:INFO:Copying training dataset
2023-06-11 19:58:26,917:INFO:Defining folds
2023-06-11 19:58:26,917:INFO:Declaring metric variables
2023-06-11 19:58:26,918:INFO:Importing untrained model
2023-06-11 19:58:26,918:INFO:Declaring custom model
2023-06-11 19:58:26,919:INFO:AdaBoost Regressor Imported successfully
2023-06-11 19:58:26,946:INFO:Cross validation set to False
2023-06-11 19:58:26,946:INFO:Fitting Model
2023-06-11 19:58:27,198:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:58:30,092:INFO:Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 AdaBoostRegressor(learning_rate=0.4, loss='exponential',
                                   n_estimators=80, random_state=123))])
2023-06-11 19:58:30,092:INFO:create_model() successfully completed......................................
2023-06-11 19:58:30,476:INFO:Initializing predict_model()
2023-06-11 19:58:30,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 AdaBoostRegressor(learning_rate=0.4, loss='exponential',
                                   n_estimators=80, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f036a1a44c0>)
2023-06-11 19:58:30,476:INFO:Checking exceptions
2023-06-11 19:58:30,476:INFO:Preloading libraries
2023-06-11 19:58:30,476:INFO:Set up data.
2023-06-11 19:58:30,488:INFO:Set up index.
2023-06-11 19:58:30,637:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 19:58:31,208:INFO:display_container: 12
2023-06-11 19:58:31,208:INFO:master_model_container: 59
2023-06-11 19:58:31,208:INFO:display_container: 12
2023-06-11 19:58:31,225:INFO:Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 AdaBoostRegressor(learning_rate=0.4, loss='exponential',
                                   n_estimators=80, random_state=123))])
2023-06-11 19:58:31,225:INFO:finalize_model() successfully completed......................................
2023-06-11 19:58:53,504:INFO:Initializing predict_model()
2023-06-11 19:58:53,504:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 AdaBoostRegressor(learning_rate=0.4, loss='exponential',
                                   n_estimators=80, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f03968e3eb0>)
2023-06-11 19:58:53,504:INFO:Checking exceptions
2023-06-11 19:58:53,504:INFO:Preloading libraries
2023-06-11 19:58:53,691:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- x1 x11
- x1 x28
- x2 x7
- x5 x13
Feature names seen at fit time, yet now missing:
- x1 x13
- x11 x26
- x18 x25
- x5 x27

  warnings.warn(message, FutureWarning)

2023-06-11 19:59:27,570:INFO:Initializing predict_model()
2023-06-11 19:59:27,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 AdaBoostRegressor(learning_rate=0.4, loss='exponential',
                                   n_estimators=80, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f03968e13f0>)
2023-06-11 19:59:27,571:INFO:Checking exceptions
2023-06-11 19:59:27,571:INFO:Preloading libraries
2023-06-11 19:59:27,575:INFO:Set up data.
2023-06-11 19:59:27,635:INFO:Set up index.
2023-06-11 19:59:27,957:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-11 20:00:12,092:INFO:Initializing predict_model()
2023-06-11 20:00:12,093:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 AdaBoostRegressor(learning_rate=0.4, loss='exponential',
                                   n_estimators=80, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f03968e0c10>)
2023-06-11 20:00:12,093:INFO:Checking exceptions
2023-06-11 20:00:12,093:INFO:Preloading libraries
2023-06-11 20:00:12,097:INFO:Set up data.
2023-06-11 20:00:12,153:INFO:Set up index.
2023-06-11 20:01:57,637:INFO:Initializing plot_model()
2023-06-11 20:01:57,637:INFO:plot_model(plot=tree, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036b1a8ee0>, system=True)
2023-06-11 20:01:57,637:INFO:Checking exceptions
2023-06-11 20:05:13,716:INFO:Initializing create_model()
2023-06-11 20:05:13,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=lr, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 20:05:13,716:INFO:Checking exceptions
2023-06-11 20:05:13,785:INFO:Importing libraries
2023-06-11 20:05:13,785:INFO:Copying training dataset
2023-06-11 20:05:13,797:INFO:Defining folds
2023-06-11 20:05:13,797:INFO:Declaring metric variables
2023-06-11 20:05:13,806:INFO:Importing untrained model
2023-06-11 20:05:13,811:INFO:Linear Regression Imported successfully
2023-06-11 20:05:13,820:INFO:Starting cross validation
2023-06-11 20:05:13,837:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 20:05:16,996:INFO:Calculating mean and std
2023-06-11 20:05:17,000:INFO:Creating metrics dataframe
2023-06-11 20:05:17,015:INFO:Finalizing model
2023-06-11 20:05:17,163:INFO:Uploading results into container
2023-06-11 20:05:17,164:INFO:Uploading model into container now
2023-06-11 20:05:17,178:INFO:master_model_container: 60
2023-06-11 20:05:17,178:INFO:display_container: 16
2023-06-11 20:05:17,178:INFO:LinearRegression(n_jobs=-1)
2023-06-11 20:05:17,178:INFO:create_model() successfully completed......................................
2023-06-11 20:05:25,191:INFO:Initializing create_model()
2023-06-11 20:05:25,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=knn, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 20:05:25,191:INFO:Checking exceptions
2023-06-11 20:05:25,260:INFO:Importing libraries
2023-06-11 20:05:25,260:INFO:Copying training dataset
2023-06-11 20:05:25,270:INFO:Defining folds
2023-06-11 20:05:25,271:INFO:Declaring metric variables
2023-06-11 20:05:25,279:INFO:Importing untrained model
2023-06-11 20:05:25,289:INFO:K Neighbors Regressor Imported successfully
2023-06-11 20:05:25,301:INFO:Starting cross validation
2023-06-11 20:05:25,318:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 20:05:27,268:INFO:Calculating mean and std
2023-06-11 20:05:27,270:INFO:Creating metrics dataframe
2023-06-11 20:05:27,277:INFO:Finalizing model
2023-06-11 20:05:27,398:INFO:Uploading results into container
2023-06-11 20:05:27,399:INFO:Uploading model into container now
2023-06-11 20:05:27,411:INFO:master_model_container: 61
2023-06-11 20:05:27,412:INFO:display_container: 17
2023-06-11 20:05:27,412:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 20:05:27,412:INFO:create_model() successfully completed......................................
2023-06-11 20:05:30,878:INFO:Initializing tune_model()
2023-06-11 20:05:30,878:INFO:tune_model(estimator=KNeighborsRegressor(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>)
2023-06-11 20:05:30,878:INFO:Checking exceptions
2023-06-11 20:05:30,936:INFO:Copying training dataset
2023-06-11 20:05:30,944:INFO:Checking base model
2023-06-11 20:05:30,944:INFO:Base model : K Neighbors Regressor
2023-06-11 20:05:30,951:INFO:Declaring metric variables
2023-06-11 20:05:30,961:INFO:Defining Hyperparameters
2023-06-11 20:05:31,353:INFO:Tuning with n_jobs=-1
2023-06-11 20:05:31,353:INFO:Initializing RandomizedSearchCV
2023-06-11 20:05:36,262:INFO:best_params: {'actual_estimator__weights': 'distance', 'actual_estimator__n_neighbors': 42, 'actual_estimator__metric': 'minkowski'}
2023-06-11 20:05:36,265:INFO:Hyperparameter search completed
2023-06-11 20:05:36,266:INFO:SubProcess create_model() called ==================================
2023-06-11 20:05:36,266:INFO:Initializing create_model()
2023-06-11 20:05:36,266:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f036acb2230>, model_only=True, return_train_score=False, kwargs={'weights': 'distance', 'n_neighbors': 42, 'metric': 'minkowski'})
2023-06-11 20:05:36,266:INFO:Checking exceptions
2023-06-11 20:05:36,270:INFO:Importing libraries
2023-06-11 20:05:36,270:INFO:Copying training dataset
2023-06-11 20:05:36,274:INFO:Defining folds
2023-06-11 20:05:36,275:INFO:Declaring metric variables
2023-06-11 20:05:36,278:INFO:Importing untrained model
2023-06-11 20:05:36,279:INFO:Declaring custom model
2023-06-11 20:05:36,284:INFO:K Neighbors Regressor Imported successfully
2023-06-11 20:05:36,295:INFO:Starting cross validation
2023-06-11 20:05:36,312:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 20:05:36,962:INFO:Calculating mean and std
2023-06-11 20:05:36,965:INFO:Creating metrics dataframe
2023-06-11 20:05:36,971:INFO:Finalizing model
2023-06-11 20:05:37,117:INFO:Uploading results into container
2023-06-11 20:05:37,118:INFO:Uploading model into container now
2023-06-11 20:05:37,119:INFO:master_model_container: 62
2023-06-11 20:05:37,120:INFO:display_container: 18
2023-06-11 20:05:37,120:INFO:KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance')
2023-06-11 20:05:37,120:INFO:create_model() successfully completed......................................
2023-06-11 20:05:37,512:INFO:SubProcess create_model() end ==================================
2023-06-11 20:05:37,512:INFO:choose_better activated
2023-06-11 20:05:37,516:INFO:SubProcess create_model() called ==================================
2023-06-11 20:05:37,517:INFO:Initializing create_model()
2023-06-11 20:05:37,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-11 20:05:37,517:INFO:Checking exceptions
2023-06-11 20:05:37,521:INFO:Importing libraries
2023-06-11 20:05:37,521:INFO:Copying training dataset
2023-06-11 20:05:37,524:INFO:Defining folds
2023-06-11 20:05:37,524:INFO:Declaring metric variables
2023-06-11 20:05:37,524:INFO:Importing untrained model
2023-06-11 20:05:37,524:INFO:Declaring custom model
2023-06-11 20:05:37,525:INFO:K Neighbors Regressor Imported successfully
2023-06-11 20:05:37,525:INFO:Starting cross validation
2023-06-11 20:05:37,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-11 20:05:38,186:INFO:Calculating mean and std
2023-06-11 20:05:38,187:INFO:Creating metrics dataframe
2023-06-11 20:05:38,189:INFO:Finalizing model
2023-06-11 20:05:38,294:INFO:Uploading results into container
2023-06-11 20:05:38,295:INFO:Uploading model into container now
2023-06-11 20:05:38,295:INFO:master_model_container: 63
2023-06-11 20:05:38,295:INFO:display_container: 19
2023-06-11 20:05:38,295:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-11 20:05:38,295:INFO:create_model() successfully completed......................................
2023-06-11 20:05:38,663:INFO:SubProcess create_model() end ==================================
2023-06-11 20:05:38,664:INFO:KNeighborsRegressor(n_jobs=-1) result for R2 is -1.5771
2023-06-11 20:05:38,665:INFO:KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance') result for R2 is 0.3813
2023-06-11 20:05:38,665:INFO:KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance') is best model
2023-06-11 20:05:38,665:INFO:choose_better completed
2023-06-11 20:05:38,674:INFO:master_model_container: 63
2023-06-11 20:05:38,674:INFO:display_container: 18
2023-06-11 20:05:38,675:INFO:KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance')
2023-06-11 20:05:38,675:INFO:tune_model() successfully completed......................................
2023-06-11 20:05:47,791:INFO:Initializing plot_model()
2023-06-11 20:05:47,791:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, system=True)
2023-06-11 20:05:47,791:INFO:Checking exceptions
2023-06-11 20:05:47,802:INFO:Preloading libraries
2023-06-11 20:05:47,806:INFO:Copying training dataset
2023-06-11 20:05:47,806:INFO:Plot type: residuals
2023-06-11 20:05:48,278:INFO:Fitting Model
2023-06-11 20:05:48,278:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names
  warnings.warn(

2023-06-11 20:05:48,459:INFO:Scoring test/hold-out set
2023-06-11 20:05:48,972:INFO:Visual Rendered Successfully
2023-06-11 20:05:49,409:INFO:plot_model() successfully completed......................................
2023-06-11 20:05:56,259:INFO:Initializing plot_model()
2023-06-11 20:05:56,260:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, system=True)
2023-06-11 20:05:56,260:INFO:Checking exceptions
2023-06-11 20:05:56,269:INFO:Preloading libraries
2023-06-11 20:05:56,270:INFO:Copying training dataset
2023-06-11 20:05:56,270:INFO:Plot type: error
2023-06-11 20:05:56,715:INFO:Fitting Model
2023-06-11 20:05:56,716:WARNING:/home/user/.local/lib/python3.10/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names
  warnings.warn(

2023-06-11 20:05:56,716:INFO:Scoring test/hold-out set
2023-06-11 20:05:56,998:INFO:Visual Rendered Successfully
2023-06-11 20:05:57,403:INFO:plot_model() successfully completed......................................
2023-06-11 20:06:04,510:INFO:Initializing plot_model()
2023-06-11 20:06:04,510:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, system=True)
2023-06-11 20:06:04,510:INFO:Checking exceptions
2023-06-11 20:06:12,818:INFO:Initializing predict_model()
2023-06-11 20:06:12,819:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f0368d989d0>)
2023-06-11 20:06:12,819:INFO:Checking exceptions
2023-06-11 20:06:12,819:INFO:Preloading libraries
2023-06-11 20:06:17,410:INFO:Initializing predict_model()
2023-06-11 20:06:17,410:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f0393da05e0>)
2023-06-11 20:06:17,410:INFO:Checking exceptions
2023-06-11 20:06:17,410:INFO:Preloading libraries
2023-06-11 20:06:17,415:INFO:Set up data.
2023-06-11 20:06:17,489:INFO:Set up index.
2023-06-11 20:06:21,361:INFO:Initializing finalize_model()
2023-06-11 20:06:21,362:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-06-11 20:06:21,363:INFO:Finalizing KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance')
2023-06-11 20:06:21,371:INFO:Initializing create_model()
2023-06-11 20:06:21,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=KNeighborsRegressor(n_jobs=-1, n_neighbors=42, weights='distance'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-06-11 20:06:21,372:INFO:Checking exceptions
2023-06-11 20:06:21,375:INFO:Importing libraries
2023-06-11 20:06:21,376:INFO:Copying training dataset
2023-06-11 20:06:21,376:INFO:Defining folds
2023-06-11 20:06:21,376:INFO:Declaring metric variables
2023-06-11 20:06:21,377:INFO:Importing untrained model
2023-06-11 20:06:21,377:INFO:Declaring custom model
2023-06-11 20:06:21,378:INFO:K Neighbors Regressor Imported successfully
2023-06-11 20:06:21,406:INFO:Cross validation set to False
2023-06-11 20:06:21,406:INFO:Fitting Model
2023-06-11 20:06:21,654:INFO:Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 KNeighborsRegressor(n_jobs=-1, n_neighbors=42,
                                     weights='distance'))])
2023-06-11 20:06:21,654:INFO:create_model() successfully completed......................................
2023-06-11 20:06:22,046:INFO:Initializing predict_model()
2023-06-11 20:06:22,046:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 KNeighborsRegressor(n_jobs=-1, n_neighbors=42,
                                     weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f0370d0d750>)
2023-06-11 20:06:22,046:INFO:Checking exceptions
2023-06-11 20:06:22,046:INFO:Preloading libraries
2023-06-11 20:06:22,046:INFO:Set up data.
2023-06-11 20:06:22,058:INFO:Set up index.
2023-06-11 20:06:22,692:INFO:display_container: 21
2023-06-11 20:06:22,692:INFO:master_model_container: 63
2023-06-11 20:06:22,692:INFO:display_container: 21
2023-06-11 20:06:22,714:INFO:Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 KNeighborsRegressor(n_jobs=-1, n_neighbors=42,
                                     weights='distance'))])
2023-06-11 20:06:22,714:INFO:finalize_model() successfully completed......................................
2023-06-11 20:06:24,211:INFO:Initializing predict_model()
2023-06-11 20:06:24,211:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f036a194bb0>, estimator=Pipeline(memory=Memory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pib_prc_corr', 'pib_pc',
                                             'vab_agro', 'vab_ind', 'vab_serv',
                                             'vab_total', 'impostos',
                                             'prop_vab_ag', 'prop_vab_ind',
                                             'prop_vab_serv', 'valor_area_temp',
                                             'area_plantada_temp',
                                             'area_plantada_perm',
                                             'valor_area_perm', 'bovino',
                                             'suino_total', 'galinaceos_total',
                                             'pop_...
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=10,
                                                                threshold=-inf))),
                ('actual_estimator',
                 KNeighborsRegressor(n_jobs=-1, n_neighbors=42,
                                     weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f039626fd90>)
2023-06-11 20:06:24,212:INFO:Checking exceptions
2023-06-11 20:06:24,212:INFO:Preloading libraries
2023-06-11 20:06:24,216:INFO:Set up data.
2023-06-11 20:06:24,246:INFO:Set up index.
